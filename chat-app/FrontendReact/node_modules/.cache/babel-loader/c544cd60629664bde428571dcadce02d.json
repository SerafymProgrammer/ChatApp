{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Grid from\"@material-ui/core/Grid\";import Paper from\"@material-ui/core/Paper\";import Typography from\"@material-ui/core/Typography\";import ButtonBase from\"@material-ui/core/ButtonBase\";import{styled}from\"@material-ui/core/styles\";import{Container}from\"@material-ui/core\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\",marginTop:5,justifyContent:\"flex-start\"},myMsg:{display:\"flex\",marginTop:5,justifyContent:\"flex-end\"},paper:{padding:theme.spacing(1),maxWidth:200,borderRadius:20},msgText:{margin:\"auto\",display:\"block\",//maxWidth: \"100%\",\nmaxHeight:\"100%\"}};});export default function Message(props){var timeMessage=props.timeMessage,authorMessage=props.authorMessage,textMessage=props.textMessage,username=props.username,colorNickName=props.colorNickName;var classes=useStyles(username===authorMessage?\"flex-end\":\"flex-start\");return/*#__PURE__*/ (// <Container >\nReact.createElement(\"div\",{className:username===authorMessage?classes.myMsg:classes.root},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true,container:true,direction:\"column\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle2\",style:{color:colorNickName}},authorMessage)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Typography,{variant:\"body1\",style:{wordWrap:'break-word'}},textMessage)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},timeMessage)))))// </Container>\n);}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/message.jsx"],"names":["React","makeStyles","Grid","Paper","Typography","ButtonBase","styled","Container","useStyles","theme","root","display","marginTop","justifyContent","myMsg","paper","padding","spacing","maxWidth","borderRadius","msgText","margin","maxHeight","Message","props","timeMessage","authorMessage","textMessage","username","colorNickName","classes","color","wordWrap"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,SAAT,KAA0B,mBAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAACQ,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,SAAS,CAAE,CAFP,CAGJC,cAAc,CAAE,YAHZ,CADiC,CAMvCC,KAAK,CAAE,CACLH,OAAO,CAAE,MADJ,CAELC,SAAS,CAAE,CAFN,CAGLC,cAAc,CAAE,UAHX,CANgC,CAWvCE,KAAK,CAAE,CACLC,OAAO,CAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADJ,CAELC,QAAQ,CAAE,GAFL,CAGLC,YAAY,CAAE,EAHT,CAXgC,CAgBvCC,OAAO,CAAE,CACPC,MAAM,CAAE,MADD,CAEPV,OAAO,CAAE,OAFF,CAGP;AACAW,SAAS,CAAE,MAJJ,CAhB8B,CAAZ,EAAD,CAA5B,CAwBA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,IAC7BC,CAAAA,WAD6B,CACwCD,KADxC,CAC7BC,WAD6B,CAChBC,aADgB,CACwCF,KADxC,CAChBE,aADgB,CACDC,WADC,CACwCH,KADxC,CACDG,WADC,CACYC,QADZ,CACwCJ,KADxC,CACYI,QADZ,CACsBC,aADtB,CACwCL,KADxC,CACsBK,aADtB,CAErC,GAAMC,CAAAA,OAAO,CAAGtB,SAAS,CACvBoB,QAAQ,GAAKF,aAAb,CAA6B,UAA7B,CAA0C,YADnB,CAAzB,CAIA,oBACE;AACA,2BAAK,SAAS,CAAEE,QAAQ,GAAKF,aAAb,CAA6BI,OAAO,CAAChB,KAArC,CAA6CgB,OAAO,CAACpB,IAArE,eACE,oBAAC,KAAD,EAAO,SAAS,CAAEoB,OAAO,CAACf,KAA1B,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,CAAc,SAAS,KAAvB,CAAwB,SAAS,CAAC,QAAlC,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,eACE,oBAAC,UAAD,EAAa,OAAO,CAAC,WAArB,CAAiC,KAAK,CAAE,CAACgB,KAAK,CAAEF,aAAR,CAAxC,EACGH,aADH,CADF,CADF,cAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAE,CAACM,QAAQ,CAAE,YAAX,CAAnC,EACGL,WADH,CADF,CANF,cAWE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,EACGF,WADH,CADF,CAXF,CADF,CADF,CAqBA;AAvBF,EAyBD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    //maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName } = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    // <Container >\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={classes.paper}>\n        <Grid item xs container direction=\"column\">\n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n    // </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}