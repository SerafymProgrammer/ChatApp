{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/auth/SignIn.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport SignInForm from './form/SignInForm';\nimport * as actions from '../../redux/actions/authActions/auth.actions';\nimport BoxCenter from './UI/box/Center';\nimport AuthService from '../../services/auth.service';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport randomColor from 'randomcolor';\nimport { getRandomInt } from '../../services/helpers';\nconst colorsHues = ['red', 'orange', 'yellow', 'purple', 'green'];\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didInvalidate: false\n    };\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n\n    if (token) {\n      window.location.href = '/chat';\n      return;\n    }\n  }\n\n  login({\n    id,\n    username,\n    password\n  }) {\n    this.setState(state => ({\n      isFetching: true,\n      didInvalidate: false\n    }));\n    this.props.signIn({\n      id: null,\n      nickName: username,\n      password: password,\n      nickNameColor: randomColor({\n        luminosity: 'dark',\n        hue: colorsHues[getRandomInt(0, 5)]\n      })\n    }).catch(ex => {\n      console.log(ex);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoggedIn != this.props.isLoggedIn && this.props.isLoggedIn) {\n      window.location.href = '/chat';\n    }\n  }\n\n  render() {\n    const {\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(BoxCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LockIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(SignInForm, {\n      handleSubmit: data => this.login(data),\n      isFetching: isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Need an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Sign up\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: user => dispatch(actions.signIn(user))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/auth/SignIn.jsx"],"names":["React","Component","PropTypes","withRouter","Link","connect","Avatar","LockIcon","Typography","SignInForm","actions","BoxCenter","AuthService","useHistory","useLocation","randomColor","getRandomInt","colorsHues","SignIn","constructor","props","state","didInvalidate","componentDidMount","token","localStorage","getItem","window","location","href","login","id","username","password","setState","isFetching","signIn","nickName","nickNameColor","luminosity","hue","catch","ex","console","log","componentDidUpdate","prevProps","isLoggedIn","render","data","mapStateToProps","authReducer","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport SignInForm from './form/SignInForm'\nimport * as actions from '../../redux/actions/authActions/auth.actions'\nimport BoxCenter from './UI/box/Center'\nimport AuthService from '../../services/auth.service';\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport randomColor from 'randomcolor';\nimport { getRandomInt } from '../../services/helpers';\n\nconst colorsHues = ['red', 'orange', 'yellow', 'purple', 'green']\n\nclass SignIn extends Component {\n\n  constructor(props) {\n    super(props)\n    \n  this.state = {\n    didInvalidate: false,\n  }\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (token) {\n      window.location.href = '/chat';\n      return;\n    }\n\n  }\n\n  login({id, username, password}) {\n    this.setState((state) => ({\n      isFetching: true,\n      didInvalidate: false,\n    }))\n    \n\n    this.props.signIn({id: null, nickName:username, password: password, nickNameColor: randomColor(\n      {\n        luminosity: 'dark',\n        hue: colorsHues[getRandomInt(0, 5)]\n      }\n    )})\n    .catch(ex => {\n      console.log(ex)\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if ((prevProps.isLoggedIn != this.props.isLoggedIn) && (this.props.isLoggedIn)) {\n      window.location.href = '/chat';\n    }\n  }\n\n  render() {\n    const { isFetching } = this.props;\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm \n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n        <p>Need an account? <Link to='/signup'>Sign up</Link></p>\n      </BoxCenter>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\n"]},"metadata":{},"sourceType":"module"}