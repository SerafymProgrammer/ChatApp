{"ast":null,"code":"import _defineProperty from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useEffect,useCallback}from\"react\";import{ValidatorForm,TextValidator}from\"react-material-ui-form-validator\";import IconButton from\"@material-ui/core/IconButton\";import SendIcon from\"@material-ui/icons/Send\";import{useInput}from\"../../hooks/useInput\";import{makeStyles}from\"@material-ui/core/styles\";var useStyles=makeStyles(function(theme){return{inputMsg:_defineProperty({width:\"50%\"},theme.breakpoints.down(\"xs\"),{width:\"100%\"}),formMsg:{display:\"flex\"}};});var InputMessageForm=function InputMessageForm(props){var classes=useStyles();var _useInput=useInput(\"\"),message=_useInput.value,bindMessage=_useInput.bind,resetMessage=_useInput.reset;useEffect(function(){ValidatorForm.addValidationRule(\"maxSymbols\",function(value){return value.length<200;});return function(){ValidatorForm.removeValidationRule(\"maxSymbols\");};},[ValidatorForm]);var handleSubmit=useCallback(function(){var newMsg=message;resetMessage();props.handleSubmit(newMsg);});return/*#__PURE__*/React.createElement(ValidatorForm,{onSubmit:handleSubmit,className:classes.form},/*#__PURE__*/React.createElement(TextValidator,Object.assign({fullWidth:true,label:\"Message\"},bindMessage,{name:\"message\",validators:[\"required\",\"maxSymbols\"],errorMessages:[\"this field is required\",\"maximum 200 symbols\"],margin:\"normal\",className:classes.inputMsg})),/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"send\",type:\"submit\"},/*#__PURE__*/React.createElement(SendIcon,null)));};export default InputMessageForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx"],"names":["React","useEffect","useCallback","ValidatorForm","TextValidator","IconButton","SendIcon","useInput","makeStyles","useStyles","theme","inputMsg","width","breakpoints","down","formMsg","display","InputMessageForm","props","classes","message","value","bindMessage","bind","resetMessage","reset","addValidationRule","length","removeValidationRule","handleSubmit","newMsg","form"],"mappings":"oPAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,KAA8C,OAA9C,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,kCAA7C,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAACE,KAAD,QAAY,CACvCC,QAAQ,kBACNC,KAAK,CAAE,KADD,EAGLF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHK,CAG0B,CAC9BF,KAAK,CAAE,MADuB,CAH1B,CAD+B,CAQvCG,OAAO,CAAE,CACPC,OAAO,CAAE,MADF,CAR8B,CAAZ,EAAD,CAA5B,CAaA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAClC,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CADkC,cAEiCF,QAAQ,CAAC,EAAD,CAFzC,CAEnBa,OAFmB,WAE1BC,KAF0B,CAEJC,WAFI,WAEVC,IAFU,CAEgBC,YAFhB,WAESC,KAFT,CAIlCxB,SAAS,CAAC,UAAM,CACdE,aAAa,CAACuB,iBAAd,CAAgC,YAAhC,CAA8C,SAACL,KAAD,CAAW,CACvD,MAAOA,CAAAA,KAAK,CAACM,MAAN,CAAe,GAAtB,CACD,CAFD,EAIA,MAAO,WAAM,CACXxB,aAAa,CAACyB,oBAAd,CAAmC,YAAnC,EACD,CAFD,CAGD,CARQ,CAQN,CAACzB,aAAD,CARM,CAAT,CAUA,GAAM0B,CAAAA,YAAY,CAAG3B,WAAW,CAAC,UAAM,CACrC,GAAM4B,CAAAA,MAAM,CAAGV,OAAf,CACAI,YAAY,GACZN,KAAK,CAACW,YAAN,CAAmBC,MAAnB,EACD,CAJ+B,CAAhC,CAMA,mBACE,oBAAC,aAAD,EAAe,QAAQ,CAAED,YAAzB,CAAuC,SAAS,CAAEV,OAAO,CAACY,IAA1D,eACE,oBAAC,aAAD,gBACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,EAGMT,WAHN,EAIE,IAAI,CAAC,SAJP,CAKE,UAAU,CAAE,CAAC,UAAD,CAAa,YAAb,CALd,CAME,aAAa,CAAE,CAAC,wBAAD,CAA2B,qBAA3B,CANjB,CAOE,MAAM,CAAC,QAPT,CAQE,SAAS,CAAEH,OAAO,CAACR,QARrB,GADF,cAWE,oBAAC,UAAD,EAAY,aAAW,MAAvB,CAA8B,IAAI,CAAC,QAAnC,eACE,oBAAC,QAAD,MADF,CAXF,CADF,CAiBD,CArCD,CAuCA,cAAeM,CAAAA,gBAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputMsg: {\n    width: \"50%\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n    },\n  },\n  formMsg: {\n    display: \"flex\",\n  },\n}));\n\nconst InputMessageForm = (props) => {\n  const classes = useStyles();\n  const { value: message, bind: bindMessage, reset: resetMessage } = useInput(\"\");\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      return value.length < 200;\n    });\n\n    return () => {\n      ValidatorForm.removeValidationRule(\"maxSymbols\");\n    };\n  }, [ValidatorForm]);\n\n  const handleSubmit = useCallback(() => {\n    const newMsg = message;\n    resetMessage();\n    props.handleSubmit(newMsg);\n  });\n\n  return (\n    <ValidatorForm onSubmit={handleSubmit} className={classes.form}>\n      <TextValidator\n        fullWidth\n        label=\"Message\"\n        {...bindMessage}\n        name=\"message\"\n        validators={[\"required\", \"maxSymbols\"]}\n        errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n        margin=\"normal\"\n        className={classes.inputMsg}\n      />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n    </ValidatorForm>\n  );\n};\n\nexport default InputMessageForm;\n"]},"metadata":{},"sourceType":"module"}