{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/authPage/form/SignInForm.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const field = event.target.name;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.handleSubmit(this.state);\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", value => {\n      if (value.length < 3) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", value => {\n      if (/[^A-zА-яЁё0-9]/.test(value)) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState(state => ({\n      username: \"\",\n      password: \"\"\n    }));\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    const {\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      fullWidth: true,\n      label: \"Username\",\n      onChange: this.handleChange,\n      name: \"username\",\n      value: username,\n      validators: [\"required\", \"moreThanThreeChar\", \"notAllowedSpecialSymbols\"],\n      errorMessages: [\"this field is required\", \"3 characters minimum\", \"Not allowed special symbols\"],\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      fullWidth: true,\n      label: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      name: \"password\",\n      value: password,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      color: \"primary\",\n      type: \"submit\",\n      disabled: isFetching,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, isFetching && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 26\n      }\n    }), \" Sign In\"));\n  }\n\n}\n\nexport default SignInForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/authPage/form/SignInForm.jsx"],"names":["React","Component","Button","ValidatorForm","TextValidator","CircularProgress","SignInForm","constructor","props","handleChange","event","value","target","field","name","setState","handleSubmit","state","username","password","componentDidMount","addValidationRule","length","test","componentWillUnmount","removeValidationRule","reset","render","isFetching"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBC,YAnCmB,GAmCHC,KAAD,IAAW;AACxB,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaE,IAA3B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACF,KAAD,GAASF;AAAX,OAAd;AACD,KAvCkB;;AAAA,SAyCnBK,YAzCmB,GAyCJ,MAAM;AACnB,WAAKR,KAAL,CAAWQ,YAAX,CAAwB,KAAKC,KAA7B;AACD,KA3CkB;;AAEjB,SAAKA,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,aAAa,CAACkB,iBAAd,CAAgC,mBAAhC,EAAsDV,KAAD,IAAW;AAC9D,UAAIA,KAAK,CAACW,MAAN,GAAe,CAAnB,EAAsB;AACpB,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KALD;AAMAnB,IAAAA,aAAa,CAACkB,iBAAd,CAAgC,0BAAhC,EAA6DV,KAAD,IAAW;AACrE,UAAI,iBAAiBY,IAAjB,CAAsBZ,KAAtB,CAAJ,EAAkC;AAChC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KALD;AAMD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrBrB,IAAAA,aAAa,CAACsB,oBAAd,CAAmC,mBAAnC;AACAtB,IAAAA,aAAa,CAACsB,oBAAd,CAAmC,0BAAnC;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKX,QAAL,CAAeE,KAAD,KAAY;AACxBC,MAAAA,QAAQ,EAAE,EADc;AAExBC,MAAAA,QAAQ,EAAE;AAFc,KAAZ,CAAd;AAID;;AAYDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKF,KAApC;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAiB,KAAKpB,KAA5B;AAEA,wBACE,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKQ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,QAAQ,EAAE,KAAKP,YAHjB;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAES,QALT;AAME,MAAA,UAAU,EAAE,CACV,UADU,EAEV,mBAFU,EAGV,0BAHU,CANd;AAWE,MAAA,aAAa,EAAE,CACb,wBADa,EAEb,sBAFa,EAGb,6BAHa,CAXjB;AAgBE,MAAA,MAAM,EAAC,QAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAmBE,oBAAC,aAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAE,KAAKT,YAJjB;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,KAAK,EAAEU,QANT;AAOE,MAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,MAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,MAAA,MAAM,EAAC,QATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,eA8BE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,QAAQ,EAAES,UALZ;AAME,MAAA,MAAM,EAAC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGA,UAAU,iBAAI,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARjB,aA9BF,CADF;AA2CD;;AA7FgC;;AAgGnC,eAAetB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      if (value.length < 3) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      if (/[^A-zА-яЁё0-9]/.test(value)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: \"\",\n      password: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    this.props.handleSubmit(this.state);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    const { isFetching } = this.props;\n\n    return (\n      <ValidatorForm ref=\"form\" onSubmit={this.handleSubmit}>\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={[\n            \"required\",\n            \"moreThanThreeChar\",\n            \"notAllowedSpecialSymbols\",\n          ]}\n          errorMessages={[\n            \"this field is required\",\n            \"3 characters minimum\",\n            \"Not allowed special symbols\",\n          ]}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Sign In\n        </Button>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}