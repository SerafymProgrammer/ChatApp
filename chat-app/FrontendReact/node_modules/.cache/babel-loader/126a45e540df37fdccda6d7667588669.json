{"ast":null,"code":"import SocketConnect from \"../../../services/chat.service\";\nimport io from \"socket.io-client\";\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n} // export function getOneDay(dayNumber) {\n//     return async (dispatch) => {\n//       await SheduleService.getOneDay(dayNumber)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(response => {\n//           dispatch(selectedDay(response));\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n//   export function addExerciseOfSelectedDay(dayNumber, exerciseList) {\n//     return async (dispatch) => {\n//       await SheduleService.updateExercisesOfSelectedDay(dayNumber, exerciseList)\n//         .then(response => {\n//           dispatch(getAllDays());\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n\nexport function setSocket(socket) {\n  return {\n    type: 'SET_SOCKET',\n    socket\n  };\n}\nexport function allOnlineUsers(onlineUsers) {\n  return {\n    type: 'ONLINE_USERS',\n    onlineUsers\n  };\n}\nexport function AllUsers(allUsers) {\n  return {\n    type: 'ALL_USERS',\n    allUsers\n  };\n}\nexport function isConnected(isConnected) {\n  return {\n    type: 'IS_CONNECTED',\n    isConnected\n  };\n}\nexport function allMessages(messages) {\n  return {\n    type: 'ALL_MESSAGES',\n    messages\n  };\n}\nexport function setIsMuteStatus(isMuted) {\n  return {\n    type: 'IS_MUTED',\n    isMuted\n  };\n}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/redux/actions/chatActions/chat.actions.js"],"names":["SocketConnect","io","initWebSocketConnection","dispatch","token","localStorage","getItem","socket","getSocket","setSocket","type","allOnlineUsers","onlineUsers","AllUsers","allUsers","isConnected","allMessages","messages","setIsMuteStatus","isMuted"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,gCAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAChD,SAAO,YAAY;AACjB,QAAIC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,QAAIC,MAAM,GAAG,IAAIP,aAAJ,CAAkBI,KAAlB,EAAyBI,SAAzB,EAAb;;AAEA,QAAGD,MAAH,EAAW;AAETJ,MAAAA,QAAQ,CAACM,SAAS,CAACF,MAAD,CAAV,CAAR;AACD;AACF,GARD;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,SAAT,CAAmBF,MAAnB,EAA2B;AAChC,SAAO;AACLG,IAAAA,IAAI,EAAE,YADD;AAELH,IAAAA;AAFK,GAAP;AAID;AAEC,OAAO,SAASI,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,SAAO;AACLF,IAAAA,IAAI,EAAE,cADD;AAELE,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAE,WADD;AAELI,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,WAAT,CAAqBA,WAArB,EAAkC;AACvC,SAAO;AACLL,IAAAA,IAAI,EAAE,cADD;AAELK,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AACpC,SAAO;AACLP,IAAAA,IAAI,EAAE,cADD;AAELO,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,SAAO;AACLT,IAAAA,IAAI,EAAE,UADD;AAELS,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import SocketConnect from \"../../../services/chat.service\";\nimport io from \"socket.io-client\";\n\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n    \n    if(socket) {\n\n      dispatch(setSocket(socket));\n    } \n  };\n}\n  \n// export function getOneDay(dayNumber) {\n//     return async (dispatch) => {\n//       await SheduleService.getOneDay(dayNumber)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(response => {\n//           dispatch(selectedDay(response));\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \n//   export function addExerciseOfSelectedDay(dayNumber, exerciseList) {\n//     return async (dispatch) => {\n//       await SheduleService.updateExercisesOfSelectedDay(dayNumber, exerciseList)\n//         .then(response => {\n//           dispatch(getAllDays());\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \nexport function setSocket(socket) {\n  return {\n    type: 'SET_SOCKET',\n    socket,\n  };\n}\n\n  export function allOnlineUsers(onlineUsers) {\n    return {\n      type: 'ONLINE_USERS',\n      onlineUsers,\n    };\n  }\n  \n  export function AllUsers(allUsers) {\n    return {\n      type: 'ALL_USERS',\n      allUsers,\n    };\n  }\n\n  export function isConnected(isConnected) {\n    return {\n      type: 'IS_CONNECTED',\n      isConnected,\n    };\n  }\n\n  export function allMessages(messages) {\n    return {\n      type: 'ALL_MESSAGES',\n      messages,\n    };\n  }\n\n  export function setIsMuteStatus(isMuted) {\n    return {\n      type: 'IS_MUTED',\n      isMuted,\n    };\n  }"]},"metadata":{},"sourceType":"module"}