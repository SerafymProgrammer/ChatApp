{"ast":null,"code":"import _objectSpread from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initialState={allUsers:[],isConnected:false,socket:null,messages:[]};export default function chatReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ALL_USERS\":return _objectSpread(_objectSpread({},state),{},{allUsers:action.allUsers});case\"IS_CONNECTED\":return _objectSpread(_objectSpread({},state),{},{isConnected:action.isConnected});case\"SET_SOCKET\":return _objectSpread(_objectSpread({},state),{},{socket:action.socket});case\"ALL_MESSAGES\":return _objectSpread(_objectSpread({},state),{},{messages:action.messages});default:return state;}}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/redux/reducers/chatReducers/chatReducer.js"],"names":["initialState","allUsers","isConnected","socket","messages","chatReducer","state","action","type"],"mappings":"6PAAA,GAAMA,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAEnBC,WAAW,CAAE,KAFM,CAGnBC,MAAM,CAAE,IAHW,CAInBC,QAAQ,CAAE,EAJS,CAArB,CAOA,cAAe,SAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,WAAL,CACE,sCACKF,KADL,MAEEL,QAAQ,CAAEM,MAAM,CAACN,QAFnB,GAKF,IAAK,cAAL,CACE,sCACKK,KADL,MAEEJ,WAAW,CAAEK,MAAM,CAACL,WAFtB,GAIF,IAAK,YAAL,CACE,sCACKI,KADL,MAEEH,MAAM,CAAEI,MAAM,CAACJ,MAFjB,GAIF,IAAK,cAAL,CACE,sCACKG,KADL,MAEEF,QAAQ,CAAEG,MAAM,CAACH,QAFnB,GAIF,QACE,MAAOE,CAAAA,KAAP,CAvBJ,CAyBD","sourcesContent":["const initialState = {\n  allUsers: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ALL_USERS\":\n      return {\n        ...state,\n        allUsers: action.allUsers,\n      };\n\n    case \"IS_CONNECTED\":\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case \"SET_SOCKET\":\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case \"ALL_MESSAGES\":\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}