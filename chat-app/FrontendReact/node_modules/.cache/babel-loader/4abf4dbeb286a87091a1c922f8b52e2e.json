{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/authPage/SignIn.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\nimport randomColor from \"randomcolor\";\nimport { getRandomInt } from \"../../services/helpers\";\nimport { colorsHues } from '../../constants';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n\n    if (token) {\n      window.location.href = \"/chat\";\n      return;\n    }\n  }\n\n  login({\n    id,\n    username,\n    password\n  }) {\n    this.props.signIn({\n      id: null,\n      nickName: username,\n      password: password,\n      nickNameColor: randomColor({\n        luminosity: \"dark\",\n        hue: colorsHues[getRandomInt(0, 5)]\n      })\n    }).catch(ex => {\n      alert(ex.message);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoggedIn !== this.props.isLoggedIn && this.props.isLoggedIn) {\n      window.location.href = \"/chat\";\n    }\n  }\n\n  render() {\n    const {\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(BoxCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LockIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(SignInForm, {\n      handleSubmit: data => this.login(data),\n      isFetching: isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: user => dispatch(actions.signIn(user))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/authPage/SignIn.jsx"],"names":["React","Component","connect","Avatar","LockIcon","Typography","SignInForm","actions","BoxCenter","randomColor","getRandomInt","colorsHues","SignIn","constructor","props","state","componentDidMount","token","localStorage","getItem","window","location","href","login","id","username","password","signIn","nickName","nickNameColor","luminosity","hue","catch","ex","alert","message","componentDidUpdate","prevProps","isLoggedIn","render","isFetching","data","mapStateToProps","authReducer","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8CAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;;AAGA,MAAMC,MAAN,SAAqBX,SAArB,CAA+B;AAC7BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AACA,QAAIF,KAAJ,EAAW;AACTG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACA;AACD;AACF;;AAEDC,EAAAA,KAAK,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,GAAD,EAA6B;AAEhC,SAAKZ,KAAL,CACGa,MADH,CACU;AACNH,MAAAA,EAAE,EAAE,IADE;AAENI,MAAAA,QAAQ,EAAEH,QAFJ;AAGNC,MAAAA,QAAQ,EAAEA,QAHJ;AAING,MAAAA,aAAa,EAAEpB,WAAW,CAAC;AACzBqB,QAAAA,UAAU,EAAE,MADa;AAEzBC,QAAAA,GAAG,EAAEpB,UAAU,CAACD,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAb;AAFU,OAAD;AAJpB,KADV,EAUGsB,KAVH,CAUUC,EAAD,IAAQ;AACbC,MAAAA,KAAK,CAACD,EAAE,CAACE,OAAJ,CAAL;AACD,KAZH;AAaD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QACEA,SAAS,CAACC,UAAV,KAAyB,KAAKxB,KAAL,CAAWwB,UAApC,IACA,KAAKxB,KAAL,CAAWwB,UAFb,EAGE;AACAlB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAK1B,KAA5B;AAEA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAOE,oBAAC,UAAD;AACE,MAAA,YAAY,EAAG2B,IAAD,IAAU,KAAKlB,KAAL,CAAWkB,IAAX,CAD1B;AAEE,MAAA,UAAU,EAAED,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAcD;;AAzD4B;;AA4D/B,SAASE,eAAT,CAAyB3B,KAAzB,EAAgC;AAC9B,SAAO;AACLuB,IAAAA,UAAU,EAAEvB,KAAK,CAAC4B,WAAN,CAAkBL,UADzB;AAELE,IAAAA,UAAU,EAAEzB,KAAK,CAAC4B,WAAN,CAAkBH;AAFzB,GAAP;AAID;;AACD,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,MAAM,EAAGmB,IAAD,IAAUD,QAAQ,CAACtC,OAAO,CAACoB,MAAR,CAAemB,IAAf,CAAD;AADrB,GAAP;AAGD;;AAED,eAAe5C,OAAO,CAACwC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChC,MAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\nimport randomColor from \"randomcolor\";\nimport { getRandomInt } from \"../../services/helpers\";\nimport {colorsHues} from '../../constants'; \n\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (token) {\n      window.location.href = \"/chat\";\n      return;\n    }\n  }\n\n  login({ id, username, password }) {\n\n    this.props\n      .signIn({\n        id: null,\n        nickName: username,\n        password: password,\n        nickNameColor: randomColor({\n          luminosity: \"dark\",\n          hue: colorsHues[getRandomInt(0, 5)],\n        }),\n      })\n      .catch((ex) => {\n        alert(ex.message);\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isLoggedIn !== this.props.isLoggedIn &&\n      this.props.isLoggedIn\n    ) {\n      window.location.href = \"/chat\";\n    }\n  }\n\n  render() {\n    const { isFetching } = this.props;\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm\n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n      </BoxCenter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}