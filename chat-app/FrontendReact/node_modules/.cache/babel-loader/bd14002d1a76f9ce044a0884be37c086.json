{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx\";\nimport React, { useEffect, useCallback } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  inputMsg: {\n    width: \"50%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\"\n    }\n  },\n  formMsg: {\n    display: \"flex\"\n  }\n}));\n\nconst InputMessageForm = props => {\n  const classes = useStyles();\n  const {\n    value: message,\n    bind: bindMessage,\n    reset: resetMessage\n  } = useInput(\"\");\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"maxSymbols\", value => {\n      return value.length < 200;\n    });\n    return () => {\n      ValidatorForm.removeValidationRule(\"maxSymbols\");\n    };\n  }, [ValidatorForm]);\n  const handleSubmit = useCallback(() => {\n    const newMsg = message;\n    resetMessage();\n    props.handleSubmit(newMsg);\n  });\n  return /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, Object.assign({\n    fullWidth: true,\n    label: \"Message\"\n  }, bindMessage, {\n    name: \"message\",\n    validators: [\"required\", \"maxSymbols\"],\n    errorMessages: [\"this field is required\", \"maximum 200 symbols\"],\n    margin: \"normal\",\n    className: classes.inputMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"send\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default InputMessageForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx"],"names":["React","useEffect","useCallback","ValidatorForm","TextValidator","IconButton","SendIcon","useInput","makeStyles","useStyles","theme","inputMsg","width","breakpoints","down","formMsg","display","InputMessageForm","props","classes","value","message","bind","bindMessage","reset","resetMessage","addValidationRule","length","removeValidationRule","handleSubmit","newMsg","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,KADC;AAGR,KAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,KAAK,EAAE;AADuB;AAHxB,GAD6B;AAQvCG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF;AAR8B,CAAZ,CAAD,CAA5B;;AAaA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAAEW,IAAAA,KAAK,EAAEC,OAAT;AAAkBC,IAAAA,IAAI,EAAEC,WAAxB;AAAqCC,IAAAA,KAAK,EAAEC;AAA5C,MAA6DlB,QAAQ,CAAC,EAAD,CAA3E;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa,CAACuB,iBAAd,CAAgC,YAAhC,EAA+CN,KAAD,IAAW;AACvD,aAAOA,KAAK,CAACO,MAAN,GAAe,GAAtB;AACD,KAFD;AAIA,WAAO,MAAM;AACXxB,MAAAA,aAAa,CAACyB,oBAAd,CAAmC,YAAnC;AACD,KAFD;AAGD,GARQ,EAQN,CAACzB,aAAD,CARM,CAAT;AAUA,QAAM0B,YAAY,GAAG3B,WAAW,CAAC,MAAM;AACrC,UAAM4B,MAAM,GAAGT,OAAf;AACAI,IAAAA,YAAY;AACZP,IAAAA,KAAK,CAACW,YAAN,CAAmBC,MAAnB;AACD,GAJ+B,CAAhC;AAMA,sBACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAED,YAAzB;AAAuC,IAAA,SAAS,EAAEV,OAAO,CAACY,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC;AAFR,KAGMR,WAHN;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,UAAU,EAAE,CAAC,UAAD,EAAa,YAAb,CALd;AAME,IAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,qBAA3B,CANjB;AAOE,IAAA,MAAM,EAAC,QAPT;AAQE,IAAA,SAAS,EAAEJ,OAAO,CAACR,QARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAWE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAiBD,CArCD;;AAuCA,eAAeM,gBAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputMsg: {\n    width: \"50%\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n    },\n  },\n  formMsg: {\n    display: \"flex\",\n  },\n}));\n\nconst InputMessageForm = (props) => {\n  const classes = useStyles();\n  const { value: message, bind: bindMessage, reset: resetMessage } = useInput(\"\");\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      return value.length < 200;\n    });\n\n    return () => {\n      ValidatorForm.removeValidationRule(\"maxSymbols\");\n    };\n  }, [ValidatorForm]);\n\n  const handleSubmit = useCallback(() => {\n    const newMsg = message;\n    resetMessage();\n    props.handleSubmit(newMsg);\n  });\n\n  return (\n    <ValidatorForm onSubmit={handleSubmit} className={classes.form}>\n      <TextValidator\n        fullWidth\n        label=\"Message\"\n        {...bindMessage}\n        name=\"message\"\n        validators={[\"required\", \"maxSymbols\"]}\n        errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n        margin=\"normal\"\n        className={classes.inputMsg}\n      />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n    </ValidatorForm>\n  );\n};\n\nexport default InputMessageForm;\n"]},"metadata":{},"sourceType":"module"}