{"ast":null,"code":"import React,{useEffect,useCallback}from\"react\";import Button from\"@material-ui/core/Button\";import{ValidatorForm,TextValidator}from\"react-material-ui-form-validator\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{useInput}from'../../hooks/useInput';var SignInForm=function SignInForm(_ref){var isFetching=_ref.isFetching,handleSubmit=_ref.handleSubmit;var _useInput=useInput(''),username=_useInput.value,bindUserName=_useInput.bind,resetUserName=_useInput.reset;var _useInput2=useInput(''),password=_useInput2.value,bindPassword=_useInput2.bind,resetPassword=_useInput2.reset;useEffect(function(){ValidatorForm.addValidationRule(\"moreThanThreeChar\",function(value){return value.length>3;});ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\",function(value){return!/[^A-zА-яЁё0-9]/.test(value);});return function(){ValidatorForm.removeValidationRule(\"moreThanThreeChar\");ValidatorForm.removeValidationRule(\"moreThanThreeChar\");};},[ValidatorForm]);var handleSubmitCallback=useCallback(function(evt){evt.preventDefault();handleSubmit({username:username,password:password});},[username,password,handleSubmit]);return/*#__PURE__*/React.createElement(ValidatorForm,{onSubmit:handleSubmitCallback},/*#__PURE__*/React.createElement(TextValidator,Object.assign({fullWidth:true,label:\"Username\",name:\"username\"},bindUserName,{validators:[\"required\",\"moreThanThreeChar\",\"notAllowedSpecialSymbols\"],errorMessages:[\"this field is required\",\"3 characters minimum\",\"Not allowed special symbols\"],margin:\"normal\"})),/*#__PURE__*/React.createElement(TextValidator,Object.assign({fullWidth:true,label:\"Password\",type:\"password\"},bindPassword,{name:\"password\",validators:[\"required\"],errorMessages:[\"this field is required\"],margin:\"normal\"})),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",type:\"submit\",disabled:isFetching,margin:\"normal\"},isFetching&&/*#__PURE__*/React.createElement(CircularProgress,{size:20}),\" Sign In\"));};export default SignInForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/authPage/form/SignInForm.jsx"],"names":["React","useEffect","useCallback","Button","ValidatorForm","TextValidator","CircularProgress","useInput","SignInForm","isFetching","handleSubmit","username","value","bindUserName","bind","resetUserName","reset","password","bindPassword","resetPassword","addValidationRule","length","test","removeValidationRule","handleSubmitCallback","evt","preventDefault"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,KAA8C,OAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,kCAA7C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,OAAQC,QAAR,KAAuB,sBAAvB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAkC,IAA/BC,CAAAA,UAA+B,MAA/BA,UAA+B,CAAnBC,YAAmB,MAAnBA,YAAmB,eAEgBH,QAAQ,CAAC,EAAD,CAFxB,CAErCI,QAFqC,WAE3CC,KAF2C,CAEtBC,YAFsB,WAE3BC,IAF2B,CAEFC,aAFE,WAERC,KAFQ,gBAGgBT,QAAQ,CAAC,EAAD,CAHxB,CAGrCU,QAHqC,YAG3CL,KAH2C,CAGtBM,YAHsB,YAG3BJ,IAH2B,CAGFK,aAHE,YAGRH,KAHQ,CAKnDf,SAAS,CAAC,UAAM,CACdG,aAAa,CAACgB,iBAAd,CAAgC,mBAAhC,CAAqD,SAACR,KAAD,CAAW,CAC9D,MAAOA,CAAAA,KAAK,CAACS,MAAN,CAAe,CAAtB,CACD,CAFD,EAGAjB,aAAa,CAACgB,iBAAd,CAAgC,0BAAhC,CAA4D,SAACR,KAAD,CAAW,CACrE,MAAO,CAAE,iBAAiBU,IAAjB,CAAsBV,KAAtB,CAAT,CACD,CAFD,EAIA,MAAO,WAAM,CACXR,aAAa,CAACmB,oBAAd,CAAmC,mBAAnC,EACAnB,aAAa,CAACmB,oBAAd,CAAmC,mBAAnC,EACD,CAHD,CAID,CAZQ,CAYN,CAACnB,aAAD,CAZM,CAAT,CAeA,GAAMoB,CAAAA,oBAAoB,CAAGtB,WAAW,CAAC,SAACuB,GAAD,CAAS,CAChDA,GAAG,CAACC,cAAJ,GACAhB,YAAY,CAAC,CAACC,QAAQ,CAARA,QAAD,CAAWM,QAAQ,CAARA,QAAX,CAAD,CAAZ,CACD,CAHuC,CAGrC,CAACN,QAAD,CAAWM,QAAX,CAAqBP,YAArB,CAHqC,CAAxC,CAKA,mBACE,oBAAC,aAAD,EAAgB,QAAQ,CAAEc,oBAA1B,eACE,oBAAC,aAAD,gBACE,SAAS,KADX,CAEE,KAAK,CAAC,UAFR,CAGE,IAAI,CAAC,UAHP,EAIMX,YAJN,EAKE,UAAU,CAAE,CACV,UADU,CAEV,mBAFU,CAGV,0BAHU,CALd,CAUE,aAAa,CAAE,CACb,wBADa,CAEb,sBAFa,CAGb,6BAHa,CAVjB,CAeE,MAAM,CAAC,QAfT,GADF,cAkBE,oBAAC,aAAD,gBACE,SAAS,KADX,CAEE,KAAK,CAAC,UAFR,CAGE,IAAI,CAAC,UAHP,EAIMK,YAJN,EAKE,IAAI,CAAC,UALP,CAME,UAAU,CAAE,CAAC,UAAD,CANd,CAOE,aAAa,CAAE,CAAC,wBAAD,CAPjB,CAQE,MAAM,CAAC,QART,GAlBF,cA4BE,oBAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,SAAS,KAFX,CAGE,KAAK,CAAC,SAHR,CAIE,IAAI,CAAC,QAJP,CAKE,QAAQ,CAAET,UALZ,CAME,MAAM,CAAC,QANT,EAQGA,UAAU,eAAI,oBAAC,gBAAD,EAAkB,IAAI,CAAE,EAAxB,EARjB,YA5BF,CADF,CAyCD,CAlED,CAuEA,cAAeD,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {useInput} from '../../hooks/useInput'\n\nconst SignInForm = ({ isFetching, handleSubmit }) => {\n\n  const { value:username, bind:bindUserName, reset:resetUserName } = useInput('');\n  const { value:password, bind:bindPassword, reset:resetPassword } = useInput('');\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      return value.length > 3;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      return !(/[^A-zА-яЁё0-9]/.test(value));\n    });\n\n    return () => {\n      ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n      ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    }\n  }, [ValidatorForm]);\n\n\n  const handleSubmitCallback = useCallback((evt) => {\n    evt.preventDefault();\n    handleSubmit({username, password});\n  }, [username, password, handleSubmit]);\n\n  return (\n    <ValidatorForm  onSubmit={handleSubmitCallback}>\n      <TextValidator\n        fullWidth\n        label=\"Username\"\n        name=\"username\"\n        {...bindUserName}\n        validators={[\n          \"required\",\n          \"moreThanThreeChar\",\n          \"notAllowedSpecialSymbols\",\n        ]}\n        errorMessages={[\n          \"this field is required\",\n          \"3 characters minimum\",\n          \"Not allowed special symbols\",\n        ]}\n        margin=\"normal\"\n      />\n      <TextValidator\n        fullWidth\n        label=\"Password\"\n        type=\"password\"\n        {...bindPassword}\n        name=\"password\"\n        validators={[\"required\"]}\n        errorMessages={[\"this field is required\"]}\n        margin=\"normal\"\n      />\n      <Button\n        variant=\"contained\"\n        fullWidth\n        color=\"primary\"\n        type=\"submit\"\n        disabled={isFetching}\n        margin=\"normal\"\n      >\n        {isFetching && <CircularProgress size={20} />} Sign In\n      </Button>\n    </ValidatorForm>\n  );\n}\n\n\n\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}