{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/message.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\"\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    backgroundColor: '#c1e2ce'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    //maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\nexport default function Message(props) {\n  const {\n    timeMessage,\n    authorMessage,\n    textMessage,\n    username,\n    colorNickName\n  } = props;\n  const classes = useStyles(username === authorMessage ? \"flex-end\" : \"flex-start\");\n  return (\n    /*#__PURE__*/\n    // <Container >\n    React.createElement(\"div\", {\n      className: username === authorMessage ? classes.myMsg : classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      style: {\n        color: colorNickName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, authorMessage)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      style: {\n        wordWrap: 'break-word'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, textMessage)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, timeMessage))))) // </Container>\n\n  );\n}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/message.jsx"],"names":["React","makeStyles","Grid","Paper","Typography","ButtonBase","styled","Container","useStyles","theme","root","display","marginTop","justifyContent","myMsg","backgroundColor","paper","padding","spacing","maxWidth","borderRadius","msgText","margin","maxHeight","Message","props","timeMessage","authorMessage","textMessage","username","colorNickName","classes","color","wordWrap"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    backgroundColor: '#c1e2ce'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    //maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName } = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    // <Container >\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={classes.paper}>\n        <Grid item xs container direction=\"column\">\n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n    // </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}