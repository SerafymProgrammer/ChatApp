{"ast":null,"code":"import _regeneratorRuntime from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import AuthService from\"../../../services/auth.service\";export var isSignedInUser=function isSignedInUser(isLoggedIn){return{type:\"IS_LOGGED_IN\",isLoggedIn:isLoggedIn};};export var setIsFetching=function setIsFetching(isFetching){return{type:\"IS_FETCHING\",isFetching:isFetching};};export function signIn(user){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return dispatch(setIsFetching(true));case 2:_context2.next=4;return AuthService.loginUser(user).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var a;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return response.json();case 2:a=_context.sent;return _context.abrupt(\"return\",a);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()).then(function(response){if(response.status===500){dispatch(setIsFetching(false));alert(response.msg);}else if(response.userToken&&response.status===200){localStorage.setItem(\"userToken\",response.userToken);dispatch(isSignedInUser(true));}else{throw new Error(\"Unknown error\");}}).catch(function(error){alert(error.message);dispatch(setIsFetching(false));});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}();}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/redux/actions/authActions/auth.actions.js"],"names":["AuthService","isSignedInUser","isLoggedIn","type","setIsFetching","isFetching","signIn","user","dispatch","loginUser","then","response","json","a","status","alert","msg","userToken","localStorage","setItem","Error","catch","error","message"],"mappings":"yfAAA,MAAOA,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CAC5C,MAAO,CACLC,IAAI,CAAE,cADD,CAELD,UAAU,CAAVA,UAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,CAAgB,CAC3C,MAAO,CACLF,IAAI,CAAE,aADD,CAELE,UAAU,CAAVA,UAFK,CAAP,CAID,CALM,CAOP,MAAO,SAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CAC3B,+FAAO,kBAAOC,QAAP,6IACCA,CAAAA,QAAQ,CAACJ,aAAa,CAAC,IAAD,CAAd,CADT,+BAECJ,CAAAA,WAAW,CAACS,SAAZ,CAAsBF,IAAtB,EACHG,IADG,2FACE,iBAAOC,QAAP,8IACUA,CAAAA,QAAQ,CAACC,IAAT,EADV,QACAC,CADA,+CAEGA,CAFH,wDADF,kEAKHH,IALG,CAKE,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACG,MAAT,GAAoB,GAAxB,CAA6B,CAC3BN,QAAQ,CAACJ,aAAa,CAAC,KAAD,CAAd,CAAR,CACAW,KAAK,CAACJ,QAAQ,CAACK,GAAV,CAAL,CACD,CAHD,IAGO,IAAIL,QAAQ,CAACM,SAAT,EAAsBN,QAAQ,CAACG,MAAT,GAAoB,GAA9C,CAAmD,CACxDI,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCR,QAAQ,CAACM,SAA3C,EACAT,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR,CACD,CAHM,IAGA,CACL,KAAM,IAAImB,CAAAA,KAAJ,CAAU,eAAV,CAAN,CACD,CACF,CAfG,EAgBHC,KAhBG,CAgBG,SAACC,KAAD,CAAW,CAChBP,KAAK,CAACO,KAAK,CAACC,OAAP,CAAL,CACAf,QAAQ,CAACJ,aAAa,CAAC,KAAD,CAAd,CAAR,CACD,CAnBG,CAFD,yDAAP,+DAuBD","sourcesContent":["import AuthService from \"../../../services/auth.service\";\n\nexport const isSignedInUser = (isLoggedIn) => {\n  return {\n    type: \"IS_LOGGED_IN\",\n    isLoggedIn,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: \"IS_FETCHING\",\n    isFetching,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then(async (response) => {\n        let a = await response.json();\n        return a;\n      })\n      .then((response) => {\n        if (response.status === 500) {\n          dispatch(setIsFetching(false));\n          alert(response.msg);\n        } else if (response.userToken && response.status === 200) {\n          localStorage.setItem(\"userToken\", response.userToken);\n          dispatch(isSignedInUser(true));\n        } else {\n          throw new Error(\"Unknown error\");\n        }\n      })\n      .catch((error) => {\n        alert(error.message);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}