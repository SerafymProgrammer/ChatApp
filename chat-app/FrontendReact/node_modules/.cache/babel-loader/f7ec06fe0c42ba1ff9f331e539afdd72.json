{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/drawerRooms.jsx\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport * as constants from '../../../constants';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nconst DrawerChatRooms = props => {\n  const {\n    showRoomsContainer,\n    setShowRoomsContainer,\n    currentUserName,\n    goToOneToOneRoome\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const rooms = useSelector(state => state.chatReducer.rooms, shallowEqual); // console.log(rooms[0].messages[\n  //   rooms[0].messages.length - 1\n  // ])\n\n  console.log(rooms);\n\n  const handleDrawerClose = () => {\n    setShowRoomsContainer(false);\n  };\n\n  const handleGoToOneToOneRoome = room => {\n    debugger;\n    const {\n      users,\n      roomId\n    } = room;\n    let id;\n    roomId === constants.DEFAULT_ROOM_ID ? id = constants.DEFAULT_ROOM_NAME : id = users.find(user => user.nickName !== currentUserName).userId;\n    goToOneToOneRoome(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: showRoomsContainer,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Chat rooms\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, theme.direction === \"ltr\" ? /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, rooms.map((room, index) => {\n    var _room$messages;\n\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: `room-${index}`,\n      onClick: () => handleGoToOneToOneRoome(room),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: room.roomName.replace(currentUserName, \"\"),\n      secondary: ((_room$messages = room.messages) === null || _room$messages === void 0 ? void 0 : _room$messages.length) ? room.messages[0].textMessage.substring(0, 50) : 'none',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DrawerChatRooms;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/drawerRooms.jsx"],"names":["React","useState","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemText","useSelector","shallowEqual","constants","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","DrawerChatRooms","props","showRoomsContainer","setShowRoomsContainer","currentUserName","goToOneToOneRoome","classes","rooms","state","chatReducer","console","log","handleDrawerClose","handleGoToOneToOneRoome","room","users","roomId","id","DEFAULT_ROOM_ID","DEFAULT_ROOM_NAME","find","user","nickName","userId","paper","direction","map","index","roomName","replace","messages","length","textMessage","substring"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport * as constants from '../../../constants'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst DrawerChatRooms = (props) => {\n  const {\n    showRoomsContainer,\n    setShowRoomsContainer,\n    currentUserName,\n    goToOneToOneRoome,\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const rooms = useSelector((state) => state.chatReducer.rooms, shallowEqual);\n\n  // console.log(rooms[0].messages[\n  //   rooms[0].messages.length - 1\n  // ])\n\n  console.log(rooms)\n\n  const handleDrawerClose = () => {\n    setShowRoomsContainer(false);\n  };\n\n  const handleGoToOneToOneRoome = (room) => {\n    debugger;\n    const { users, roomId } = room;\n    let id;\n    roomId === constants.DEFAULT_ROOM_ID\n      ? (id = constants.DEFAULT_ROOM_NAME)\n      : (id = users.find((user) => user.nickName !== currentUserName).userId);\n\n    goToOneToOneRoome(id);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={showRoomsContainer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Chat rooms\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {rooms.map((room, index) => (\n            <ListItem\n              button\n              key={`room-${index}`}\n              onClick={() =>\n                handleGoToOneToOneRoome(room)\n              }\n            >\n              <ListItemText\n                primary={room.roomName.replace(currentUserName, \"\")}\n                secondary={\n                  room.messages?.length ? room.messages[0].textMessage.substring(0, 50) \n                  : \n                  'none'}\n              />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default DrawerChatRooms;\n"]},"metadata":{},"sourceType":"module"}