{"ast":null,"code":"import AuthService from \"../../../services/auth.service\";\nimport * as actionTypes from './actions.types';\nimport { store } from 'store';\nexport const setIsFetching = isFetching => {\n  return {\n    type: actionTypes.IS_FETCHING,\n    isFetching\n  };\n};\nexport function signIn(user) {\n  return async dispatch => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user).then(response => {\n      const {\n        token,\n        isAdmin,\n        nickNameColor,\n        nickName\n      } = response.data;\n      store.set(\"token\", response.data.token);\n      store.set(\"userData\", {\n        isAdmin,\n        nickName,\n        nickNameColor\n      });\n    }).then(response => {// dispatch(setIsFetching(false));\n      // alert(response.msg);\n    }).catch(error => {\n      alert(error.message);\n      dispatch(setIsFetching(false));\n    });\n  };\n}","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/redux/actions/authActions/auth.actions.js"],"names":["AuthService","actionTypes","store","setIsFetching","isFetching","type","IS_FETCHING","signIn","user","dispatch","loginUser","then","response","token","isAdmin","nickNameColor","nickName","data","set","catch","error","alert","message"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,SAAQC,KAAR,QAAoB,OAApB;AAEA,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,WADb;AAELF,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,SAASG,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMA,QAAQ,CAACN,aAAa,CAAC,IAAD,CAAd,CAAd;AACA,UAAMH,WAAW,CAACU,SAAZ,CAAsBF,IAAtB,EACHG,IADG,CACIC,QAAD,IAAc;AACnB,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA,aAAjB;AAAgCC,QAAAA;AAAhC,UAA4CJ,QAAQ,CAACK,IAA3D;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAU,OAAV,EAAmBN,QAAQ,CAACK,IAAT,CAAcJ,KAAjC;AACAX,MAAAA,KAAK,CAACgB,GAAN,CAAU,UAAV,EAAsB;AAACJ,QAAAA,OAAD;AAAUE,QAAAA,QAAV;AAAoBD,QAAAA;AAApB,OAAtB;AACD,KALG,EAMHJ,IANG,CAMGC,QAAD,IAAc,CAEhB;AACA;AAEH,KAXG,EAYHO,KAZG,CAYIC,KAAD,IAAW;AAChBC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACAb,MAAAA,QAAQ,CAACN,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,KAfG,CAAN;AAgBD,GAlBD;AAmBD","sourcesContent":["import AuthService from \"../../../services/auth.service\";\nimport * as actionTypes from './actions.types';\nimport {store} from 'store';\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: actionTypes.IS_FETCHING,\n    isFetching,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then( (response) => {\n        const {token, isAdmin, nickNameColor, nickName} = response.data;\n        store.set(\"token\", response.data.token);\n        store.set(\"userData\", {isAdmin, nickName, nickNameColor});\n      })\n      .then((response) => {\n\n          // dispatch(setIsFetching(false));\n          // alert(response.msg);\n   \n      })\n      .catch((error) => {\n        alert(error.message);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}