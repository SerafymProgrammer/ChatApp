{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{Container}from\"@material-ui/core\";import{styled}from\"@material-ui/core/styles\";import Message from\"./message\";import moment from\"moment\";var MessagesContainer=styled(Container)({background:\"inherit\",display:\"flex\",flexDirection:\"column\",overflowY:\"scroll\",height:\"inherit\",maxHeight:\"inherit\",paddingBottom:10});var MessageContainer=function MessageContainer(props){var messages=props.messages,username=props.username;var myRef=useRef(null);useEffect(function(){myRef.current.scrollTop=myRef.current.scrollHeight;},[messages,myRef]);return/*#__PURE__*/React.createElement(MessagesContainer,{ref:myRef},messages.map(function(item,index){return/*#__PURE__*/React.createElement(Message,{key:\"key-msg-\".concat(index),timeMessage:moment(item.timeMessage).calendar(),authorMessage:item.authorMessage,textMessage:item.textMessage,username:username,colorNickName:item.colorAuthorName});}));};export default MessageContainer;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx"],"names":["React","useEffect","useRef","Container","styled","Message","moment","MessagesContainer","background","display","flexDirection","overflowY","height","maxHeight","paddingBottom","MessageContainer","props","messages","username","myRef","current","scrollTop","scrollHeight","map","item","index","timeMessage","calendar","authorMessage","textMessage","colorAuthorName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,SAAT,KAA0B,mBAA1B,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,GAAMC,CAAAA,iBAAiB,CAAGH,MAAM,CAACD,SAAD,CAAN,CAAkB,CAC1CK,UAAU,CAAE,SAD8B,CAE1CC,OAAO,CAAE,MAFiC,CAG1CC,aAAa,CAAE,QAH2B,CAI1CC,SAAS,CAAE,QAJ+B,CAK1CC,MAAM,CAAE,SALkC,CAM1CC,SAAS,CAAE,SAN+B,CAO1CC,aAAa,CAAE,EAP2B,CAAlB,CAA1B,CAUA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,IAC1BC,CAAAA,QAD0B,CACHD,KADG,CAC1BC,QAD0B,CAChBC,QADgB,CACHF,KADG,CAChBE,QADgB,CAElC,GAAMC,CAAAA,KAAK,CAAGjB,MAAM,CAAC,IAAD,CAApB,CAEAD,SAAS,CAAC,UAAM,CACdkB,KAAK,CAACC,OAAN,CAAcC,SAAd,CAA0BF,KAAK,CAACC,OAAN,CAAcE,YAAxC,CACD,CAFQ,CAEN,CAACL,QAAD,CAAWE,KAAX,CAFM,CAAT,CAIA,mBACE,oBAAC,iBAAD,EAAmB,GAAG,CAAEA,KAAxB,EACGF,QAAQ,CAACM,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,qBACZ,oBAAC,OAAD,EACE,GAAG,mBAAaA,KAAb,CADL,CAEE,WAAW,CAAEnB,MAAM,CAACkB,IAAI,CAACE,WAAN,CAAN,CAAyBC,QAAzB,EAFf,CAGE,aAAa,CAAEH,IAAI,CAACI,aAHtB,CAIE,WAAW,CAAEJ,IAAI,CAACK,WAJpB,CAKE,QAAQ,CAAEX,QALZ,CAME,aAAa,CAAEM,IAAI,CAACM,eANtB,EADY,EAAb,CADH,CADF,CAcD,CAtBD,CAwBA,cAAef,CAAAA,gBAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Message from \"./message\";\nimport moment from \"moment\";\n\nconst MessagesContainer = styled(Container)({\n  background: \"inherit\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflowY: \"scroll\",\n  height: \"inherit\",\n  maxHeight: \"inherit\",\n  paddingBottom: 10,\n});\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n\n  return (\n    <MessagesContainer ref={myRef}>\n      {messages.map((item, index) => (\n        <Message\n          key={`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </MessagesContainer>\n  );\n};\n\nexport default MessageContainer;\n"]},"metadata":{},"sourceType":"module"}