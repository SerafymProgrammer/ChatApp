{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nconst MessagesContainer = styled(Container)({\n  background: \"inherit\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflowY: \"scroll\",\n  height: \"inherit\",\n  maxHeight: \"inherit\"\n});\n\nconst MessageContainer = props => {\n  const {\n    messages,\n    username\n  } = props;\n\n  const GenMessage = index => /*#__PURE__*/React.createElement(Message, {\n    key: `key-msg-${index}`,\n    timeMessage: moment(messages[index].timeMessage).calendar(),\n    authorMessage: messages[index].authorMessage,\n    textMessage: messages[index].textMessage,\n    username: username,\n    colorNickName: messages[index].colorAuthorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(MessagesContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, messages.map((item, index) => /*#__PURE__*/React.createElement(Message, {\n    key: `key-msg-${index}`,\n    timeMessage: moment(item.timeMessage).calendar(),\n    authorMessage: item.authorMessage,\n    textMessage: item.textMessage,\n    username: username,\n    colorNickName: item.colorAuthorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MessageContainer;","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx"],"names":["React","useState","useEffect","useCallback","useRef","Container","styled","Message","moment","MessagesContainer","background","display","flexDirection","overflowY","height","maxHeight","MessageContainer","props","messages","username","GenMessage","index","timeMessage","calendar","authorMessage","textMessage","colorAuthorName","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,iBAAiB,GAAGH,MAAM,CAACD,SAAD,CAAN,CAAkB;AAC1CK,EAAAA,UAAU,EAAE,SAD8B;AAE1CC,EAAAA,OAAO,EAAE,MAFiC;AAG1CC,EAAAA,aAAa,EAAE,QAH2B;AAI1CC,EAAAA,SAAS,EAAE,QAJ+B;AAK1CC,EAAAA,MAAM,EAAE,SALkC;AAM1CC,EAAAA,SAAS,EAAE;AAN+B,CAAlB,CAA1B;;AAWA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B;;AAEA,QAAMG,UAAU,GAAIC,KAAD,iBACjB,oBAAC,OAAD;AACA,IAAA,GAAG,EAAK,WAAUA,KAAM,EADxB;AAEA,IAAA,WAAW,EAAEb,MAAM,CAACU,QAAQ,CAACG,KAAD,CAAR,CAAgBC,WAAjB,CAAN,CAAoCC,QAApC,EAFb;AAGA,IAAA,aAAa,EAAEL,QAAQ,CAACG,KAAD,CAAR,CAAgBG,aAH/B;AAIA,IAAA,WAAW,EAAEN,QAAQ,CAACG,KAAD,CAAR,CAAgBI,WAJ7B;AAKA,IAAA,QAAQ,EAAEN,QALV;AAMA,IAAA,aAAa,EAAED,QAAQ,CAACG,KAAD,CAAR,CAAgBK,eAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAUA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACS,GAAT,CAAa,CAACC,IAAD,EAAOP,KAAP,kBACZ,oBAAC,OAAD;AACE,IAAA,GAAG,EAAK,WAAUA,KAAM,EAD1B;AAEE,IAAA,WAAW,EAAEb,MAAM,CAACoB,IAAI,CAACN,WAAN,CAAN,CAAyBC,QAAzB,EAFf;AAGE,IAAA,aAAa,EAAEK,IAAI,CAACJ,aAHtB;AAIE,IAAA,WAAW,EAAEI,IAAI,CAACH,WAJpB;AAKE,IAAA,QAAQ,EAAEN,QALZ;AAME,IAAA,aAAa,EAAES,IAAI,CAACF,eANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAcD,CA3BD;;AA6BA,eAAeV,gBAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Message from \"./message\";\nimport moment from \"moment\";\n\nconst MessagesContainer = styled(Container)({\n  background: \"inherit\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflowY: \"scroll\",\n  height: \"inherit\",\n  maxHeight: \"inherit\",\n});\n\n\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n    \n  const GenMessage = (index) => (\n    <Message\n    key = {`key-msg-${index}`}\n    timeMessage={moment(messages[index].timeMessage).calendar()}\n    authorMessage={messages[index].authorMessage}\n    textMessage={messages[index].textMessage}\n    username={username}\n    colorNickName={messages[index].colorAuthorName}\n   />\n  )\n  return (\n    <MessagesContainer>\n      {messages.map((item, index) => (\n        <Message\n          key = {`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </MessagesContainer>\n  );\n};\n\nexport default MessageContainer;\n"]},"metadata":{},"sourceType":"module"}