{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx\";\nimport React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport { withStyles } from '@material-ui/core/styles';\nimport store from 'store';\n\nconst styles = theme => ({\n  chatContainer: {\n    background: \"#6d81af\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    margin: 0,\n    padding: 0,\n    height: 800,\n    position: 'relative',\n    maxHeight: 1000,\n    [theme.breakpoints.down('xs')]: {\n      height: 300,\n      maxHeight: 600\n    },\n    [theme.breakpoints.down('sm')]: {\n      height: 600,\n      maxHeight: 800\n    }\n  }\n});\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.colorNickName = \"white\";\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      nickName: \"\",\n      isMuted: false,\n      showUsersContainer: true\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    await this.props.initConnection();\n    const {\n      socket\n    } = this.props;\n    socket.on(\"users\", res => {\n      this.props.setUsers(res);\n    });\n    socket.on(\"previousMessages\", res => this.setState({\n      messages: res\n    }));\n    socket.on(\"error\", msg => {\n      alert(msg);\n      this.props.history.push('/login');\n    });\n    socket.on(\"initialMuteStatus\", IsMute => {\n      this.setState({\n        isMuted: IsMute\n      });\n    });\n    socket.on(\"mute\", IsMute => {\n      this.setState({\n        isMuted: IsMute\n      });\n    });\n    socket.on(\"chat\", res => this.setState({\n      messages: [...this.state.messages, res]\n    }));\n    socket.on(\"disconnect\", socket => {\n      store.clearAll();\n      this.props.history.push('/login');\n    });\n    const {\n      nickNameColor,\n      isAdmin,\n      nickName\n    } = store.get('userData');\n    this.colorNickName = nickNameColor;\n    this.setState({\n      isAdmin,\n      nickName\n    });\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    store.clearAll();\n    this.props.socket.disconnect(true);\n    this.props.history.push('/login');\n  }\n\n  render() {\n    const {\n      isConnected,\n      users,\n      classes\n    } = this.props;\n    const {\n      isAdmin,\n      nickName,\n      showUsersContainer,\n      messages\n    } = this.state;\n    return isConnected && users.length > 0 ? /*#__PURE__*/React.createElement(Container, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      username: nickName,\n      colorNickName: this.colorNickName,\n      showHideUsersList: () => this.setState({\n        showUsersContainer: !this.state.showUsersContainer\n      }),\n      logout: () => this.logout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      className: classes.chatContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UsersList, {\n      users: users,\n      isAdmin: isAdmin,\n      userName: nickName,\n      setMuteStatus: user => this.setMuteStatus(user),\n      setBan: user => this.setBan(user),\n      showUsersContainer: showUsersContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MessageContainer, {\n      messages: messages,\n      username: nickName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    })), !this.state.isMuted ? /*#__PURE__*/React.createElement(InputMessageForm, {\n      handleSubmit: message => this.sendMsg(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }) : null) : null;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    users: state.chatReducer.users,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: users => dispatch(actions.setUsers(users)),\n    isConnected: status => dispatch(actions.isConnected(status))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChatPage));","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx"],"names":["React","Component","InputMessageForm","MessageContainer","UsersList","actions","connect","Container","styled","Header","withStyles","store","styles","theme","chatContainer","background","display","flexDirection","margin","padding","height","position","maxHeight","breakpoints","down","ChatPage","constructor","props","colorNickName","state","messages","isAdmin","nickName","isMuted","showUsersContainer","componentWillUnmount","isConnected","componentDidMount","initConnection","socket","on","res","setUsers","setState","msg","alert","history","push","IsMute","clearAll","nickNameColor","get","setMuteStatus","user","emit","id","setBan","sendMsg","message","logout","disconnect","render","users","classes","length","mapStateToProps","chatReducer","mapDispatchToProps","dispatch","initWebSocketConnection","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport { withStyles } from '@material-ui/core/styles';\nimport store from 'store';\n\nconst styles = theme => ({\n  chatContainer: {\n    background: \"#6d81af\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    margin: 0,\n    padding: 0,\n    height: 800,\n    position: 'relative',\n    maxHeight: 1000,\n    [theme.breakpoints.down('xs')]: {\n      height: 300,\n      maxHeight: 600,\n    },\n    [theme.breakpoints.down('sm')]: {\n      height: 600,\n      maxHeight: 800,\n    },\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      nickName: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (msg) =>{\n      alert(msg);\n      this.props.history.push('/login');\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      store.clearAll();\n      this.props.history.push('/login');\n    });\n    const {nickNameColor, isAdmin, nickName} = store.get('userData');\n    this.colorNickName = nickNameColor;\n    this.setState({\n      isAdmin,\n      nickName\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    store.clearAll();\n    this.props.socket.disconnect(true);\n    this.props.history.push('/login');\n  }\n\n  render() {\n\n    const { isConnected, users, classes } = this.props;\n    const { isAdmin, nickName, showUsersContainer, messages} = this.state;\n\n    return isConnected && users.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={nickName}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <Container className={classes.chatContainer}>\n          <UsersList\n            users={users}\n            isAdmin={isAdmin}\n            userName={nickName}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n          />\n          <MessageContainer\n            messages={messages}\n            username={nickName}\n          />\n        </Container>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    users: state.chatReducer.users,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: (users) => dispatch(actions.setUsers(users)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n  };\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChatPage));\n"]},"metadata":{},"sourceType":"module"}