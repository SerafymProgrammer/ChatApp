{"ast":null,"code":"import _objectSpread from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'../../actions/chatActions/actions.types';var initialState={users:[],isConnected:false,socket:null,messages:[],focusRoom:'default',rooms:[]};export default function chatReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.USERS:return _objectSpread(_objectSpread({},state),{},{users:action.users});case actionTypes.ROOMS:return _objectSpread(_objectSpread({},state),{},{rooms:action.rooms});case actionTypes.IS_CONNECTED:return _objectSpread(_objectSpread({},state),{},{isConnected:action.isConnected});case actionTypes.SET_SOCKET:return _objectSpread(_objectSpread({},state),{},{socket:action.socket});case actionTypes.FOCUS_ROOM:return _objectSpread(_objectSpread({},state),{},{roomName:action.focusRoom});case actionTypes.ALL_MESSAGES:return _objectSpread(_objectSpread({},state),{},{messages:action.messages});default:return state;}}","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/redux/reducers/chatReducers/chatReducer.js"],"names":["actionTypes","initialState","users","isConnected","socket","messages","focusRoom","rooms","chatReducer","state","action","type","USERS","ROOMS","IS_CONNECTED","SET_SOCKET","FOCUS_ROOM","roomName","ALL_MESSAGES"],"mappings":"iPAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,yCAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,WAAW,CAAE,KAFM,CAGnBC,MAAM,CAAE,IAHW,CAInBC,QAAQ,CAAE,EAJS,CAKnBC,SAAS,CAAE,SALQ,CAMnBC,KAAK,CAAE,EANY,CAArB,CASA,cAAe,SAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBR,YAAsB,IAARS,CAAAA,MAAQ,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,WAAW,CAACY,KAAjB,CACE,sCACKH,KADL,MAEEP,KAAK,CAAEQ,MAAM,CAACR,KAFhB,GAKA,IAAKF,CAAAA,WAAW,CAACa,KAAjB,CACE,sCACKJ,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACH,KAFhB,GAKJ,IAAKP,CAAAA,WAAW,CAACc,YAAjB,CACE,sCACKL,KADL,MAEEN,WAAW,CAAEO,MAAM,CAACP,WAFtB,GAIF,IAAKH,CAAAA,WAAW,CAACe,UAAjB,CACE,sCACKN,KADL,MAEEL,MAAM,CAAEM,MAAM,CAACN,MAFjB,GAIF,IAAKJ,CAAAA,WAAW,CAACgB,UAAjB,CACE,sCACKP,KADL,MAEEQ,QAAQ,CAAEP,MAAM,CAACJ,SAFnB,GAIF,IAAKN,CAAAA,WAAW,CAACkB,YAAjB,CACE,sCACKT,KADL,MAEEJ,QAAQ,CAAEK,MAAM,CAACL,QAFnB,GAIF,QACE,MAAOI,CAAAA,KAAP,CAlCJ,CAoCD","sourcesContent":["import * as actionTypes from '../../actions/chatActions/actions.types'\n\nconst initialState = {\n  users: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n  focusRoom: 'default',\n  rooms: []\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n\n      case actionTypes.ROOMS:\n        return {\n          ...state,\n          rooms: action.rooms,\n        };  \n\n    case actionTypes.IS_CONNECTED:\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case actionTypes.SET_SOCKET:\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case actionTypes.FOCUS_ROOM:\n      return {\n        ...state,\n        roomName: action.focusRoom,\n      };\n    case actionTypes.ALL_MESSAGES:\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}