{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport moment from 'moment';\nimport jwt from \"jwt-decode\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass InputMessageForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const field = event.target.name;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      let token = localStorage.getItem('userToken');\n      const decodedUser = jwt(token);\n      let newMsg = {\n        id: null,\n        textMessage: this.state.message,\n        authorMessage: decodedUser.nickName\n      };\n      this.reset();\n      this.props.handleSubmit(newMsg);\n    };\n\n    this.state = {\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"maxSymbols\", value => {\n      if (value.length > 200) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n  reset() {\n    this.setState(state => ({\n      message: ''\n    }));\n  }\n\n  render() {\n    const {\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      fullWidth: true,\n      label: \"Message\",\n      onChange: this.handleChange,\n      name: \"message\",\n      value: message,\n      validators: ['required', 'maxSymbols'],\n      errorMessages: ['this field is required', 'maximum 200 symbols'],\n      margin: \"normal\",\n      style: {\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"send\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default InputMessageForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx"],"names":["React","Component","Button","ValidatorForm","TextValidator","moment","jwt","IconButton","Icon","SendIcon","InputMessageForm","constructor","props","handleChange","event","value","target","field","name","setState","handleSubmit","token","localStorage","getItem","decodedUser","newMsg","id","textMessage","state","message","authorMessage","nickName","reset","componentDidMount","addValidationRule","length","componentWillUnmount","removeValidationRule","render","display","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport moment from 'moment';\nimport jwt from \"jwt-decode\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass InputMessageForm extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n   \n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n\n  reset() {\n    this.setState((state) => ({\n      message: '',\n    }))\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value\n    const field = event.target.name\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit = () => {\n    let token = localStorage.getItem('userToken');\n    const decodedUser = jwt(token);\n    let newMsg = {id: null, textMessage: this.state.message, authorMessage: decodedUser.nickName};\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  }\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: 'flex'\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={['required', 'maxSymbols']}\n          errorMessages={['this field is required', 'maximum 200 symbols']}\n          margin=\"normal\"\n          style={{\n            width: '50%',\n\n          }}\n        />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default InputMessageForm;"]},"metadata":{},"sourceType":"module"}