{"ast":null,"code":"import _regeneratorRuntime from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import InputMessageForm from\"./chat-components/inputMessage\";import MessageContainer from\"./chat-components/messageContainer\";import UsersList from\"./chat-components/usersContainer\";import*as actions from\"../../redux/actions/chatActions/chat.actions\";import*as authActions from\"../../redux/actions/authActions/auth.actions\";import{connect}from\"react-redux\";import{Container}from\"@material-ui/core\";import{styled}from\"@material-ui/core/styles\";import Header from\"./chat-components/chatHeader\";import jwt from'jwt-decode';var ChatContainer=styled(Container)({background:\"#6d81af\",display:\"flex\",flexDirection:\"row-reverse\",margin:0,padding:0,height:800,position:'relative',maxHeight:1000,\"@media (max-height:900px)\":{height:700,maxHeight:900},\"@media (max-height:800px)\":{height:600,maxHeight:800},\"@media (max-height:700px)\":{height:500,maxHeight:700},\"@media (max-height:600px)\":{height:400,maxHeight:600},\"@media (max-height:500px)\":{height:300,maxHeight:500},\"@media (max-height:400px)\":{height:200,maxHeight:400}});var ChatPage=/*#__PURE__*/function(_Component){_inherits(ChatPage,_Component);var _super=_createSuper(ChatPage);function ChatPage(props){var _this;_classCallCheck(this,ChatPage);_this=_super.call(this,props);_this.colorNickName=\"white\";_this.state={messages:[],isAdmin:false,currentUser:\"\",isMuted:false,showUsersContainer:true,usersListMobile:false};return _this;}_createClass(ChatPage,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.isConnected(false);}},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var token,decodedUser,socket;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return localStorage.getItem(\"userToken\");case 2:token=_context.sent;if(token){_context.next=6;break;}window.location.href='/login';return _context.abrupt(\"return\");case 6:decodedUser=jwt(token);window.matchMedia(\"(max-width: 400px)\").addListener(function(e){_this2.setState({usersListMobile:e.matches});});_context.next=10;return this.props.initConnection();case 10:socket=this.props.socket;socket.on(\"users\",function(res){_this2.props.setUsers(res);});socket.on(\"previousMessages\",function(res){return _this2.setState({messages:res});});socket.on(\"error\",function(res){alert(res.msg);_this2.props.history.push('/login');});socket.on(\"initialMuteStatus\",function(IsMute){_this2.setState({isMuted:IsMute});});socket.on(\"mute\",function(IsMute){_this2.setState({isMuted:IsMute});});socket.on(\"chat\",function(res){return _this2.setState({messages:[].concat(_toConsumableArray(_this2.state.messages),[res])});});socket.on(\"disconnect\",function(socket){localStorage.removeItem(\"userToken\");window.location.href='/login';});this.colorNickName=decodedUser.nickNameColor;this.setState({isAdmin:decodedUser.isAdmin,currentUser:decodedUser.nickName});this.props.isConnected(true);case 21:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"setMuteStatus\",value:function setMuteStatus(user){this.props.socket.emit(\"mute\",user.id);}},{key:\"setBan\",value:function setBan(id){this.props.socket.emit(\"ban\",id);}},{key:\"sendMsg\",value:function sendMsg(message){this.props.socket.emit(\"chat\",message);}},{key:\"logout\",value:function(){var _logout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return localStorage.removeItem(\"userToken\");case 2:this.props.socket.disconnect(true);window.location.href='/login';case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function logout(){return _logout.apply(this,arguments);}return logout;}()},{key:\"render\",value:function render(){var _this3=this;var _this$props=this.props,isConnected=_this$props.isConnected,allUsers=_this$props.allUsers;var _this$state=this.state,isAdmin=_this$state.isAdmin,currentUser=_this$state.currentUser,showUsersContainer=_this$state.showUsersContainer,usersListMobile=_this$state.usersListMobile;return isConnected&&allUsers.length>0?/*#__PURE__*/React.createElement(Container,{style:{display:\"flex\",flexDirection:\"column\"}},/*#__PURE__*/React.createElement(Header,{username:currentUser,colorNickName:this.colorNickName,showHideUsersList:function showHideUsersList(){return _this3.setState({showUsersContainer:!_this3.state.showUsersContainer});},logout:function logout(){return _this3.logout();}}),/*#__PURE__*/React.createElement(ChatContainer,null,/*#__PURE__*/React.createElement(UsersList,{users:allUsers,isAdmin:isAdmin,userName:currentUser,setMuteStatus:function setMuteStatus(user){return _this3.setMuteStatus(user);},setBan:function setBan(user){return _this3.setBan(user);},showUsersContainer:showUsersContainer,usersListMobile:usersListMobile}),/*#__PURE__*/React.createElement(MessageContainer,{messages:this.state.messages,username:this.state.currentUser})),!this.state.isMuted?/*#__PURE__*/React.createElement(InputMessageForm,{handleSubmit:function handleSubmit(message){return _this3.sendMsg(message);}}):null):null;}}]);return ChatPage;}(Component);function mapStateToProps(state){return{isConnected:state.chatReducer.isConnected,allUsers:state.chatReducer.allUsers,messages:state.chatReducer.messages,socket:state.chatReducer.socket};}function mapDispatchToProps(dispatch){return{initConnection:function initConnection(){return dispatch(actions.initWebSocketConnection(dispatch));},setUsers:function setUsers(users){return dispatch(actions.AllUsers(users));},isConnected:function isConnected(status){return dispatch(actions.isConnected(status));},setIsLoggedIn:function setIsLoggedIn(status){return dispatch(authActions.isSignedInUser(status));}};}export default connect(mapStateToProps,mapDispatchToProps)(ChatPage);","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx"],"names":["React","Component","InputMessageForm","MessageContainer","UsersList","actions","authActions","connect","Container","styled","Header","jwt","ChatContainer","background","display","flexDirection","margin","padding","height","position","maxHeight","ChatPage","props","colorNickName","state","messages","isAdmin","currentUser","isMuted","showUsersContainer","usersListMobile","isConnected","localStorage","getItem","token","window","location","href","decodedUser","matchMedia","addListener","e","setState","matches","initConnection","socket","on","res","setUsers","alert","msg","history","push","IsMute","removeItem","nickNameColor","nickName","user","emit","id","message","disconnect","allUsers","length","logout","setMuteStatus","setBan","sendMsg","mapStateToProps","chatReducer","mapDispatchToProps","dispatch","initWebSocketConnection","users","AllUsers","status","setIsLoggedIn","isSignedInUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport * as authActions from \"../../redux/actions/authActions/auth.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport jwt from 'jwt-decode';\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 800,\n  position: 'relative',\n  maxHeight: 1000,\n  \"@media (max-height:900px)\": {\n    height: 700,\n    maxHeight: 900,\n  },\n  \"@media (max-height:800px)\": {\n    height: 600,\n    maxHeight: 800,\n  },\n  \"@media (max-height:700px)\": {\n    height: 500,\n    maxHeight: 700,\n  },\n  \"@media (max-height:600px)\": {\n    height: 400,\n    maxHeight: 600,\n  },\n  \"@media (max-height:500px)\": {\n    height: 300,\n    maxHeight: 500,\n  },\n  \"@media (max-height:400px)\": {\n    height: 200,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      currentUser: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    const decodedUser = jwt(token);\n    window.matchMedia(\"(max-width: 400px)\").addListener((e)=>{ this.setState({usersListMobile: e.matches}); });\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (res) =>{\n      alert(res.msg);\n      this.props.history.push('/login');\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      localStorage.removeItem(\"userToken\");\n      window.location.href = '/login';\n    });\n    \n    this.colorNickName = decodedUser.nickNameColor;\n    this.setState({\n      isAdmin: decodedUser.isAdmin,\n      currentUser: decodedUser.nickName,\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n\n    const { isConnected, allUsers } = this.props;\n    const { isAdmin, currentUser, showUsersContainer, usersListMobile} = this.state;\n\n    return isConnected && allUsers.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={currentUser}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <ChatContainer>\n          <UsersList\n            users={allUsers}\n            isAdmin={isAdmin}\n            userName={currentUser}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n            usersListMobile = {usersListMobile}\n          />\n          <MessageContainer\n            messages={this.state.messages}\n            username={this.state.currentUser}\n          />\n        </ChatContainer>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    allUsers: state.chatReducer.allUsers,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: (users) => dispatch(actions.AllUsers(users)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n    setIsLoggedIn: (status) => dispatch(authActions.isSignedInUser(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}