{"ast":null,"code":"import _regeneratorRuntime from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _defineProperty from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _styled;import React,{Component}from\"react\";import ChatService from\"../../services/chat.service\";import InputMessageForm from\"./inputMessage\";import MessageContainer from\"./messageContainer\";import UsersList from\"./usersContainer\";import io from\"socket.io-client\";import*as actions from\"../../redux/actions/chatActions/chat.actions\";import*as authActions from\"../../redux/actions/authActions/auth.actions\";import{connect}from\"react-redux\";import moment from\"moment\";import jwt from\"jwt-decode\";import{Container}from\"@material-ui/core\";import{styled}from\"@material-ui/core/styles\";import Header from\"./chatHeader\";import Box from\"@material-ui/core/Box\";var ChatContainer=styled(Container)((_styled={background:\"#6d81af\",display:\"flex\",flexDirection:\"row-reverse\",margin:0,padding:0,height:815,position:'relative',maxHeight:1000},_defineProperty(_styled,\"@media (max-height:900px)\",{// eslint-disable-line no-useless-computed-key\nheight:715,maxHeight:900}),_defineProperty(_styled,\"@media (max-height:800px)\",{// eslint-disable-line no-useless-computed-key\nheight:615,maxHeight:800}),_defineProperty(_styled,\"@media (max-height:700px)\",{// eslint-disable-line no-useless-computed-key\nheight:515,maxHeight:700}),_defineProperty(_styled,\"@media (max-height:600px)\",{// eslint-disable-line no-useless-computed-key\nheight:415,maxHeight:600}),_defineProperty(_styled,\"@media (max-height:500px)\",{// eslint-disable-line no-useless-computed-key\nheight:315,maxHeight:500}),_defineProperty(_styled,\"@media (max-height:400px)\",{// eslint-disable-line no-useless-computed-key\nheight:250,maxHeight:400}),_styled));var ChatPage=/*#__PURE__*/function(_Component){_inherits(ChatPage,_Component);var _super=_createSuper(ChatPage);function ChatPage(props){var _this;_classCallCheck(this,ChatPage);_this=_super.call(this,props);_this.colorNickName=\"white\";_this.state={messages:[],isAdmin:false,currentUser:\"\",isMuted:false,showUsersContainer:true,usersListMobile:false};return _this;}_createClass(ChatPage,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.isConnected(false);}},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;var token,decodedUser,socket;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return localStorage.getItem(\"userToken\");case 2:token=_context.sent;if(token){_context.next=6;break;}window.location.href='/login';return _context.abrupt(\"return\");case 6:decodedUser=jwt(token);window.matchMedia(\"(max-width: 400px)\").addListener(function(e){_this2.setState({usersListMobile:e.matches});if(e.matches){_this2.setState({showUsersContainer:false});}});_context.next=10;return this.props.initConnection();case 10:socket=this.props.socket;socket.on(\"users\",function(res){_this2.props.setOnlineUsers(res);});socket.on(\"previousMessages\",function(res){return _this2.setState({messages:res});});socket.on(\"error\",function(res){alert(res.msg);window.location.href='/login';});socket.on(\"initialMuteStatus\",function(IsMute){_this2.setState({isMuted:IsMute});});socket.on(\"mute\",function(IsMute){_this2.props.setIsMuteStatus(IsMute);_this2.setState({isMuted:IsMute});});socket.on(\"chat\",function(res){return _this2.setState({messages:[].concat(_toConsumableArray(_this2.state.messages),[res])});});socket.on(\"disconnect\",function(socket){localStorage.removeItem(\"userToken\");window.location.href='/login';});this.colorNickName=decodedUser.nickNameColor;this.setState({isAdmin:decodedUser.isAdmin,currentUser:decodedUser.nickName});this.props.isConnected(true);case 21:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"setMuteStatus\",value:function setMuteStatus(user){this.props.socket.emit(\"mute\",user.id);}},{key:\"setBan\",value:function setBan(user){this.props.socket.emit(\"ban\",user.id);}},{key:\"sendMsg\",value:function sendMsg(message){this.setState({messages:[].concat(_toConsumableArray(this.state.messages),[message])});this.props.socket.emit(\"chat\",JSON.stringify(message));}},{key:\"logout\",value:function(){var _logout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return localStorage.removeItem(\"userToken\");case 2:this.props.socket.disconnect(true);window.location.href='/login';case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function logout(){return _logout.apply(this,arguments);}return logout;}()},{key:\"render\",value:function render(){var _this3=this;var _this$props=this.props,isConnected=_this$props.isConnected,onlineUsers=_this$props.onlineUsers;var _this$state=this.state,isAdmin=_this$state.isAdmin,currentUser=_this$state.currentUser,showUsersContainer=_this$state.showUsersContainer,usersListMobile=_this$state.usersListMobile;return isConnected&&onlineUsers.length>0?/*#__PURE__*/React.createElement(Container,{style:{display:\"flex\",flexDirection:\"column\"}},/*#__PURE__*/React.createElement(Header,{username:currentUser,colorNickName:this.colorNickName,showHideUsersList:function showHideUsersList(){return _this3.setState({showUsersContainer:!_this3.state.showUsersContainer});},logout:function logout(){return _this3.logout();}}),/*#__PURE__*/React.createElement(ChatContainer,null,/*#__PURE__*/React.createElement(UsersList,{users:onlineUsers,isAdmin:isAdmin,userName:currentUser,setMuteStatus:function setMuteStatus(user){return _this3.setMuteStatus(user);},setBan:function setBan(user){return _this3.setBan(user);},showUsersContainer:showUsersContainer,usersListMobile:usersListMobile}),/*#__PURE__*/React.createElement(MessageContainer,{messages:this.state.messages,username:this.state.currentUser})),!this.state.isMuted?/*#__PURE__*/React.createElement(InputMessageForm,{handleSubmit:function handleSubmit(message){return _this3.sendMsg(message);}}):null):null;// isConnected && onlineUsers.length > 0 ?\n//  : null;\n}}]);return ChatPage;}(Component);function mapStateToProps(state){return{isConnected:state.chatReducer.isConnected,onlineUsers:state.chatReducer.onlineUsers,messages:state.chatReducer.messages,socket:state.chatReducer.socket,isMuted:state.chatReducer.isMuted};}function mapDispatchToProps(dispatch){return{initConnection:function initConnection(){return dispatch(actions.initWebSocketConnection(dispatch));},setOnlineUsers:function setOnlineUsers(onlineUsers){return dispatch(actions.allOnlineUsers(onlineUsers));},isConnected:function isConnected(status){return dispatch(actions.isConnected(status));},setIsMuteStatus:function setIsMuteStatus(status){return dispatch(actions.setIsMuteStatus(status));},setIsLoggedIn:function setIsLoggedIn(status){return dispatch(authActions.isSignedInUser(status));}};}export default connect(mapStateToProps,mapDispatchToProps)(ChatPage);","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx"],"names":["React","Component","ChatService","InputMessageForm","MessageContainer","UsersList","io","actions","authActions","connect","moment","jwt","Container","styled","Header","Box","ChatContainer","background","display","flexDirection","margin","padding","height","position","maxHeight","ChatPage","props","colorNickName","state","messages","isAdmin","currentUser","isMuted","showUsersContainer","usersListMobile","isConnected","localStorage","getItem","token","window","location","href","decodedUser","matchMedia","addListener","e","setState","matches","initConnection","socket","on","res","setOnlineUsers","alert","msg","IsMute","setIsMuteStatus","removeItem","nickNameColor","nickName","user","emit","id","message","JSON","stringify","disconnect","onlineUsers","length","logout","setMuteStatus","setBan","sendMsg","mapStateToProps","chatReducer","mapDispatchToProps","dispatch","initWebSocketConnection","allOnlineUsers","status","setIsLoggedIn","isSignedInUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ChatService from \"../../services/chat.service\";\nimport InputMessageForm from \"./inputMessage\";\nimport MessageContainer from \"./messageContainer\";\nimport UsersList from \"./usersContainer\";\nimport io from \"socket.io-client\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport * as authActions from \"../../redux/actions/authActions/auth.actions\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport jwt from \"jwt-decode\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chatHeader\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 815,\n  position: 'relative',\n  maxHeight: 1000,\n  [\"@media (max-height:900px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 715,\n    maxHeight: 900,\n  },\n  [\"@media (max-height:800px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 615,\n    maxHeight: 800,\n  },\n  [\"@media (max-height:700px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 515,\n    maxHeight: 700,\n  },\n  [\"@media (max-height:600px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 415,\n    maxHeight: 600,\n  },\n  [\"@media (max-height:500px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 315,\n    maxHeight: 500,\n  },\n  [\"@media (max-height:400px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 250,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      currentUser: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    const decodedUser = jwt(token);\n    window.matchMedia(\"(max-width: 400px)\").addListener((e)=>{ this.setState({usersListMobile: e.matches}); if(e.matches) {\n      this.setState({showUsersContainer: false});\n    }});\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setOnlineUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (res) =>{\n      alert(res.msg);\n      window.location.href = '/login';\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.props.setIsMuteStatus(IsMute);\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      localStorage.removeItem(\"userToken\");\n      window.location.href = '/login';\n    });\n    \n    this.colorNickName = decodedUser.nickNameColor;\n    this.setState({\n      isAdmin: decodedUser.isAdmin,\n      currentUser: decodedUser.nickName,\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(user) {\n    this.props.socket.emit(\"ban\", user.id);\n  }\n\n  sendMsg(message) {\n    this.setState({\n      messages: [...this.state.messages, message],\n    });\n    this.props.socket.emit(\"chat\", JSON.stringify(message));\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n    const { isConnected, onlineUsers } = this.props;\n\n    const { isAdmin, currentUser, showUsersContainer, usersListMobile} = this.state;\n\n    return isConnected && onlineUsers.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={currentUser}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <ChatContainer>\n          <UsersList\n            users={onlineUsers}\n            isAdmin={isAdmin}\n            userName={currentUser}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n            usersListMobile = {usersListMobile}\n          />\n          <MessageContainer\n            messages={this.state.messages}\n            username={this.state.currentUser}\n          />\n        </ChatContainer>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n    // isConnected && onlineUsers.length > 0 ?\n\n    //  : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    onlineUsers: state.chatReducer.onlineUsers,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n    isMuted: state.chatReducer.isMuted,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setOnlineUsers: (onlineUsers) =>\n      dispatch(actions.allOnlineUsers(onlineUsers)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n    setIsMuteStatus: (status) => dispatch(actions.setIsMuteStatus(status)),\n    setIsLoggedIn: (status) => dispatch(authActions.isSignedInUser(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}