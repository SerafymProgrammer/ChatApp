{"ast":null,"code":"import SocketConnect from \"../../../services/chat.service\";\nimport * as actionTypes from './actions.types';\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"token\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\nexport function setSocket(socket) {\n  return {\n    type: actionTypes.SET_SOCKET,\n    socket\n  };\n}\nexport function setUsers(users) {\n  return {\n    type: actionTypes.USERS,\n    users\n  };\n}\nexport function isConnected(isConnected) {\n  return {\n    type: actionTypes.IS_CONNECTED,\n    isConnected\n  };\n}\nexport function allMessages(messages) {\n  return {\n    type: actionTypes.ALL_MESSAGES,\n    messages\n  };\n}","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/redux/actions/chatActions/chat.actions.js"],"names":["SocketConnect","actionTypes","initWebSocketConnection","dispatch","token","localStorage","getItem","socket","getSocket","setSocket","type","SET_SOCKET","setUsers","users","USERS","isConnected","IS_CONNECTED","allMessages","messages","ALL_MESSAGES"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,gCAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AAEA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAChD,SAAO,YAAY;AACjB,QAAIC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,QAAIC,MAAM,GAAG,IAAIP,aAAJ,CAAkBI,KAAlB,EAAyBI,SAAzB,EAAb;;AAEA,QAAID,MAAJ,EAAY;AACVJ,MAAAA,QAAQ,CAACM,SAAS,CAACF,MAAD,CAAV,CAAR;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASE,SAAT,CAAmBF,MAAnB,EAA2B;AAChC,SAAO;AACLG,IAAAA,IAAI,EAAET,WAAW,CAACU,UADb;AAELJ,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AACLH,IAAAA,IAAI,EAAET,WAAW,CAACa,KADb;AAELD,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,WAAT,CAAqBA,WAArB,EAAkC;AACvC,SAAO;AACLL,IAAAA,IAAI,EAAET,WAAW,CAACe,YADb;AAELD,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AACpC,SAAO;AACLR,IAAAA,IAAI,EAAET,WAAW,CAACkB,YADb;AAELD,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import SocketConnect from \"../../../services/chat.service\";\nimport * as actionTypes from './actions.types'\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"token\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\n\nexport function setSocket(socket) {\n  return {\n    type: actionTypes.SET_SOCKET,\n    socket,\n  };\n}\n\nexport function setUsers(users) {\n  return {\n    type: actionTypes.USERS,\n    users,\n  };\n}\n\nexport function isConnected(isConnected) {\n  return {\n    type: actionTypes.IS_CONNECTED,\n    isConnected,\n  };\n}\n\nexport function allMessages(messages) {\n  return {\n    type: actionTypes.ALL_MESSAGES,\n    messages,\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}