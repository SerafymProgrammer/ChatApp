{"ast":null,"code":"import _defineProperty from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Button from\"@material-ui/core/Button\";import{ValidatorForm,TextValidator}from\"react-material-ui-form-validator\";import CircularProgress from\"@material-ui/core/CircularProgress\";var SignInForm=/*#__PURE__*/function(_Component){_inherits(SignInForm,_Component);var _super=_createSuper(SignInForm);function SignInForm(props){var _this;_classCallCheck(this,SignInForm);_this=_super.call(this,props);_this.handleChange=function(event){var value=event.target.value;var field=event.target.name;_this.setState(_defineProperty({},field,value));};_this.handleSubmit=function(){var data=Object.assign({id:null},_this.state);_this.reset();_this.props.handleSubmit(data);};_this.state={username:\"\",password:\"\"};return _this;}_createClass(SignInForm,[{key:\"componentDidMount\",value:function componentDidMount(){ValidatorForm.addValidationRule(\"moreThanThreeChar\",function(value){if(value.length<3){return false;}return true;});ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\",function(value){if(/[^A-zА-яЁё0-9)]/.test(value)){return false;}return true;});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// remove rule when it is not needed\nValidatorForm.removeValidationRule(\"moreThanThreeChar\");ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");}},{key:\"reset\",value:function reset(){this.setState(function(state){return{username:\"\",password:\"\"};});}},{key:\"render\",value:function render(){var _this$state=this.state,username=_this$state.username,password=_this$state.password;var isFetching=this.props.isFetching;return/*#__PURE__*/React.createElement(ValidatorForm,{ref:\"form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(TextValidator,{fullWidth:true,label:\"Username\",onChange:this.handleChange,name:\"username\",value:username,validators:[\"required\",\"moreThanThreeChar\",\"notAllowedSpecialSymbols\"],errorMessages:[\"this field is required\",\"3 characters minimum\",\"Not allowed special symbols\"],margin:\"normal\"}),/*#__PURE__*/React.createElement(TextValidator,{fullWidth:true,label:\"Password\",type:\"password\",onChange:this.handleChange,name:\"password\",value:password,validators:[\"required\"],errorMessages:[\"this field is required\"],margin:\"normal\"}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",fullWidth:true,color:\"primary\",type:\"submit\",disabled:isFetching,margin:\"normal\"},isFetching&&/*#__PURE__*/React.createElement(CircularProgress,{size:20}),\" Save\"));}}]);return SignInForm;}(Component);export default SignInForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/auth/form/SignInForm.js"],"names":["React","Component","Button","ValidatorForm","TextValidator","CircularProgress","SignInForm","props","handleChange","event","value","target","field","name","setState","handleSubmit","data","Object","assign","id","state","reset","username","password","addValidationRule","length","test","removeValidationRule","isFetching"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      if (value.length < 3) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      if (/[^A-zА-яЁё0-9)]/.test(value)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: \"\",\n      password: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    let data = Object.assign({ id: null }, this.state);\n    this.reset()\n    this.props.handleSubmit(data);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    const { isFetching } = this.props;\n\n    return (\n      <ValidatorForm ref=\"form\" onSubmit={this.handleSubmit}>\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={[\n            \"required\",\n            \"moreThanThreeChar\",\n            \"notAllowedSpecialSymbols\",\n          ]}\n          errorMessages={[\n            \"this field is required\",\n            \"3 characters minimum\",\n            \"Not allowed special symbols\",\n          ]}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Save\n        </Button>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}