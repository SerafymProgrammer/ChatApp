{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx\";\nimport React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport { store } from 'store';\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 800,\n  position: 'relative',\n  maxHeight: 1000,\n  \"@media (max-height:900px)\": {\n    height: 700,\n    maxHeight: 900\n  },\n  \"@media (max-height:800px)\": {\n    height: 600,\n    maxHeight: 800\n  },\n  \"@media (max-height:700px)\": {\n    height: 500,\n    maxHeight: 700\n  },\n  \"@media (max-height:600px)\": {\n    height: 400,\n    maxHeight: 600\n  },\n  \"@media (max-height:500px)\": {\n    height: 300,\n    maxHeight: 500\n  },\n  \"@media (max-height:400px)\": {\n    height: 200,\n    maxHeight: 400\n  }\n});\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.colorNickName = \"white\";\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      nickName: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n\n    window.matchMedia(\"(max-width: 400px)\").addListener(e => {\n      this.setState({\n        usersListMobile: e.matches\n      });\n    });\n    await this.props.initConnection();\n    const {\n      socket\n    } = this.props;\n    socket.on(\"users\", res => {\n      this.props.setUsers(res);\n    });\n    socket.on(\"previousMessages\", res => this.setState({\n      messages: res\n    }));\n    socket.on(\"error\", res => {\n      alert(res.msg);\n      this.props.history.push('/login');\n    });\n    socket.on(\"initialMuteStatus\", IsMute => {\n      this.setState({\n        isMuted: IsMute\n      });\n    });\n    socket.on(\"mute\", IsMute => {\n      this.setState({\n        isMuted: IsMute\n      });\n    });\n    socket.on(\"chat\", res => this.setState({\n      messages: [...this.state.messages, res]\n    }));\n    socket.on(\"disconnect\", socket => {\n      store.clearAll();\n      window.location.href = '/login';\n    });\n    const {\n      nickNameColor,\n      isAdmin,\n      nickName\n    } = store.get('userData');\n    this.colorNickName = nickNameColor;\n    this.setState({\n      isAdmin,\n      nickName\n    });\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n    const {\n      isConnected,\n      allUsers\n    } = this.props;\n    const {\n      isAdmin,\n      nickName,\n      showUsersContainer,\n      usersListMobile\n    } = this.state;\n    return isConnected && allUsers.length > 0 ? /*#__PURE__*/React.createElement(Container, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      username: nickName,\n      colorNickName: this.colorNickName,\n      showHideUsersList: () => this.setState({\n        showUsersContainer: !this.state.showUsersContainer\n      }),\n      logout: () => this.logout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ChatContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UsersList, {\n      users: allUsers,\n      isAdmin: isAdmin,\n      userName: nickName,\n      setMuteStatus: user => this.setMuteStatus(user),\n      setBan: user => this.setBan(user),\n      showUsersContainer: showUsersContainer,\n      usersListMobile: usersListMobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MessageContainer, {\n      messages: this.state.messages,\n      username: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })), !this.state.isMuted ? /*#__PURE__*/React.createElement(InputMessageForm, {\n      handleSubmit: message => this.sendMsg(message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }) : null) : null;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    allUsers: state.chatReducer.users,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: users => dispatch(actions.setUsers(users)),\n    isConnected: status => dispatch(actions.isConnected(status))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat.jsx"],"names":["React","Component","InputMessageForm","MessageContainer","UsersList","actions","connect","Container","styled","Header","store","ChatContainer","background","display","flexDirection","margin","padding","height","position","maxHeight","ChatPage","constructor","props","colorNickName","state","messages","isAdmin","nickName","isMuted","showUsersContainer","usersListMobile","componentWillUnmount","isConnected","componentDidMount","token","localStorage","getItem","window","location","href","matchMedia","addListener","e","setState","matches","initConnection","socket","on","res","setUsers","alert","msg","history","push","IsMute","clearAll","nickNameColor","get","setMuteStatus","user","emit","id","setBan","sendMsg","message","logout","removeItem","disconnect","render","allUsers","length","currentUser","mapStateToProps","chatReducer","users","mapDispatchToProps","dispatch","initWebSocketConnection","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport {store} from 'store';\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 800,\n  position: 'relative',\n  maxHeight: 1000,\n  \"@media (max-height:900px)\": {\n    height: 700,\n    maxHeight: 900,\n  },\n  \"@media (max-height:800px)\": {\n    height: 600,\n    maxHeight: 800,\n  },\n  \"@media (max-height:700px)\": {\n    height: 500,\n    maxHeight: 700,\n  },\n  \"@media (max-height:600px)\": {\n    height: 400,\n    maxHeight: 600,\n  },\n  \"@media (max-height:500px)\": {\n    height: 300,\n    maxHeight: 500,\n  },\n  \"@media (max-height:400px)\": {\n    height: 200,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      nickName: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    window.matchMedia(\"(max-width: 400px)\").addListener((e)=>{ this.setState({usersListMobile: e.matches}); });\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (res) =>{\n      alert(res.msg);\n      this.props.history.push('/login');\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      store.clearAll();\n      window.location.href = '/login';\n    });\n    const {nickNameColor, isAdmin, nickName} = store.get('userData');\n    this.colorNickName = nickNameColor;\n    this.setState({\n      isAdmin,\n      nickName\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n\n    const { isConnected, allUsers } = this.props;\n    const { isAdmin, nickName, showUsersContainer, usersListMobile} = this.state;\n\n    return isConnected && allUsers.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={nickName}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <ChatContainer>\n          <UsersList\n            users={allUsers}\n            isAdmin={isAdmin}\n            userName={nickName}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n            usersListMobile = {usersListMobile}\n          />\n          <MessageContainer\n            messages={this.state.messages}\n            username={this.state.currentUser}\n          />\n        </ChatContainer>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    allUsers: state.chatReducer.users,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: (users) => dispatch(actions.setUsers(users)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}