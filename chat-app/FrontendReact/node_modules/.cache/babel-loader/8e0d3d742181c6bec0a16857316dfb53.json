{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx\";\nimport React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nclass InputMessageForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const field = event.target.name;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const newMsg = this.state.message;\n      this.reset();\n      this.props.handleSubmit(newMsg);\n    };\n\n    this.state = {\n      message: \"\",\n      isMobileWindow: false\n    };\n  }\n\n  componentDidMount() {\n    window.matchMedia(\"(max-width: 400px)\").addListener(e => {\n      this.setState({\n        isMobileWindow: e.matches\n      });\n    });\n    ValidatorForm.addValidationRule(\"maxSymbols\", value => {\n      if (value.length > 200) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n  reset() {\n    this.setState(state => ({\n      message: \"\"\n    }));\n  }\n\n  render() {\n    const {\n      message,\n      isMobileWindow\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      fullWidth: true,\n      label: \"Message\",\n      onChange: this.handleChange,\n      name: \"message\",\n      value: message,\n      validators: [\"required\", \"maxSymbols\"],\n      errorMessages: [\"this field is required\", \"maximum 200 symbols\"],\n      margin: \"normal\",\n      style: isMobileWindow ? {\n        width: \"100%\"\n      } : {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"send\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default InputMessageForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/inputMessage.jsx"],"names":["React","Component","ValidatorForm","TextValidator","IconButton","SendIcon","InputMessageForm","constructor","props","handleChange","event","value","target","field","name","setState","handleSubmit","newMsg","state","message","reset","isMobileWindow","componentDidMount","window","matchMedia","addListener","e","matches","addValidationRule","length","componentWillUnmount","removeValidationRule","render","display","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nclass InputMessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      isMobileWindow: false,\n    };\n  }\n\n  componentDidMount() {\n    window.matchMedia(\"(max-width: 400px)\").addListener((e) => {\n      this.setState({ isMobileWindow: e.matches });\n    });\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      message: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    const newMsg = this.state.message;\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  };\n\n  render() {\n    const { message, isMobileWindow } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={[\"required\", \"maxSymbols\"]}\n          errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n          margin=\"normal\"\n          style={\n            isMobileWindow\n              ? {\n                  width: \"100%\",\n                }\n              : {\n                  width: \"50%\",\n                }\n          }\n        />\n        <IconButton aria-label=\"send\" type=\"submit\">\n          <SendIcon />\n        </IconButton>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default InputMessageForm;\n"]},"metadata":{},"sourceType":"module"}