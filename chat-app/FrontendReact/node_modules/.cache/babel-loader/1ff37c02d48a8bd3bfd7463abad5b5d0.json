{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import ListSubheader from\"@material-ui/core/ListSubheader\";import Button from\"@material-ui/core/Button\";import ButtonGroup from\"@material-ui/core/ButtonGroup\";var useStyles=makeStyles(function(theme){return{root:{width:\"100%\",maxWidth:360,position:\"relative\",height:'avalaible',maxHeight:'inherit',borderColor:\"#000\",borderWidth:2,backgroundColor:\"#eabf7d8c\",top:0,left:0},ul:{backgroundColor:\"#eabf7d8c\",padding:0}};});export default function UsersList(props){var isAdmin=props.isAdmin,users=props.users,userName=props.userName,setMuteStatus=props.setMuteStatus,setBan=props.setBan,showUsersContainer=props.showUsersContainer,usersListMobile=props.usersListMobile;var handleMute=function handleMute(user){setMuteStatus(user);};var handleBan=function handleBan(id){setBan(id);};var classes=useStyles();var usersCategories={Online:users.filter(function(user){return user.onlineStatus;}),Offline:users.filter(function(user){return!user.onlineStatus;})};var arr=isAdmin?[\"Online\",\"Offline\"]:[\"Online\"];return/*#__PURE__*/React.createElement(List,{className:classes.root,subheader:/*#__PURE__*/React.createElement(\"li\",null),style:showUsersContainer?Object.assign({display:'block'},usersListMobile?{position:'absolute',backgroundColor:\"#8cd2b5\",height:300}:{position:'initial'}):{display:'none'}},arr.map(function(status,index){return/*#__PURE__*/React.createElement(\"li\",{key:\"section-\".concat(index),className:classes.listSection},/*#__PURE__*/React.createElement(\"ul\",{className:classes.ul},/*#__PURE__*/React.createElement(ListSubheader,null,\"\".concat(status)),usersCategories[status].map(function(user){return/*#__PURE__*/React.createElement(ListItem,{key:\"\".concat(user.nickName)},/*#__PURE__*/React.createElement(ListItemText,{primary:\"\".concat(user.nickName),style:{color:user.nickNameColor}}),isAdmin&&user.nickName!==userName?/*#__PURE__*/React.createElement(ButtonGroup,{size:\"small\",\"aria-label\":\"small outlined button group\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return handleMute(user);}},\" \",user.isMuted?'unmute':'mute'),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return handleBan(user.id);}},user.isBaned?'unban':'ban')):null);})));}));}","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/usersContainer.jsx"],"names":["React","makeStyles","List","ListItem","ListItemText","ListSubheader","Button","ButtonGroup","useStyles","theme","root","width","maxWidth","position","height","maxHeight","borderColor","borderWidth","backgroundColor","top","left","ul","padding","UsersList","props","isAdmin","users","userName","setMuteStatus","setBan","showUsersContainer","usersListMobile","handleMute","user","handleBan","id","classes","usersCategories","Online","filter","onlineStatus","Offline","arr","Object","assign","display","map","status","index","listSection","nickName","color","nickNameColor","isMuted","isBaned"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    position: \"relative\",\n    height: 'avalaible',\n    maxHeight: 'inherit',\n    borderColor: \"#000\",\n    borderWidth: 2,\n    backgroundColor: \"#eabf7d8c\",\n    top: 0,\n    left: 0,\n  },\n  ul: {\n    backgroundColor: \"#eabf7d8c\",\n    padding: 0,\n  },\n}));\n\nexport default function UsersList(props) {\n  const { isAdmin, users, userName, setMuteStatus, setBan, showUsersContainer, usersListMobile} = props;\n  const handleMute = (user) => {\n    setMuteStatus(user)\n  }\n\n  const handleBan = (id) => {\n    setBan(id)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  return (\n    <List className={classes.root} subheader={<li />} \n      style={showUsersContainer ? \n      Object.assign({display: 'block'}, \n      usersListMobile ? \n      {position: 'absolute', backgroundColor: \"#8cd2b5\", height: 300} : \n      {position: 'initial'}) : \n      {display: 'none'}}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} style={{color: user.nickNameColor}}/>\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user.id)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}