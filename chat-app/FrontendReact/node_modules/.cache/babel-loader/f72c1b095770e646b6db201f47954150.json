{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  messagesContainer: {\n    background: \"inherit\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"scroll\",\n    height: \"inherit\",\n    maxHeight: \"inherit\",\n    paddingBottom: 10\n  }\n}));\n\nconst MessageContainer = props => {\n  const {\n    messages,\n    username\n  } = props;\n  const myRef = useRef(null);\n  const classes = useStyles();\n  console.log(messages);\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.messagesContainer,\n    ref: myRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, messages.map((item, index) => /*#__PURE__*/React.createElement(Message, {\n    key: `key-msg-${index}`,\n    timeMessage: moment(item.timeMessage).calendar(),\n    authorMessage: item.authorMessage,\n    textMessage: item.textMessage,\n    username: username,\n    colorNickName: item.colorAuthorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MessageContainer;","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx"],"names":["React","useEffect","useRef","Container","Message","moment","makeStyles","useStyles","theme","messagesContainer","background","display","flexDirection","overflowY","height","maxHeight","paddingBottom","MessageContainer","props","messages","username","myRef","classes","console","log","current","scrollTop","scrollHeight","map","item","index","timeMessage","calendar","authorMessage","textMessage","colorAuthorName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,UAAU,EAAE,SADK;AAEjBC,IAAAA,OAAO,EAAE,MAFQ;AAGjBC,IAAAA,aAAa,EAAE,QAHE;AAIjBC,IAAAA,SAAS,EAAE,QAJM;AAKjBC,IAAAA,MAAM,EAAE,SALS;AAMjBC,IAAAA,SAAS,EAAE,SANM;AAOjBC,IAAAA,aAAa,EAAE;AAPE;AADoB,CAAZ,CAAD,CAA5B;;AAYA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B;AACA,QAAMG,KAAK,GAAGnB,MAAM,CAAC,IAAD,CAApB;AACA,QAAMoB,OAAO,GAAGf,SAAS,EAAzB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,KAAK,CAACI,OAAN,CAAcC,SAAd,GAA0BL,KAAK,CAACI,OAAN,CAAcE,YAAxC;AACD,GAFQ,EAEN,CAACR,QAAD,EAAWE,KAAX,CAFM,CAAT;AAIA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACb,iBAA9B;AAAiD,IAAA,GAAG,EAAEY,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACS,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ,oBAAC,OAAD;AACE,IAAA,GAAG,EAAG,WAAUA,KAAM,EADxB;AAEE,IAAA,WAAW,EAAEzB,MAAM,CAACwB,IAAI,CAACE,WAAN,CAAN,CAAyBC,QAAzB,EAFf;AAGE,IAAA,aAAa,EAAEH,IAAI,CAACI,aAHtB;AAIE,IAAA,WAAW,EAAEJ,IAAI,CAACK,WAJpB;AAKE,IAAA,QAAQ,EAAEd,QALZ;AAME,IAAA,aAAa,EAAES,IAAI,CAACM,eANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAcD,CAxBD;;AA0BA,eAAelB,gBAAf","sourcesContent":["import React, { useEffect, useRef, } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  messagesContainer: {\n    background: \"inherit\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"scroll\",\n    height: \"inherit\",\n    maxHeight: \"inherit\",\n    paddingBottom: 10,\n  },\n}));\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n  const myRef = useRef(null);\n  const classes = useStyles();\n  console.log(messages)\n\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n\n  return (\n    <Container className={classes.messagesContainer} ref={myRef}>\n      {messages.map((item, index) => (\n        <Message\n          key={`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default MessageContainer;\n"]},"metadata":{},"sourceType":"module"}