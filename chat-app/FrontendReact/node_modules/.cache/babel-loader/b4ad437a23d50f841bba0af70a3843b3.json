{"ast":null,"code":"import _objectSpread from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'../../actions/authActions/actions.types';var initialState={isLoggedIn:false,allUsers:[],isConnected:false,isFetching:false};export default function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.IS_LOGGED_IN:return _objectSpread(_objectSpread({},state),{},{isLoggedIn:action.isLoggedIn});case actionTypes.IS_FETCHING:return _objectSpread(_objectSpread({},state),{},{isFetching:action.isFetching});default:return state;}}","map":{"version":3,"sources":["/home/serafym/Общедоступные/ChatApp/chat-app/FrontendReact/src/redux/reducers/authReducers/authReducer.js"],"names":["actionTypes","initialState","isLoggedIn","allUsers","isConnected","isFetching","authReducer","state","action","type","IS_LOGGED_IN","IS_FETCHING"],"mappings":"iPAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,yCAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,KADO,CAEnBC,QAAQ,CAAE,EAFS,CAGnBC,WAAW,CAAE,KAHM,CAInBC,UAAU,CAAE,KAJO,CAArB,CAOA,cAAe,SAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,2CAChE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,WAAW,CAACU,YAAjB,CACE,sCACKH,KADL,MAEEL,UAAU,CAAEM,MAAM,CAACN,UAFrB,GAIF,IAAKF,CAAAA,WAAW,CAACW,WAAjB,CACE,sCACKJ,KADL,MAEEF,UAAU,CAAEG,MAAM,CAACH,UAFrB,GAIF,QACE,MAAOE,CAAAA,KAAP,CAZJ,CAcD","sourcesContent":["import * as actionTypes from '../../actions/authActions/actions.types'\n\nconst initialState = {\n  isLoggedIn: false,\n  allUsers: [],\n  isConnected: false,\n  isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.IS_LOGGED_IN:\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n      };\n    case actionTypes.IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}