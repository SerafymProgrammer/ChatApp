{"ast":null,"code":"import _defineProperty from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Button from'@material-ui/core/Button';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import moment from'moment';import jwt from\"jwt-decode\";import IconButton from'@material-ui/core/IconButton';import Icon from'@material-ui/core/Icon';import SendIcon from'@material-ui/icons/Send';var InputMessageForm=/*#__PURE__*/function(_Component){_inherits(InputMessageForm,_Component);var _super=_createSuper(InputMessageForm);function InputMessageForm(props){var _this;_classCallCheck(this,InputMessageForm);_this=_super.call(this,props);_this.handleChange=function(event){var value=event.target.value;var field=event.target.name;_this.setState(_defineProperty({},field,value));};_this.handleSubmit=function(){var token=localStorage.getItem('userToken');var decodedUser=jwt(token);var newMsg={id:null,textMessage:_this.state.message,authorMessage:decodedUser.nickName};_this.reset();_this.props.handleSubmit(newMsg);};_this.state={message:''};return _this;}_createClass(InputMessageForm,[{key:\"componentDidMount\",value:function componentDidMount(){ValidatorForm.addValidationRule(\"maxSymbols\",function(value){if(value.length>200){return false;}return true;});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ValidatorForm.removeValidationRule(\"maxSymbols\");}},{key:\"reset\",value:function reset(){this.setState(function(state){return{message:''};});}},{key:\"render\",value:function render(){var message=this.state.message;return/*#__PURE__*/React.createElement(ValidatorForm,{ref:\"form\",onSubmit:this.handleSubmit,style:{display:'flex'}},/*#__PURE__*/React.createElement(TextValidator,{fullWidth:true,label:\"Message\",onChange:this.handleChange,name:\"message\",value:message,validators:['required','maxSymbols'],errorMessages:['this field is required','maximum 200 symbols'],margin:\"normal\",style:{width:'50%'}}),/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"send\",type:\"submit\"},/*#__PURE__*/React.createElement(SendIcon,null)));}}]);return InputMessageForm;}(Component);export default InputMessageForm;","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/inputMessage.jsx"],"names":["React","Component","Button","ValidatorForm","TextValidator","moment","jwt","IconButton","Icon","SendIcon","InputMessageForm","props","handleChange","event","value","target","field","name","setState","handleSubmit","token","localStorage","getItem","decodedUser","newMsg","id","textMessage","state","message","authorMessage","nickName","reset","addValidationRule","length","removeValidationRule","display","width"],"mappings":"wuCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA4C,kCAA5C,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,GAEMC,CAAAA,gB,oHAEJ,0BAAYC,KAAZ,CAAmB,kDACjB,uBAAMA,KAAN,EADiB,MA2BnBC,YA3BmB,CA2BJ,SAACC,KAAD,CAAW,CACxB,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAME,CAAAA,KAAK,CAAGH,KAAK,CAACE,MAAN,CAAaE,IAA3B,CACA,MAAKC,QAAL,oBAAiBF,KAAjB,CAAyBF,KAAzB,GACD,CA/BkB,OAiCnBK,YAjCmB,CAiCJ,UAAM,CACnB,GAAIC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ,CACA,GAAMC,CAAAA,WAAW,CAAGjB,GAAG,CAACc,KAAD,CAAvB,CACA,GAAII,CAAAA,MAAM,CAAG,CAACC,EAAE,CAAE,IAAL,CAAWC,WAAW,CAAE,MAAKC,KAAL,CAAWC,OAAnC,CAA4CC,aAAa,CAAEN,WAAW,CAACO,QAAvE,CAAb,CACA,MAAKC,KAAL,GACA,MAAKpB,KAAL,CAAWQ,YAAX,CAAwBK,MAAxB,EACD,CAvCkB,CAEjB,MAAKG,KAAL,CAAa,CACXC,OAAO,CAAE,EADE,CAAb,CAFiB,aAKlB,C,0FAEmB,CAClBzB,aAAa,CAAC6B,iBAAd,CAAgC,YAAhC,CAA8C,SAAClB,KAAD,CAAW,CACvD,GAAIA,KAAK,CAACmB,MAAN,CAAe,GAAnB,CAAwB,CACtB,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CALD,EAMD,C,mEAEsB,CACrB9B,aAAa,CAAC+B,oBAAd,CAAmC,YAAnC,EACD,C,qCAGO,CACN,KAAKhB,QAAL,CAAc,SAACS,KAAD,QAAY,CACxBC,OAAO,CAAE,EADe,CAAZ,EAAd,EAGD,C,uCAgBQ,IACCA,CAAAA,OADD,CACa,KAAKD,KADlB,CACCC,OADD,CAGP,mBACE,oBAAC,aAAD,EACE,GAAG,CAAC,MADN,CAEE,QAAQ,CAAE,KAAKT,YAFjB,CAGE,KAAK,CAAE,CACLgB,OAAO,CAAE,MADJ,CAHT,eAOE,oBAAC,aAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,CAGE,QAAQ,CAAE,KAAKvB,YAHjB,CAIE,IAAI,CAAC,SAJP,CAKE,KAAK,CAAEgB,OALT,CAME,UAAU,CAAE,CAAC,UAAD,CAAa,YAAb,CANd,CAOE,aAAa,CAAE,CAAC,wBAAD,CAA2B,qBAA3B,CAPjB,CAQE,MAAM,CAAC,QART,CASE,KAAK,CAAE,CACLQ,KAAK,CAAE,KADF,CATT,EAPF,cAqBA,oBAAC,UAAD,EAAY,aAAW,MAAvB,CAA8B,IAAI,CAAC,QAAnC,eACE,oBAAC,QAAD,MADF,CArBA,CADF,CA4BD,C,8BA1E4BnC,S,EA6E/B,cAAeS,CAAAA,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport moment from 'moment';\nimport jwt from \"jwt-decode\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass InputMessageForm extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n   \n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n\n  reset() {\n    this.setState((state) => ({\n      message: '',\n    }))\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value\n    const field = event.target.name\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit = () => {\n    let token = localStorage.getItem('userToken');\n    const decodedUser = jwt(token);\n    let newMsg = {id: null, textMessage: this.state.message, authorMessage: decodedUser.nickName};\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  }\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: 'flex'\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={['required', 'maxSymbols']}\n          errorMessages={['this field is required', 'maximum 200 symbols']}\n          margin=\"normal\"\n          style={{\n            width: '50%',\n\n          }}\n        />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default InputMessageForm;"]},"metadata":{},"sourceType":"module"}