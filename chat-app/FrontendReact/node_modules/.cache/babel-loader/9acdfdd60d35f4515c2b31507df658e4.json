{"ast":null,"code":"var _jsxFileName = \"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport Message from './message';\nimport Grid from \"@material-ui/core/Grid\";\nimport jwt from \"jwt-decode\";\nimport moment from 'moment';\nconst ChatContainer = styled(Container)({\n  background: 'inherit',\n  display: 'flex',\n  flexDirection: 'column',\n  overflowY: 'scroll',\n  height: 'inherit',\n  maxHeight: 'inherit' // height: window.innerHeight-((window.innerHeight*15/100)),\n  // maxHeight: window.innerHeight-(window.innerHeight*15/100),\n\n});\n\nconst MessageContainer = props => {\n  const {\n    messages,\n    username\n  } = props;\n  return /*#__PURE__*/React.createElement(ChatContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, messages.map(item => /*#__PURE__*/React.createElement(Message, {\n    timeMessage: moment(item.timeMessage).calendar(),\n    authorMessage: item.authorMessage,\n    textMessage: item.textMessage,\n    username: username,\n    colorNickName: item.colorAuthorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  })));\n};\n\nexport default MessageContainer;","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/components/chatPage/chat-components/messageContainer.jsx"],"names":["React","Component","Button","ValidatorForm","TextValidator","Container","styled","Message","Grid","jwt","moment","ChatContainer","background","display","flexDirection","overflowY","height","maxHeight","MessageContainer","props","messages","username","map","item","timeMessage","calendar","authorMessage","textMessage","colorAuthorName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,kCAA5C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,aAAa,GAAGL,MAAM,CAACD,SAAD,CAAN,CAAkB;AACpCO,EAAAA,UAAU,EAAE,SADwB;AAEpCC,EAAAA,OAAO,EAAE,MAF2B;AAGpCC,EAAAA,aAAa,EAAE,QAHqB;AAIpCC,EAAAA,SAAS,EAAE,QAJyB;AAKpCC,EAAAA,MAAM,EAAE,SAL4B;AAMpCC,EAAAA,SAAS,EAAE,SANyB,CAOpC;AACA;;AARoC,CAAlB,CAAtB;;AAcA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,KAA/B;AACA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOC,QAAQ,CAACE,GAAT,CAAcC,IAAD,iBACE,oBAAC,OAAD;AAAU,IAAA,WAAW,EAAGb,MAAM,CAACa,IAAI,CAACC,WAAN,CAAN,CAAyBC,QAAzB,EAAxB;AACU,IAAA,aAAa,EAAGF,IAAI,CAACG,aAD/B;AAEU,IAAA,WAAW,EAAGH,IAAI,CAACI,WAF7B;AAGU,IAAA,QAAQ,EAAIN,QAHtB;AAIU,IAAA,aAAa,EAAEE,IAAI,CAACK,eAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,CADP,CADJ;AAYH,CAdD;;AAgBA,eAAeV,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport Message from './message';\nimport Grid from \"@material-ui/core/Grid\";\nimport jwt from \"jwt-decode\";\nimport moment from 'moment';\n\nconst ChatContainer = styled(Container)({\n    background: 'inherit',\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'scroll',\n    height: 'inherit',\n    maxHeight: 'inherit',\n    // height: window.innerHeight-((window.innerHeight*15/100)),\n    // maxHeight: window.innerHeight-(window.innerHeight*15/100),\n});\n\n\n\n\nconst MessageContainer = (props) => {\n    const { messages, username } = props; \n    return (\n        <ChatContainer>\n              {messages.map((item)=> (\n                              <Message  timeMessage= {moment(item.timeMessage).calendar()} \n                                        authorMessage= {item.authorMessage} \n                                        textMessage= {item.textMessage}\n                                        username = {username}\n                                        colorNickName={item.colorAuthorName}\n                                        />\n              ) )}\n        </ChatContainer>\n    )\n}\n\nexport default MessageContainer;"]},"metadata":{},"sourceType":"module"}