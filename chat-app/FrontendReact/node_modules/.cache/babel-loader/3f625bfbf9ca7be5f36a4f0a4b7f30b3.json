{"ast":null,"code":"import _regeneratorRuntime from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/serafym/\\u041E\\u0431\\u0449\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435/development/ChatApp/chat-app/FrontendReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import SocketConnect from\"../../../services/chat.service\";import io from\"socket.io-client\";export function initWebSocketConnection(dispatch){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,socket;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return localStorage.getItem(\"userToken\");case 2:token=_context.sent;socket=new SocketConnect(token).getSocket();if(socket){dispatch(setSocket(socket));}case 5:case\"end\":return _context.stop();}}},_callee);}));}// export function getOneDay(dayNumber) {\n//     return async (dispatch) => {\n//       await SheduleService.getOneDay(dayNumber)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(response => {\n//           dispatch(selectedDay(response));\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n//   export function addExerciseOfSelectedDay(dayNumber, exerciseList) {\n//     return async (dispatch) => {\n//       await SheduleService.updateExercisesOfSelectedDay(dayNumber, exerciseList)\n//         .then(response => {\n//           dispatch(getAllDays());\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\nexport function setSocket(socket){return{type:'SET_SOCKET',socket:socket};}export function allOnlineUsers(onlineUsers){return{type:'ONLINE_USERS',onlineUsers:onlineUsers};}export function AllUsers(allUsers){return{type:'ALL_USERS',allUsers:allUsers};}export function isConnected(isConnected){return{type:'IS_CONNECTED',isConnected:isConnected};}export function allMessages(messages){return{type:'ALL_MESSAGES',messages:messages};}export function setIsMuteStatus(isMuted){return{type:'IS_MUTED',isMuted:isMuted};}","map":{"version":3,"sources":["/home/serafym/Общедоступные/development/ChatApp/chat-app/FrontendReact/src/redux/actions/chatActions/chat.actions.js"],"names":["SocketConnect","io","initWebSocketConnection","dispatch","localStorage","getItem","token","socket","getSocket","setSocket","type","allOnlineUsers","onlineUsers","AllUsers","allUsers","isConnected","allMessages","messages","setIsMuteStatus","isMuted"],"mappings":"yfAAA,MAAOA,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAGA,MAAO,SAASC,CAAAA,uBAAT,CAAiCC,QAAjC,CAA2C,CAChD,2EAAO,0KACaC,CAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,CADb,QACDC,KADC,eAEDC,MAFC,CAEQ,GAAIP,CAAAA,aAAJ,CAAkBM,KAAlB,EAAyBE,SAAzB,EAFR,CAIL,GAAGD,MAAH,CAAW,CAETJ,QAAQ,CAACM,SAAS,CAACF,MAAD,CAAV,CAAR,CACD,CAPI,sDAAP,GASD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,SAASE,CAAAA,SAAT,CAAmBF,MAAnB,CAA2B,CAChC,MAAO,CACLG,IAAI,CAAE,YADD,CAELH,MAAM,CAANA,MAFK,CAAP,CAID,CAEC,MAAO,SAASI,CAAAA,cAAT,CAAwBC,WAAxB,CAAqC,CAC1C,MAAO,CACLF,IAAI,CAAE,cADD,CAELE,WAAW,CAAXA,WAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,QAAT,CAAkBC,QAAlB,CAA4B,CACjC,MAAO,CACLJ,IAAI,CAAE,WADD,CAELI,QAAQ,CAARA,QAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,WAAT,CAAqBA,WAArB,CAAkC,CACvC,MAAO,CACLL,IAAI,CAAE,cADD,CAELK,WAAW,CAAXA,WAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,WAAT,CAAqBC,QAArB,CAA+B,CACpC,MAAO,CACLP,IAAI,CAAE,cADD,CAELO,QAAQ,CAARA,QAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,eAAT,CAAyBC,OAAzB,CAAkC,CACvC,MAAO,CACLT,IAAI,CAAE,UADD,CAELS,OAAO,CAAPA,OAFK,CAAP,CAID","sourcesContent":["import SocketConnect from \"../../../services/chat.service\";\nimport io from \"socket.io-client\";\n\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n    \n    if(socket) {\n\n      dispatch(setSocket(socket));\n    } \n  };\n}\n  \n// export function getOneDay(dayNumber) {\n//     return async (dispatch) => {\n//       await SheduleService.getOneDay(dayNumber)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(response => {\n//           dispatch(selectedDay(response));\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \n//   export function addExerciseOfSelectedDay(dayNumber, exerciseList) {\n//     return async (dispatch) => {\n//       await SheduleService.updateExercisesOfSelectedDay(dayNumber, exerciseList)\n//         .then(response => {\n//           dispatch(getAllDays());\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \nexport function setSocket(socket) {\n  return {\n    type: 'SET_SOCKET',\n    socket,\n  };\n}\n\n  export function allOnlineUsers(onlineUsers) {\n    return {\n      type: 'ONLINE_USERS',\n      onlineUsers,\n    };\n  }\n  \n  export function AllUsers(allUsers) {\n    return {\n      type: 'ALL_USERS',\n      allUsers,\n    };\n  }\n\n  export function isConnected(isConnected) {\n    return {\n      type: 'IS_CONNECTED',\n      isConnected,\n    };\n  }\n\n  export function allMessages(messages) {\n    return {\n      type: 'ALL_MESSAGES',\n      messages,\n    };\n  }\n\n  export function setIsMuteStatus(isMuted) {\n    return {\n      type: 'IS_MUTED',\n      isMuted,\n    };\n  }"]},"metadata":{},"sourceType":"module"}