{"version":3,"sources":["redux/reducers/chatReducers/chatReducer.js","redux/actions/authActions/actions.types.js","redux/reducers/authReducers/authReducer.js","redux/reducers/index.js","redux/actions/chatActions/actions.types.js","configure-store.js","components/hooks/useInput.jsx","components/authPage/form/SignInForm.jsx","services/auth.service.js","environment.js","redux/actions/authActions/auth.actions.js","components/authPage/UI/box/Center.jsx","components/authPage/SignIn.jsx","components/chatPage/chat-components/inputMessage.jsx","components/chatPage/chat-components/message.jsx","components/chatPage/chat-components/messageContainer.jsx","components/chatPage/chat-components/usersContainer.jsx","services/chat.service.js","redux/actions/chatActions/chat.actions.js","components/chatPage/chat-components/chatHeader.jsx","components/chatPage/chat-components/drawerRooms.jsx","components/chatPage/chat.jsx","components/home.jsx","guards/isAuthGuard.js","components/loading.jsx","components/error.jsx","router.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","isConnected","socket","messages","focusRoom","rooms","isLoggedIn","allUsers","isFetching","rootReducer","combineReducers","chatReducer","state","action","type","roomName","authReducer","store","createStore","applyMiddleware","thunk","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","SignInForm","handleSubmit","username","bindUserName","password","bindPassword","useEffect","ValidatorForm","addValidationRule","length","test","removeValidationRule","handleSubmitCallback","useCallback","evt","preventDefault","onSubmit","fullWidth","label","name","validators","errorMessages","margin","Button","variant","color","disabled","CircularProgress","size","AuthService","loginUser","user","axios","post","setIsFetching","isSignedInUser","withStyles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","text","textAlign","classes","children","className","Paper","SignIn","props","dispatch","useDispatch","signIn","a","then","response","data","token","isAdmin","nickNameColor","nickName","set","catch","error","alert","actions","useSelector","history","push","Avatar","Typography","component","ex","message","login","useStyles","makeStyles","inputMsg","down","formMsg","InputMessageForm","bindMessage","resetMessage","newMsg","form","IconButton","aria-label","root","justifyContent","myMsg","rootPaper","maxWidth","borderRadius","backgroundColor","myMsgPaper","msgText","maxHeight","Message","timeMessage","authorMessage","textMessage","colorNickName","Grid","item","xs","container","direction","style","wordWrap","messagesContainer","background","overflowY","height","paddingBottom","MessageContainer","myRef","useRef","console","log","current","scrollTop","scrollHeight","Container","ref","map","index","key","moment","calendar","colorAuthorName","position","borderColor","borderWidth","top","left","ul","UsersList","userName","setMuteStatus","setBan","showUsersContainer","goToOneToOneRoome","usersCategories","Online","filter","onlineStatus","Offline","arr","List","subheader","status","listSection","ListSubheader","ListItem","ListItemText","primary","onClick","id","userId","ButtonGroup","isMuted","isBaned","SocketConnect","exists","instance","this","io","forceNew","setSocket","flexGrow","menuButton","title","titleRoom","Header","shallowEqual","AppBar","Toolbar","edge","showHideUsersList","logout","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","DrawerChatRooms","showRoomsContainer","setShowRoomsContainer","currentUserName","useTheme","Drawer","anchor","open","noWrap","Divider","room","button","find","replace","secondary","substr","chatContainer","chatList","ChatPage","get","setMessages","isCurrentUserAdmin","setIsAdmin","currentUserNickName","setNickName","setIsMuted","setShowUsersContainer","initConnection","localStorage","getItem","getSocket","setUsers","setRooms","setFocusRoom","setIsConnected","authActions","disconnect","disconnnectAndLogout","clearAll","ChatService","changeExists","emit","sendMsg","on","res","msg","Home","to","Component","isAuthGuard","from","next","meta","auth","redirect","Loading","loading","React","NotFound","AppRouter","guards","path","exact","createBrowserHistory","mainStore","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77c42f6a.chunk.js","sourcesContent":["import * as actionTypes from '../../actions/chatActions/actions.types'\n\nconst initialState = {\n  users: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n  focusRoom: 'default',\n  rooms: []\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n\n      case actionTypes.ROOMS:\n        return {\n          ...state,\n          rooms: action.rooms,\n        };  \n\n    case actionTypes.IS_CONNECTED:\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case actionTypes.SET_SOCKET:\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case actionTypes.FOCUS_ROOM:\n      return {\n        ...state,\n        roomName: action.focusRoom,\n      };\n    case actionTypes.ALL_MESSAGES:\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN';","import * as actionTypes from '../../actions/authActions/actions.types'\n\nconst initialState = {\n  isLoggedIn: false,\n  allUsers: [],\n  isConnected: false,\n  isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.IS_LOGGED_IN:\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n      };\n    case actionTypes.IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport chatReducer from \"./chatReducers/chatReducer\";\nimport authReducer from \"./authReducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  chatReducer,\n  authReducer,\n});\n\nexport default rootReducer;\n","\nexport const SET_SOCKET = 'SET_SOCKET';\nexport const USERS = 'USERS';\nexport const IS_CONNECTED = 'IS_CONNECTED';\nexport const ALL_MESSAGES = 'ALL_MESSAGES';\nexport const FOCUS_ROOM = 'FOCUS_ROOM';\nexport const ROOMS = 'ROOMS';","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};","import React, { useEffect, useCallback } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {useInput} from '../../hooks/useInput'\n\nconst SignInForm = ({ isFetching, handleSubmit }) => {\n\n  const { value:username, bind:bindUserName, reset:resetUserName } = useInput('');\n  const { value:password, bind:bindPassword, reset:resetPassword } = useInput('');\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      return value.length > 3;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      return !(/[^A-zА-яЁё0-9]/.test(value));\n    });\n\n    return () => {\n      ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n      ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    }\n  }, [ValidatorForm]);\n\n\n  const handleSubmitCallback = useCallback((evt) => {\n    evt.preventDefault();\n    handleSubmit({username, password});\n  }, [username, password, handleSubmit]);\n\n  return (\n    <ValidatorForm  onSubmit={handleSubmitCallback}>\n      <TextValidator\n        fullWidth\n        label=\"Username\"\n        name=\"username\"\n        {...bindUserName}\n        validators={[\n          \"required\",\n          \"moreThanThreeChar\",\n          \"notAllowedSpecialSymbols\",\n        ]}\n        errorMessages={[\n          \"this field is required\",\n          \"3 characters minimum\",\n          \"Not allowed special symbols\",\n        ]}\n        margin=\"normal\"\n      />\n      <TextValidator\n        fullWidth\n        label=\"Password\"\n        type=\"password\"\n        {...bindPassword}\n        name=\"password\"\n        validators={[\"required\"]}\n        errorMessages={[\"this field is required\"]}\n        margin=\"normal\"\n      />\n      <Button\n        variant=\"contained\"\n        fullWidth\n        color=\"primary\"\n        type=\"submit\"\n        disabled={isFetching}\n        margin=\"normal\"\n      >\n        {isFetching && <CircularProgress size={20} />} Sign In\n      </Button>\n    </ValidatorForm>\n  );\n}\n\n\n\n\nexport default SignInForm;\n","import { URL_API } from \"../environment\";\nimport axios from \"axios\";\n\nexport default class AuthService {\n  static loginUser = (user) => {\n    return axios.post(`${URL_API}/auth/login`, user)\n  };\n}\n","export const URL_API = 'http://localhost:3000';\n\n","import AuthService from \"../../../services/auth.service\";\nimport * as actionTypes from './actions.types';\nimport store from 'store';\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: actionTypes.IS_FETCHING,\n    isFetching,\n  };\n};\n\nexport const isSignedInUser = (isLoggedIn) => {\n  return {\n    type: actionTypes.IS_LOGGED_IN,\n    isLoggedIn,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then( (response) => {\n        const {token, isAdmin, nickNameColor, nickName} = response.data;\n        store.set(\"token\", token);\n        store.set(\"userData\", {isAdmin, nickName, nickNameColor});\n        dispatch(setIsFetching(false));\n        dispatch(isSignedInUser(true));\n      })\n      .catch((error) => {\n        alert(error.response.data);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n  },\n  text: {\n    textAlign: 'center'\n  },\n})\n\nconst BoxCenter = ({classes, children}) => {\n  return (\n    <div>\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          {children}\n        </Paper>\n      </main>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(BoxCenter)\n","import React, { useEffect, useCallback,  } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst SignIn = (props) => {\n  const dispatch = useDispatch();\n\n  const signIn = useCallback(\n    (user) => dispatch(actions.signIn(user)),\n    [dispatch]\n  );\n\n  const isFetching = useSelector(state => state.authReducer.isFetching);\n\n  const isLoggedIn = useSelector(state => state.authReducer.isLoggedIn);\n\n  useEffect(()=> {\n   if(isLoggedIn)\n   props.history.push(\"/chat\");\n  }, [isLoggedIn])\n\n  const login = ({username, password}) => {\n  \n      signIn({\n        nickName: username,\n        password: password,\n      })\n      .catch((ex) => {\n        alert(ex.message);\n      });\n  }\n\n  return (\n    <BoxCenter>\n      <Avatar>\n        <LockIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <SignInForm\n        handleSubmit={(data) => login(data)}\n        isFetching={isFetching}\n      />\n    </BoxCenter>\n  );\n\n\n}\n\nexport default SignIn;\n","import React, { useEffect, useCallback } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useInput } from \"../../hooks/useInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputMsg: {\n    width: \"50%\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n    },\n  },\n  formMsg: {\n    display: \"flex\",\n  },\n}));\n\nconst InputMessageForm = (props) => {\n  const classes = useStyles();\n  const { value: message, bind: bindMessage, reset: resetMessage } = useInput(\"\");\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      return value.length < 200;\n    });\n\n    return () => {\n      ValidatorForm.removeValidationRule(\"maxSymbols\");\n    };\n  }, [ValidatorForm]);\n\n  const handleSubmit = useCallback(() => {\n    const newMsg = message;\n    resetMessage();\n    props.handleSubmit(newMsg);\n  });\n\n  return (\n    <ValidatorForm onSubmit={handleSubmit} className={classes.form}>\n      <TextValidator\n        fullWidth\n        label=\"Message\"\n        {...bindMessage}\n        name=\"message\"\n        validators={[\"required\", \"maxSymbols\"]}\n        errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n        margin=\"normal\"\n        className={classes.inputMsg}\n      />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n    </ValidatorForm>\n  );\n};\n\nexport default InputMessageForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    \n  },\n  rootPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#eaeaea'\n  },\n  myMsgPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#c1e2ce'\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName} = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}>\n        <Grid item xs container direction=\"column\" className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}> \n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Message from \"./message\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  messagesContainer: {\n    background: \"inherit\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflowY: \"scroll\",\n    height: \"inherit\",\n    maxHeight: \"inherit\",\n    paddingBottom: 10,\n  },\n}));\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n  const myRef = useRef(null);\n  const classes = useStyles();\n  console.log(messages)\n\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n\n  return (\n    <Container className={classes.messagesContainer} ref={myRef}>\n      {messages.map((item, index) => (\n        <Message\n          key={`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default MessageContainer;\n","import React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    position: \"relative\",\n    height: 'avalaible',\n    maxHeight: 'inherit',\n    borderColor: \"#000\",\n    borderWidth: 2,\n    backgroundColor: \"#eabf7d8c\",\n    top: 0,\n    left: 0,\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute', \n      backgroundColor: \"#8cd2b5\", \n      height: 300,\n      overflowY: 'scroll'\n    }\n  },\n  ul: {\n    backgroundColor: \"#eabf7d8c\",\n    padding: 0,\n  },\n\n}));\n\nconst UsersList = (props) => {\n\n  const { isAdmin, users, userName, setMuteStatus, setBan, showUsersContainer, goToOneToOneRoome} = props;\n  const handleMute = (id) => {\n    setMuteStatus(id)\n  }\n\n  const handleBan = (id) => {\n    setBan(id)\n  }\n\n  const handleGoToOneToOneRoome = (id) => {\n    goToOneToOneRoome(id)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  \n\n  return (\n    <List className={classes.root} subheader={<li />} \n      style={showUsersContainer ? \n      {display: 'block'}:{display: 'none'}}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} style={{color: user.nickNameColor}}/>\n\n                <Button onClick={()=>handleGoToOneToOneRoome(user.userId)}> 1to1</Button>\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user.userId)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user.userId)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nexport default UsersList;","import io from \"socket.io-client\";\nimport {URL_API} from '../environment';\n\nexport default  class SocketConnect {\n  constructor(token) {\n    if (SocketConnect.exists) {\n      return SocketConnect.instance\n    }\n    \n    SocketConnect.instance = this\n    SocketConnect.exists = true\n    this.socket = io(`${URL_API}?token=${token}`, { forceNew: true });\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n\n  static changeExists() {\n    SocketConnect.exists = false;\n  }\n}\n","import SocketConnect from \"../../../services/chat.service\";\nimport * as actionTypes from './actions.types'\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"token\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\n\nexport function setSocket(socket) {\n  return {\n    type: actionTypes.SET_SOCKET,\n    socket,\n  };\n}\n\nexport function setFocusRoom(roomName) {\n  return {\n    type: actionTypes.FOCUS_ROOM,\n    roomName,\n  };\n}\n\nexport function setRooms(rooms) {\n  return {\n    type: actionTypes.ROOMS,\n    rooms,\n  };\n}\n\nexport function setUsers(users) {\n  return {\n    type: actionTypes.USERS,\n    users,\n  };\n}\n\nexport function isConnected(isConnected) {\n  return {\n    type: actionTypes.IS_CONNECTED,\n    isConnected,\n  };\n}\n\nexport function allMessages(messages) {\n  return {\n    type: actionTypes.ALL_MESSAGES,\n    messages,\n  };\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  titleRoom: {\n    flexGrow: 1,\n    marginLeft: 40,\n    borderWidth:1,\n    borderColor: '#000'\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const roomName = useSelector(state => state.chatReducer.roomName, shallowEqual);\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={props.showHideUsersList}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} style={{color: props.colorNickName}}>\n            {props.username}\n          </Typography>\n          {\n            roomName!=='default' ?\n          <Typography variant=\"h6\" className={classes.titleRoom} style={{color: props.colorNickName}}>\n            {roomName}\n          </Typography>\n          : null\n          }\n          <Button onClick={props.logout} color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { useSelector, shallowEqual } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst DrawerChatRooms = (props) => {\n  const {\n    showRoomsContainer,\n    setShowRoomsContainer,\n    currentUserName,\n    goToOneToOneRoome,\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const rooms = useSelector((state) => state.chatReducer.rooms, shallowEqual);\n\n  const handleDrawerClose = () => {\n    setShowRoomsContainer(false);\n  };\n\n  const handleGoToOneToOneRoome = (id) => {\n    goToOneToOneRoome(id);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={showRoomsContainer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Chat rooms\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {rooms.map((room, index) => (\n            <ListItem\n              button\n              key={`room-${index}`}\n              onClick={() =>\n                handleGoToOneToOneRoome(\n                  room.users.find((user) => user.name !== currentUserName)\n                    .userId\n                )\n              }\n            >\n              <ListItemText\n                primary={room.roomName.replace(currentUserName, \"\")}\n                secondary={room.messages[\n                  room.messages.length - 1\n                ].textMessage.substr(0, 50)}\n              />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default DrawerChatRooms;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport * as authActions from \"../../redux/actions/authActions/auth.actions\";\nimport ChatService from \"../../services/chat.service\";\nimport { Container } from \"@material-ui/core\";\nimport Header from \"./chat-components/chatHeader\";\nimport store from \"store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DrawerChatRooms from './chat-components/drawerRooms'\n\nconst useStyles = makeStyles((theme) => ({\n  chatContainer: {\n    background: \"#6d81af\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    margin: 0,\n    padding: 0,\n    height: 800,\n    position: \"relative\",\n    maxHeight: 1000,\n    [theme.breakpoints.down(\"xs\")]: {\n      height: 300,\n      maxHeight: 600,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 600,\n      maxHeight: 800,\n    },\n  },\n  chatList: {\n    width: 400, \n  }\n}));\n\nconst ChatPage = (props) => {\n  const classes = useStyles();\n\n  const { nickNameColor, isAdmin, nickName } = store.get(\"userData\");\n  let colorNickName = nickNameColor;\n\n  const [messages, setMessages] = useState([]);\n  const [isCurrentUserAdmin, setIsAdmin] = useState(false);\n  const [currentUserNickName, setNickName] = useState(\"\");\n  const [isMuted, setIsMuted] = useState(false);\n  const [showUsersContainer, setShowUsersContainer] = useState(true);\n  const [showRoomsContainer, setShowRoomsContainer] = useState(false);\n \n\n  const dispatch = useDispatch();\n\n  const isConnected = useSelector(\n    (state) => state.chatReducer.isConnected,\n    shallowEqual\n  );\n  const users = useSelector((state) => state.chatReducer.users, shallowEqual);\n  const socket = useSelector((state) => state.chatReducer.socket, shallowEqual);\n  const focusRoom = useSelector(\n    (state) => state.chatReducer.focusRoom,\n    shallowEqual\n  );\n\n  const initConnection = useCallback(\n    () => dispatch(actions.initWebSocketConnection(dispatch)),\n    [dispatch]\n  );\n  const setUsers = useCallback((user) => dispatch(actions.setUsers(user)), [\n    dispatch,\n  ]);\n  const setRooms = useCallback((rooms) => dispatch(actions.setRooms(rooms)), [\n    dispatch,\n  ]);\n\n  const setFocusRoom = useCallback((room) => dispatch(actions.setFocusRoom(room)), [\n    dispatch,\n  ]);\n\n  const setIsConnected = useCallback(\n    (status) => dispatch(actions.isConnected(status)),\n    [dispatch]\n  );\n  const isSignedInUser = useCallback(\n    (status) => dispatch(authActions.isSignedInUser(status)),\n    [dispatch]\n  );\n  const logout = useCallback(() => {\n    socket.disconnect(true);\n    disconnnectAndLogout();\n  });\n  const disconnnectAndLogout = useCallback(() => {\n    store.clearAll();\n    isSignedInUser(false);\n    ChatService.changeExists();\n    props.history.push(\"/login\");\n  });\n  \n  const goToOneToOneRoome = (id) => socket.emit(\"joinRoom\", id);\n  const setMuteStatus = (id) => socket.emit(\"mute\", id);\n  const setBan = (id) => socket.emit(\"ban\", id);\n  const sendMsg = useCallback((textMessage) => socket.emit(\"chat\", {textMessage, focusRoom}));\n\n  useEffect(() => {\n    initConnection();\n    if (socket) {\n      socket.on(\"users\", (res) => setUsers(res));\n\n      socket.on(\"previousMessages\", (res) => setMessages(res));\n\n      socket.on(\"error\", (msg) => {\n        alert(msg);\n        props.history.push(\"/login\");\n      });\n\n      socket.on(\"initialMuteStatus\", (isMuted) => setIsMuted(isMuted));\n\n      socket.on(\"rooms\", (rooms) => {\n        setRooms(rooms);\n      });\n\n      socket.on(\"focusRoom\", (room) => {\n        setFocusRoom(room);\n      });\n\n      socket.on(\"mute\", (isMuted) => setIsMuted(isMuted));\n\n      socket.on(\"chat\", (msg) => setMessages([...messages, msg]));\n\n      socket.on(\"disconnect\", (socket) => {\n        disconnnectAndLogout();\n      });\n      setIsAdmin(isAdmin);\n      setNickName(nickName);\n      setIsConnected(true);\n    }\n    return () => setIsConnected(false);\n  }, [users, socket, messages]);\n\n  return isConnected && users.length > 0 ? (\n    <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Header\n        username={nickName}\n        colorNickName={colorNickName}\n        showHideUsersList={() => setShowUsersContainer(!showUsersContainer)}\n        logout={() => logout()}\n      />\n\n      <Container className={classes.chatContainer}>\n        <UsersList\n          users={users}\n          isAdmin={isCurrentUserAdmin}\n          userName={currentUserNickName}\n          setMuteStatus={(user) => setMuteStatus(user)}\n          setBan={(user) => setBan(user)}\n          showUsersContainer={showUsersContainer}\n          goToOneToOneRoome={goToOneToOneRoome}\n        />\n        <MessageContainer messages={messages} username={nickName} />\n        <DrawerChatRooms\n          goToOneToOneRoome={goToOneToOneRoome}\n          showRoomsContainer={showRoomsContainer}\n          setShowRoomsContainer={setShowRoomsContainer}\n          currentUserName = {currentUserNickName}\n        />\n      </Container>\n      {!isMuted ? (\n        <InputMessageForm handleSubmit={(message) => sendMsg(message)} />\n      ) : null}\n    </Container>\n  ) : null;\n};\n\nexport default ChatPage;\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  render () {\n    return <Redirect to={`/login`} />; \n  }\n}\n\nexport default Home;","\nexport const isAuthGuard = (to, from, next) => {\n    if (to.meta.auth) {\n      if (localStorage.getItem('token')) {\n        next.redirect('/chat');\n      }\n      next.redirect('/login');\n    } else {\n      next();\n    }\n};\n\n\n\n","import React from 'react';\nimport { BallBeat } from 'react-pure-loaders';\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div>\n        <BallBeat\n          color={'#123abc'}\n          loading={this.state.loading}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst NotFound = () =>(\n  <div>\n    <h3>404 page not found</h3>\n    <p>We are sorry but the page you are looking for does not exist.</p>\n  </div>\n)\nexport default NotFound;","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SignIn from './components/authPage/SignIn';\nimport ChatPage from './components/chatPage/chat';\nimport Home from './components/home';\nimport { GuardProvider, GuardedRoute } from 'react-router-guards';\nimport {isAuthGuard} from './guards/isAuthGuard';\nimport Loading from './components/loading';\nimport NotFound from './components/error';\n\n const AppRouter = () => \n(\n  <GuardProvider guards={[isAuthGuard]} loading={Loading} error={NotFound}>\n        <Switch>\n          <GuardedRoute path=\"/login\" exact component={SignIn} meta={{ auth: true }}/>\n          <GuardedRoute path=\"/\" exact component={Home} meta={{ auth: true }} />\n          <GuardedRoute path=\"/chat\" exact component={ChatPage} meta={{ auth: true }} />\n          <GuardedRoute path=\"*\" component={NotFound} />\n        </Switch>\n  </GuardProvider>\n);\n\nexport default AppRouter;\n\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from './configure-store';\nimport { Router } from \"react-router-dom\";\nimport AppRouter from \"./router\";\nimport history from \"./services/history\";\n\nconst mainStore = store;\nconst App = () => {\n  return (\n  <Provider store={mainStore}>\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n   </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}