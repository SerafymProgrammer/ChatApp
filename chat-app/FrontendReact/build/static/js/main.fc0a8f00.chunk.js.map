{"version":3,"sources":["redux/reducers/chatReducers/chatReducer.js","redux/actions/authActions/actions.types.js","redux/reducers/authReducers/authReducer.js","redux/reducers/index.js","redux/actions/chatActions/actions.types.js","configure-store.js","components/authPage/form/SignInForm.jsx","services/auth.service.js","environment.js","redux/actions/authActions/auth.actions.js","components/authPage/UI/box/Center.jsx","components/authPage/SignIn.jsx","components/chatPage/chat-components/inputMessage.jsx","components/chatPage/chat-components/message.jsx","components/chatPage/chat-components/messageContainer.jsx","components/chatPage/chat-components/usersContainer.jsx","services/chat.service.js","redux/actions/chatActions/chat.actions.js","components/chatPage/chat-components/chatHeader.jsx","components/chatPage/chat.jsx","components/home.jsx","guards/isAuthGuard.js","components/loading.jsx","components/error.jsx","router.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","isConnected","socket","messages","isLoggedIn","allUsers","isFetching","rootReducer","combineReducers","chatReducer","state","action","type","authReducer","store","createStore","applyMiddleware","thunk","SignInForm","props","handleChange","event","value","target","field","name","setState","handleSubmit","username","password","ValidatorForm","addValidationRule","length","test","removeValidationRule","this","ref","onSubmit","fullWidth","label","onChange","validators","errorMessages","margin","Button","variant","color","disabled","CircularProgress","size","Component","AuthService","loginUser","user","axios","post","setIsFetching","withStyles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","text","textAlign","classes","children","className","Paper","SignIn","signIn","nickName","catch","ex","alert","message","prevProps","history","push","Avatar","Typography","component","data","login","connect","dispatch","a","then","response","token","isAdmin","nickNameColor","set","error","actions","InputMessageForm","newMsg","reset","isMobileWindow","window","matchMedia","addListener","e","matches","style","IconButton","aria-label","useStyles","makeStyles","root","justifyContent","myMsg","rootPaper","maxWidth","borderRadius","backgroundColor","myMsgPaper","msgText","maxHeight","Message","timeMessage","authorMessage","textMessage","colorNickName","Grid","item","xs","container","direction","wordWrap","MessagesContainer","styled","Container","background","overflowY","height","paddingBottom","MessageContainer","myRef","useRef","useEffect","current","scrollTop","scrollHeight","map","index","key","moment","calendar","colorAuthorName","position","borderColor","borderWidth","top","left","down","ul","UsersList","userName","setMuteStatus","setBan","showUsersContainer","usersCategories","Online","filter","onlineStatus","Offline","arr","List","subheader","status","listSection","ListSubheader","ListItem","ListItemText","primary","ButtonGroup","onClick","handleMute","isMuted","id","isBaned","SocketConnect","exists","instance","io","forceNew","setSocket","flexGrow","menuButton","title","Header","AppBar","Toolbar","edge","showHideUsersList","logout","ChatPage","initConnection","on","res","setUsers","msg","IsMute","clearAll","get","emit","localStorage","removeItem","disconnect","chatContainer","sendMsg","getItem","getSocket","Home","to","isAuthGuard","from","next","meta","auth","redirect","Loading","loading","React","NotFound","AppRouter","guards","path","exact","createBrowserHistory","mainStore","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.fc0a8f00.chunk.js","sourcesContent":["import * as actionTypes from '../../actions/chatActions/actions.types'\n\nconst initialState = {\n  users: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n\n    case actionTypes.IS_CONNECTED:\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case actionTypes.SET_SOCKET:\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case actionTypes.ALL_MESSAGES:\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_LOGGED_IN = 'IS_LOGGED_IN';","import * as actionTypes from '../../actions/authActions/actions.types'\n\nconst initialState = {\n  isLoggedIn: false,\n  allUsers: [],\n  isConnected: false,\n  isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.IS_LOGGED_IN:\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n      };\n    case actionTypes.IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport chatReducer from \"./chatReducers/chatReducer\";\nimport authReducer from \"./authReducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  chatReducer,\n  authReducer,\n});\n\nexport default rootReducer;\n","\nexport const SET_SOCKET = 'SET_SOCKET';\nexport const USERS = 'USERS';\nexport const IS_CONNECTED = 'IS_CONNECTED';\nexport const ALL_MESSAGES = 'ALL_MESSAGES';","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      if (value.length < 3) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      if (/[^A-zА-яЁё0-9]/.test(value)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: \"\",\n      password: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    this.props.handleSubmit(this.state);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    const { isFetching } = this.props;\n\n    return (\n      <ValidatorForm ref=\"form\" onSubmit={this.handleSubmit}>\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={[\n            \"required\",\n            \"moreThanThreeChar\",\n            \"notAllowedSpecialSymbols\",\n          ]}\n          errorMessages={[\n            \"this field is required\",\n            \"3 characters minimum\",\n            \"Not allowed special symbols\",\n          ]}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Sign In\n        </Button>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default SignInForm;\n","import { URL_API } from \"../environment\";\nimport axios from \"axios\";\n\nexport default class AuthService {\n  static loginUser = (user) => {\n    return axios.post(`${URL_API}/auth/login`, user)\n  };\n}\n","export const URL_API = 'http://localhost:3000';\n\n","import AuthService from \"../../../services/auth.service\";\nimport * as actionTypes from './actions.types';\nimport store from 'store';\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: actionTypes.IS_FETCHING,\n    isFetching,\n  };\n};\n\nexport const isSignedInUser = (isLoggedIn) => {\n  return {\n    type: actionTypes.IS_LOGGED_IN,\n    isLoggedIn,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then( (response) => {\n        const {token, isAdmin, nickNameColor, nickName} = response.data;\n        store.set(\"token\", token);\n        store.set(\"userData\", {isAdmin, nickName, nickNameColor});\n        dispatch(setIsFetching(true));\n        dispatch(isSignedInUser(true));\n      })\n      .catch((error) => {\n        alert(error.response.data);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n  },\n  text: {\n    textAlign: 'center'\n  },\n})\n\nconst BoxCenter = ({classes, children}) => {\n  return (\n    <div>\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          {children}\n        </Paper>\n      </main>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(BoxCenter)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\n\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n\n  }\n\n  login({username, password}) {\n    this.props\n      .signIn({\n        nickName: username,\n        password: password,\n      })\n      .catch((ex) => {\n        alert(ex.message);\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isLoggedIn !== this.props.isLoggedIn &&\n      this.props.isLoggedIn\n    ) {\n      this.props.history.push(\"/chat\");\n    }\n  }\n\n  render() {\n    const { isFetching } = this.props;\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm\n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n      </BoxCenter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.authReducer.isFetching,\n    isLoggedIn: state.authReducer.isLoggedIn,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nclass InputMessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      isMobileWindow: false,\n    };\n  }\n\n  componentDidMount() {\n    window.matchMedia(\"(max-width: 400px)\").addListener((e) => {\n      this.setState({ isMobileWindow: e.matches });\n    });\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      message: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    const newMsg = this.state.message;\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  };\n\n  render() {\n    const { message, isMobileWindow } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={[\"required\", \"maxSymbols\"]}\n          errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n          margin=\"normal\"\n          style={\n            isMobileWindow\n              ? {\n                  width: \"100%\",\n                }\n              : {\n                  width: \"50%\",\n                }\n          }\n        />\n        <IconButton aria-label=\"send\" type=\"submit\">\n          <SendIcon />\n        </IconButton>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default InputMessageForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    \n  },\n  rootPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#eaeaea'\n  },\n  myMsgPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#c1e2ce'\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName} = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}>\n        <Grid item xs container direction=\"column\" className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}> \n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Message from \"./message\";\nimport moment from \"moment\";\n\nconst MessagesContainer = styled(Container)({\n  background: \"inherit\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflowY: \"scroll\",\n  height: \"inherit\",\n  maxHeight: \"inherit\",\n  paddingBottom: 10,\n});\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n\n  return (\n    <MessagesContainer ref={myRef}>\n      {messages.map((item, index) => (\n        <Message\n          key={`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </MessagesContainer>\n  );\n};\n\nexport default MessageContainer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    position: \"relative\",\n    height: 'avalaible',\n    maxHeight: 'inherit',\n    borderColor: \"#000\",\n    borderWidth: 2,\n    backgroundColor: \"#eabf7d8c\",\n    top: 0,\n    left: 0,\n    [theme.breakpoints.down('xs')]: {\n      position: 'absolute', \n      backgroundColor: \"#8cd2b5\", \n      height: 300,\n      overflowY: 'scroll'\n    }\n  },\n  ul: {\n    backgroundColor: \"#eabf7d8c\",\n    padding: 0,\n  },\n\n}));\n\nexport default function UsersList(props) {\n  const { isAdmin, users, userName, setMuteStatus, setBan, showUsersContainer} = props;\n  const handleMute = (user) => {\n    setMuteStatus(user)\n  }\n\n  const handleBan = (id) => {\n    setBan(id)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  return (\n    <List className={classes.root} subheader={<li />} \n      style={showUsersContainer ? \n      {display: 'block'}:{display: 'none'}}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} style={{color: user.nickNameColor}}/>\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user.id)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n","import io from \"socket.io-client\";\nimport {URL_API} from '../environment';\n\nexport default  class SocketConnect {\n  constructor(token) {\n    if (SocketConnect.exists) {\n      return SocketConnect.instance\n    }\n    SocketConnect.instance = this\n    SocketConnect.exists = true\n    this.socket = io(`${URL_API}?token=${token}`, { forceNew: true });\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n}\n","import SocketConnect from \"../../../services/chat.service\";\nimport * as actionTypes from './actions.types'\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"token\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\n\nexport function setSocket(socket) {\n  return {\n    type: actionTypes.SET_SOCKET,\n    socket,\n  };\n}\n\nexport function setUsers(users) {\n  return {\n    type: actionTypes.USERS,\n    users,\n  };\n}\n\nexport function isConnected(isConnected) {\n  return {\n    type: actionTypes.IS_CONNECTED,\n    isConnected,\n  };\n}\n\nexport function allMessages(messages) {\n  return {\n    type: actionTypes.ALL_MESSAGES,\n    messages,\n  };\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={props.showHideUsersList}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} style={{color: props.colorNickName}}>\n            {props.username}\n          </Typography>\n          <Button onClick={props.logout} color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport { withStyles } from '@material-ui/core/styles';\nimport store from 'store';\n\nconst styles = theme => ({\n  chatContainer: {\n    background: \"#6d81af\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    margin: 0,\n    padding: 0,\n    height: 800,\n    position: 'relative',\n    maxHeight: 1000,\n    [theme.breakpoints.down('xs')]: {\n      height: 300,\n      maxHeight: 600,\n    },\n    [theme.breakpoints.down('sm')]: {\n      height: 600,\n      maxHeight: 800,\n    },\n  },\n});\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 800,\n  position: 'relative',\n  maxHeight: 1000,\n  \"@media (max-height:900px)\": {\n    height: 700,\n    maxHeight: 900,\n  },\n  \"@media (max-height:800px)\": {\n    height: 600,\n    maxHeight: 800,\n  },\n  \"@media (max-height:700px)\": {\n    height: 500,\n    maxHeight: 700,\n  },\n  \"@media (max-height:600px)\": {\n    height: 400,\n    maxHeight: 600,\n  },\n  \"@media (max-height:500px)\": {\n    height: 300,\n    maxHeight: 500,\n  },\n  \"@media (max-height:400px)\": {\n    height: 200,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      nickName: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (msg) =>{\n      alert(msg);\n      this.props.history.push('/login');\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      store.clearAll();\n      this.props.history.push('/login');\n    });\n    const {nickNameColor, isAdmin, nickName} = store.get('userData');\n    this.colorNickName = nickNameColor;\n    this.setState({\n      isAdmin,\n      nickName\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(id) {\n    this.props.socket.emit(\"ban\", id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", message);\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    this.props.history.push('/login');\n  }\n\n  render() {\n\n    const { isConnected, users, classes } = this.props;\n    const { isAdmin, nickName, showUsersContainer, messages} = this.state;\n\n    return isConnected && users.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={nickName}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <Container className={classes.chatContainer}>\n          <UsersList\n            users={users}\n            isAdmin={isAdmin}\n            userName={nickName}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n          />\n          <MessageContainer\n            messages={messages}\n            username={nickName}\n          />\n        </Container>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    users: state.chatReducer.users,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: (users) => dispatch(actions.setUsers(users)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n  };\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ChatPage));\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  render () {\n    return <Redirect to={`/login`} />; \n  }\n}\n\nexport default Home;","\nexport const isAuthGuard = (to, from, next) => {\n    if (to.meta.auth) {\n      if (localStorage.getItem('token')) {\n        next.redirect('/chat');\n      }\n      next.redirect('/login');\n    } else {\n      next();\n    }\n};\n\n\n\n","import React from 'react';\nimport { BallBeat } from 'react-pure-loaders';\n\nexport default class Loading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div>\n        <BallBeat\n          color={'#123abc'}\n          loading={this.state.loading}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nconst NotFound = () =>(\n  <div>\n    <h3>404 page not found</h3>\n    <p>We are sorry but the page you are looking for does not exist.</p>\n  </div>\n)\nexport default NotFound;","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SignIn from './components/authPage/SignIn';\nimport ChatPage from './components/chatPage/chat';\nimport Home from './components/home';\nimport { GuardProvider, GuardedRoute } from 'react-router-guards';\nimport {isAuthGuard} from './guards/isAuthGuard';\nimport Loading from './components/loading';\nimport NotFound from './components/error';\n\n const AppRouter = () => \n(\n  <GuardProvider guards={[isAuthGuard]} loading={Loading} error={NotFound}>\n        <Switch>\n          <GuardedRoute path=\"/login\" exact component={SignIn} meta={{ auth: true }}/>\n          <GuardedRoute path=\"/\" exact component={Home} meta={{ auth: true }} />\n          <GuardedRoute path=\"/chat\" exact component={ChatPage} meta={{ auth: true }} />\n          <GuardedRoute path=\"*\" component={NotFound} />\n        </Switch>\n  </GuardProvider>\n);\n\nexport default AppRouter;\n\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from './configure-store';\nimport { Router } from \"react-router-dom\";\nimport AppRouter from \"./router\";\nimport history from \"./services/history\";\n\nconst mainStore = store;\nconst App = () => {\n  return (\n  <Provider store={mainStore}>\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n   </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}