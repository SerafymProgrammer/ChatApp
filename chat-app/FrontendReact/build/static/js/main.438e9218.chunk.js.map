{"version":3,"sources":["redux/reducers/chatReducers/chatReducer.js","redux/reducers/authReducers/authReducer.js","redux/reducers/index.js","configure-store.js","components/authPage/form/SignInForm.jsx","services/auth.service.js","redux/actions/authActions/auth.actions.js","components/authPage/UI/box/Center.jsx","components/authPage/SignIn.jsx","services/helpers.js","components/chatPage/chat-components/inputMessage.jsx","components/chatPage/chat-components/message.jsx","components/chatPage/chat-components/messageContainer.jsx","components/chatPage/chat-components/usersContainer.jsx","services/chat.service.js","redux/actions/chatActions/chat.actions.js","components/chatPage/chat-components/chatHeader.jsx","components/chatPage/chat.jsx","components/home.jsx","router.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["initialState","onlineUsers","allUsers","isConnected","socket","messages","isMuted","isLoggedIn","isFetching","rootReducer","combineReducers","chatReducer","state","action","type","authReducer","store","createStore","applyMiddleware","thunk","SignInForm","props","handleChange","event","value","target","field","name","setState","handleSubmit","data","Object","assign","id","reset","username","password","ValidatorForm","addValidationRule","length","test","removeValidationRule","this","ref","onSubmit","fullWidth","label","onChange","validators","errorMessages","margin","Button","variant","color","disabled","CircularProgress","size","Component","AuthService","loginUser","user","a","fetch","method","headers","Accept","body","JSON","stringify","isSignedInUser","setIsFetching","withStyles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","backgroundColor","palette","secondary","text","textAlign","classes","children","className","CssBaseline","Paper","role","aria-label","href","colorsHues","SignIn","didInvalidate","localStorage","getItem","window","location","min","max","signIn","nickName","nickNameColor","randomColor","luminosity","hue","Math","floor","random","catch","ex","console","log","prevProps","Avatar","Typography","component","login","connect","dispatch","then","response","json","status","alert","msg","userToken","Error","setItem","error","message","actions","InputMessageForm","token","decodedUser","jwt","newMsg","textMessage","authorMessage","style","IconButton","useStyles","makeStyles","root","justifyContent","myMsg","rootPaper","maxWidth","borderRadius","myMsgPaper","msgText","maxHeight","Message","timeMessage","colorNickName","Grid","item","xs","container","direction","wordWrap","ChatContainer","styled","Container","background","height","MessageContainer","_scrollRef","scrollTop","_scrollBarRef","map","moment","calendar","colorAuthorName","position","borderColor","borderWidth","ul","UsersList","isAdmin","users","userName","setMuteStatus","setBan","showUsersContainer","usersListMobile","usersCategories","Online","filter","onlineStatus","Offline","arr","List","subheader","index","key","listSection","ListSubheader","ListItem","ListItemText","primary","ButtonGroup","onClick","handleMute","handleBan","isBaned","SocketConnect","exists","instance","io","forceNew","setSocket","flexGrow","menuButton","title","Header","AppBar","Toolbar","edge","showHideUsersList","logout","ChatPage","currentUser","matchMedia","addListener","e","matches","initConnection","on","res","setOnlineUsers","IsMute","setIsMuteStatus","removeItem","emit","disconnect","sendMsg","getSocket","setIsLoggedIn","authActions","Home","to","keyCode","sendMessage","condRender","AppRouter","exact","path","history","createBrowserHistory","mainStore","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.438e9218.chunk.js","sourcesContent":["const initialState = {\n  onlineUsers: [],\n  allUsers: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n  isMuted: false,\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ONLINE_USERS\":\n      return {\n        ...state,\n        onlineUsers: action.onlineUsers,\n      };\n    case \"ALL_USERS\":\n      return {\n        ...state,\n        allUsers: action.allUsers,\n      };\n\n    case \"IS_CONNECTED\":\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case \"SET_SOCKET\":\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case \"ALL_MESSAGES\":\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    case \"IS_MUTED\":\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  isLoggedIn: false,\n  allUsers: [],\n  isConnected: false,\n  isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"IS_LOGGED_IN\":\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n      };\n    case \"IS_FETCHING\":\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport chatReducer from \"./chatReducers/chatReducer\";\nimport authReducer from \"./authReducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  chatReducer,\n  authReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      if (value.length < 3) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      if (/[^A-zА-яЁё0-9)]/.test(value)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: \"\",\n      password: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    let data = Object.assign({ id: null }, this.state);\n    this.reset();\n    this.props.handleSubmit(data);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    const { isFetching } = this.props;\n\n    return (\n      <ValidatorForm ref=\"form\" onSubmit={this.handleSubmit}>\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={[\n            \"required\",\n            \"moreThanThreeChar\",\n            \"notAllowedSpecialSymbols\",\n          ]}\n          errorMessages={[\n            \"this field is required\",\n            \"3 characters minimum\",\n            \"Not allowed special symbols\",\n          ]}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Save\n        </Button>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default SignInForm;\n","\nexport default class AuthService {\n    static loginUser = async (user) => {\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n        body: JSON.stringify(user)\n      })\n    };\n  }","import AuthService from \"../../../services/auth.service\";\n\nexport const isSignedInUser = (isLoggedIn) => {\n  return {\n    type: \"IS_LOGGED_IN\",\n    isLoggedIn,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: \"IS_FETCHING\",\n    isFetching,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then(async (response) => {\n        let a = await response.json();\n        return a;\n      })\n      .then((response) => {\n        if (response.status === 500) {\n          dispatch(setIsFetching(false));\n          alert(response.msg);\n        } else if (response.userToken && response.status === 200) {\n          localStorage.setItem(\"userToken\", response.userToken);\n          dispatch(isSignedInUser(true));\n        } else {\n          throw new Error(\"Unknown error\");\n        }\n      })\n      .catch((error) => {\n        alert(error.message);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    textAlign: 'center'\n  }\n})\n\nconst BoxCenter = ({classes, children}) => {\n  return (\n    <div>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          {children}\n        </Paper>\n      </main>\n      <p className={classes.text}>Build with <span role=\"img\" aria-label=\"Love\">❤️</span> by the <a href=\"https://material-ui.com\">Material-UI</a></p>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(BoxCenter)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\nimport randomColor from \"randomcolor\";\nimport { getRandomInt } from \"../../services/helpers\";\n\nconst colorsHues = [\"red\", \"orange\", \"yellow\", \"purple\", \"green\"];\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      didInvalidate: false,\n    };\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (token) {\n      window.location.href = \"/chat\";\n      return;\n    }\n  }\n\n  login({ id, username, password }) {\n    this.setState((state) => ({\n      isFetching: true,\n      didInvalidate: false,\n    }));\n\n    this.props\n      .signIn({\n        id: null,\n        nickName: username,\n        password: password,\n        nickNameColor: randomColor({\n          luminosity: \"dark\",\n          hue: colorsHues[getRandomInt(0, 5)],\n        }),\n      })\n      .catch((ex) => {\n        console.log(ex);\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isLoggedIn != this.props.isLoggedIn &&\n      this.props.isLoggedIn\n    ) {\n      window.location.href = \"/chat\";\n    }\n  }\n\n  render() {\n    const { isFetching } = this.props;\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm\n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n      </BoxCenter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","export function getRandomInt(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport moment from 'moment';\nimport jwt from \"jwt-decode\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass InputMessageForm extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n   \n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n\n  reset() {\n    this.setState((state) => ({\n      message: '',\n    }))\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value\n    const field = event.target.name\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit = () => {\n    let token = localStorage.getItem('userToken');\n    const decodedUser = jwt(token);\n    let newMsg = {id: null, textMessage: this.state.message, authorMessage: decodedUser.nickName};\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  }\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: 'flex'\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={['required', 'maxSymbols']}\n          errorMessages={['this field is required', 'maximum 200 symbols']}\n          margin=\"normal\"\n          style={{\n            width: '50%',\n\n          }}\n        />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default InputMessageForm;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    \n  },\n  rootPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#eaeaea'\n  },\n  myMsgPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#c1e2ce'\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName} = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}>\n        <Grid item xs container direction=\"column\" className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}> \n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport Message from './message';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport moment from 'moment';\n\nconst ChatContainer = styled(Container)({\n    background: 'inherit',\n    display: 'flex',\n    flexDirection: 'column',\n    height: 'inherit',\n    maxHeight: 'inherit',\n});\n\n\n\n\nconst MessageContainer = (props) => {\n    const { messages, username } = props;\n    this._scrollRef.scrollTop = 0; \n    return (\n    <PerfectScrollbar ref = {(ref) => { this._scrollBarRef = ref; }}>\n        <ChatContainer>\n              {messages.map((item)=> (\n                              <Message  timeMessage= {moment(item.timeMessage).calendar()} \n                                        authorMessage= {item.authorMessage} \n                                        textMessage= {item.textMessage}\n                                        username = {username}\n                                        colorNickName={item.colorAuthorName}\n                                        />\n              ) )}\n        </ChatContainer>\n        </PerfectScrollbar>\n    )\n}\n\nexport default MessageContainer;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    height: 'avalaible',\n    maxHeight: 'inherit',\n    borderColor: \"#000\",\n    borderWidth: 2,\n    backgroundColor: \"#eabf7d8c\",\n    top: 0,\n    left: 0,\n    \"@media (max-height:600px)\": {\n      height: 400,\n      maxHeight: 500,\n    },\n  },\n  ul: {\n    backgroundColor: \"#eabf7d8c\",\n    padding: 0,\n  },\n}));\n\nexport default function UsersList(props) {\n  const { isAdmin, users, userName, setMuteStatus, setBan, showUsersContainer, usersListMobile} = props;\n  const handleMute = (user) => {\n    setMuteStatus(user)\n  }\n\n  const handleBan = (user) => {\n    setBan(user)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  return (\n    <PerfectScrollbar ref = {(ref) => { this._scrollBarRef = ref; }}>\n    <List className={classes.root} subheader={<li />} \n      style={showUsersContainer ? \n      Object.assign({display: 'block'}, \n      usersListMobile ? \n      {position: 'absolute', backgroundColor: \"#abd28c\", height: 300} : \n      {position: 'initial'}) : \n      {display: 'none'}}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} style={{color: user.nickNameColor}}/>\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n    </PerfectScrollbar>\n  );\n}\n","import io from \"socket.io-client\";\n\nexport default  class SocketConnect {\n  constructor(token) {\n    if (SocketConnect.exists) {\n      return SocketConnect.instance\n    }\n    SocketConnect.instance = this\n    SocketConnect.exists = true\n    this.socket = io(`http://localhost:3000?token=${token}`, { forceNew: true });\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n}\n","import SocketConnect from \"../../../services/chat.service\";\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\n\nexport function setSocket(socket) {\n  return {\n    type: \"SET_SOCKET\",\n    socket,\n  };\n}\n\nexport function allOnlineUsers(onlineUsers) {\n  return {\n    type: \"ONLINE_USERS\",\n    onlineUsers,\n  };\n}\n\nexport function AllUsers(allUsers) {\n  return {\n    type: \"ALL_USERS\",\n    allUsers,\n  };\n}\n\nexport function isConnected(isConnected) {\n  return {\n    type: \"IS_CONNECTED\",\n    isConnected,\n  };\n}\n\nexport function allMessages(messages) {\n  return {\n    type: \"ALL_MESSAGES\",\n    messages,\n  };\n}\n\nexport function setIsMuteStatus(isMuted) {\n  return {\n    type: \"IS_MUTED\",\n    isMuted,\n  };\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={props.showHideUsersList}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} style={{color: props.colorNickName}}>\n            {props.username}\n          </Typography>\n          <Button onClick={props.logout} color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport * as authActions from \"../../redux/actions/authActions/auth.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport jwt from 'jwt-decode';\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 815,\n  position: 'relative',\n  maxHeight: 1000,\n  [\"@media (max-height:900px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 715,\n    maxHeight: 900,\n  },\n  [\"@media (max-height:800px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 615,\n    maxHeight: 800,\n  },\n  [\"@media (max-height:700px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 515,\n    maxHeight: 700,\n  },\n  [\"@media (max-height:600px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 415,\n    maxHeight: 600,\n  },\n  [\"@media (max-height:500px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 315,\n    maxHeight: 500,\n  },\n  [\"@media (max-height:400px)\"]: {\n    // eslint-disable-line no-useless-computed-key\n    height: 250,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      currentUser: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    const decodedUser = jwt(token);\n    window.matchMedia(\"(max-width: 400px)\").addListener((e)=>{ this.setState({usersListMobile: e.matches}); if(e.matches) {\n      this.setState({showUsersContainer: false});\n    }});\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setOnlineUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (res) =>{\n      alert(res.msg);\n      window.location.href = '/login';\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.props.setIsMuteStatus(IsMute);\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      localStorage.removeItem(\"userToken\");\n      window.location.href = '/login';\n    });\n    \n    this.colorNickName = decodedUser.nickNameColor;\n    this.setState({\n      isAdmin: decodedUser.isAdmin,\n      currentUser: decodedUser.nickName,\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(user) {\n    this.props.socket.emit(\"ban\", user.id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", JSON.stringify(message));\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n    const { isConnected, onlineUsers } = this.props;\n\n    const { isAdmin, currentUser, showUsersContainer, usersListMobile} = this.state;\n\n    return isConnected && onlineUsers.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={currentUser}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <ChatContainer>\n          <UsersList\n            users={onlineUsers}\n            isAdmin={isAdmin}\n            userName={currentUser}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n            usersListMobile = {usersListMobile}\n          />\n          <MessageContainer\n            messages={this.state.messages}\n            username={this.state.currentUser}\n          />\n        </ChatContainer>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n    // isConnected && onlineUsers.length > 0 ?\n\n    //  : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    onlineUsers: state.chatReducer.onlineUsers,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n    isMuted: state.chatReducer.isMuted,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setOnlineUsers: (onlineUsers) =>\n      dispatch(actions.allOnlineUsers(onlineUsers)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n    setIsMuteStatus: (status) => dispatch(actions.setIsMuteStatus(status)),\n    setIsLoggedIn: (status) => dispatch(authActions.isSignedInUser(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n        userToken: null,\n    }\n  }\n\n  async componentDidMount() {\n    const userToken = await localStorage.getItem('userToken');\n    if(userToken) {\n        this.setState({userToken: userToken})\n    } else {\n        this.setState({userToken: 'none'})\n    }\n  }\n\n condRender() {\n      if(this.state.userToken&&this.state.userToken!=='none'){\n          return <Redirect to={`/chat`} />;\n      } else { \n        return <Redirect to={`/login`} />;\n      }\n  }\n\n  sendMessage () {\n\n  }\n\n  sendMessageIfEnter (e) {\n    if (e.keyCode === 13) {\n      this.sendMessage()\n    }\n  }\n  render () {\n    return this.state.userToken ? this.condRender() : <div>Error loading page</div>; \n  }\n}\n\nexport default Home;","\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SignIn from './components/authPage/SignIn'\nimport ChatPage from './components/chatPage/chat'\nimport Home from './components/home'\n\n const AppRouter = () => \n(\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route  path=\"/login\" component={SignIn}/>\n          <Route path=\"/chat\" component={ChatPage}/>\n        </Switch>\n);\n\nexport default AppRouter;\n\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from './configure-store';\nimport { Router } from \"react-router-dom\";\nimport AppRouter from \"./router\";\nimport history from \"./services/history\";\n\nconst mainStore = store;\nconst App = () => {\n  return (\n  <Provider store={mainStore}>\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n   </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}