{"version":3,"sources":["redux/reducers/chatReducers/chatReducer.js","redux/reducers/authReducers/authReducer.js","redux/reducers/index.js","configure-store.js","components/auth/form/SignInForm.js","services/auth.service.js","components/auth/UI/box/Center.js","components/auth/SignIn.jsx","services/helpers.js","redux/actions/authActions/auth.actions.js","services/chat.service.js","components/chatPage/inputMessage.jsx","components/chatPage/message.jsx","components/chatPage/messageContainer.jsx","components/chatPage/usersContainer.jsx","redux/actions/chatActions/chat.actions.js","components/chatPage/chatHeader.jsx","components/chatPage/chat.jsx","components/home.jsx","router.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["initialState","onlineUsers","allUsers","isConnected","socket","messages","isMuted","rootReducer","combineReducers","chatReducer","state","action","type","authReducer","store","createStore","applyMiddleware","thunk","SignInForm","username","password","this","setState","isFetching","props","ref","onSubmit","handleSubmit","fullWidth","label","onChange","handleChange","name","value","validators","errorMessages","margin","Button","variant","color","disabled","CircularProgress","size","Component","AuthService","loginUser","user","a","fetch","method","headers","Accept","body","JSON","stringify","withStyles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","backgroundColor","palette","secondary","text","textAlign","classes","children","className","CssBaseline","Paper","role","aria-label","href","colorsHues","SignIn","didInvalidate","min","max","id","signIn","nickName","nickNameColor","randomColor","hue","Math","floor","random","then","res","console","log","localStorage","setItem","userToken","history","push","catch","ex","Avatar","Typography","component","data","login","to","connect","dispatch","response","json","error","actions","SocketConnect","token","exists","instance","io","forceNew","InputMessageForm","event","target","field","getItem","decodedUser","jwt","textMessage","message","authorMessage","reset","style","IconButton","useStyles","makeStyles","root","maxWidth","borderRadius","msgText","maxHeight","Message","timeMessage","Grid","container","item","xs","sm","direction","gutterBottom","ChatContainer","styled","Container","background","overflowY","window","innerHeight","MessageContainer","map","justify","b","moment","calendar","position","borderColor","borderWidth","listSection","ul","UsersList","isAdmin","users","userName","setMuteStatus","setBan","usersCategories","Online","filter","onlineStatus","Offline","arr","List","subheader","status","index","key","ListSubheader","ListItem","ListItemText","primary","ButtonGroup","onClick","handleMute","handleBan","isBaned","setSocket","flexGrow","menuButton","title","Header","AppBar","Toolbar","edge","colorNickName","logout","ChatPage","handleNewUserMessage","newMessage","currentUser","initConnection","on","setOnlineUsers","IsMute","setIsMuteStatus","reason","removeItem","emit","disconnect","length","sendMsg","getSocket","Home","e","keyCode","sendMessage","bind","sendMessageIfEnter","condRender","AppRouter","exact","path","createBrowserHistory","mainStore","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdaeb004.chunk.js","sourcesContent":["\n\nconst initialState = {\n  onlineUsers: [],\n  allUsers: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n  isMuted: false,\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ONLINE_USERS\":\n      return {\n        ...state,\n        onlineUsers: action.onlineUsers,\n      };\n    case \"ALL_USERS\":\n      return {\n        ...state,\n        allUsers: action.allUsers,\n      };\n\n      case \"IS_CONNECTED\":\n        return {\n          ...state,\n          isConnected: action.isConnected,\n        };\n        case \"SET_SOCKET\":\n          return {\n            ...state,\n            socket: action.socket,\n          };\n          case \"ALL_MESSAGES\":\n            return {\n              ...state,\n              messages: action.messages,\n            };\n            case \"IS_MUTED\":\n              return {\n                ...state,\n                messages: action.messages,\n              };\n    default:\n      return state;\n  }\n}\n","\n\nconst initialState = {\n  onlineUsers: [],\n  allUsers: [],\n  isConnected: false,\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ONLINE_USERS\":\n      return {\n        ...state,\n        onlineUsers: action.onlineUsers,\n      };\n    case \"ALL_USERS\":\n      return {\n        ...state,\n        allUsers: action.allUsers,\n      };\n\n      case \"IS_CONNECTED\":\n        return {\n          ...state,\n          isConnected: action.isConnected,\n        };\n    default:\n      return state;\n  }\n}","\nimport {combineReducers} from 'redux';\nimport chatReducer from './chatReducers/chatReducer';\nimport authReducer from './authReducers/authReducer';\n\nconst rootReducer = combineReducers({\n    chatReducer,\n    authReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n\nclass SignInForm extends Component {\n\n  constructor() {\n    this.state = {\n      username: '',\n      password: '',\n    }\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: '',\n      password: '',\n    }))\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value\n    const field = event.target.name\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit = () => {\n    this.props.handleSubmit(Object.assign({id: null}, this.state, ), () => this.reset())\n  }\n\n  render() {\n    const { username, password } = this.state\n    const { isFetching } = this.props\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={['required']}\n          errorMessages={['this field is required']}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type='password'\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={['required']}\n          errorMessages={['this field is required']}\n          margin=\"normal\"\n        />\n        <Button \n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Save\n        </Button>\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default SignInForm","\nexport default class AuthService {\n    static loginUser = async (user) => {\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n        body: JSON.stringify(user)\n      })\n      \n    };\n  \n    // static getOneDay = (dayNumber) => {\n    //   return fetch(\n    //     environments.jsonServerUrl + '/trainingSchedule' + '/' + dayNumber,\n    //     {\n    //       method: 'GET',\n    //     },\n    //   );\n    // };\n  \n    // static updateExercisesOfSelectedDay = (dayNumber, updatedExercisesList) => {\n    //   return fetch(\n    //     environments.jsonServerUrl + '/trainingSchedule' + '/' + dayNumber,\n    //     {\n    //       method: 'PUT',\n    //       body: JSON.stringify({\n    //         id: dayNumber,\n    //         exercises: updatedExercisesList,\n    //       }),\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //     },\n    //   );\n    // };\n  }","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    textAlign: 'center'\n  }\n})\n\nconst BoxCenter = ({classes, children}) => {\n  return (\n    <div>\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          {children}\n        </Paper>\n      </main>\n      <p className={classes.text}>Build with <span role=\"img\" aria-label=\"Love\">❤️</span> by the <a href=\"https://material-ui.com\">Material-UI</a></p>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(BoxCenter)\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Avatar from '@material-ui/core/Avatar';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport SignInForm from './form/SignInForm'\nimport * as actions from '../../redux/actions/authActions/auth.actions'\nimport BoxCenter from './UI/box/Center'\nimport AuthService from '../../services/auth.service';\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport randomColor from 'randomcolor';\nimport { getRandomInt } from '../../services/helpers';\n\nconst colorsHues = ['red', 'orange', 'yellow', 'purple', 'green']\n\nclass SignIn extends Component {\n\n  constructor(props) {\n    super(props)\n    \n  this.state = {\n    isFetching: false,\n    didInvalidate: false,\n  }\n  }\n\n\n   login({id, username, password}) {\n    this.setState((state) => ({\n      isFetching: true,\n      didInvalidate: false,\n    }))\n     \n    // AuthService.loginUser({id: null, nickName:username, password: password}).then( (response) => {\n\n\n    // });\n\n    // await localStorage.setItem('userToken', response.userToken)\n     \n   \n\n    this.props.signIn({id: null, nickName:username, password: password, nickNameColor: randomColor(\n      {\n        hue: colorsHues[getRandomInt(0, 5)]\n      }\n    )})\n    .then(res => {\n      console.log(res)\n      localStorage.setItem('userToken', res.userToken)\n      this.props.history.push(\"/chat\")\n    })\n    .catch(ex => {\n      this.setState((state) => ({\n        isFetching: false,\n        didInvalidate: true,\n      }))\n      console.log(ex)\n    })\n  }\n\n  render() {\n    const { isFetching } = this.state\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm \n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n        <p>Need an account? <Link to='/signup'>Sign up</Link></p>\n      </BoxCenter>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n   // allDays: state.sheduleReducer.allTrainingDays,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\n","export function getRandomInt(min, max) {\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n}","import AuthService from '../../../services/auth.service';\n\n\n\n// export const createUser = (user) => {\n//   return {\n//       type: types.AUTH_CREATE_USER,\n//       user,\n//   }\n// }\n\n// export const signInUser = (user) => {\n//   return {\n//       type: types.AUTH_SIGNIN_USER,\n//       user,\n//   }\n// }\n\nexport function signIn(user) {\n    return () => {\n          AuthService.loginUser(user).then((response) => {\n            console.log(response)\n            let a = response.json();\n            return  a;\n          }).catch(error => console.log(error));\n      };\n}\n\n// export function getOneDay(dayNumber) {\n    \n//   }\n\n// export const authLogoutUser = () => {\n//   return {\n//       type: types.AUTH_LOGOUT_USER\n//   }\n// }\n\n// export function logout(username, password) {\n//   return dispatch => {\n//     dispatch(authLogoutUser())\n//   }\n// }\n\n// export function signUp(user) {\n//   return dispatch => {\n//     return fetch(routes.signUp, {\n//       method: 'POST',\n//       headers,\n//       body: JSON.stringify(user)\n//     })\n//     .then(res => {\n//       if (res.ok) return res.json()\n//       return new Promise(function(_, reject) {\n//         reject(res)\n//       })\n//     })\n//     .then(body => {\n//       dispatch(signInUser(body))\n//       return new Promise(function(resolve) {\n//         resolve(body)\n//       })\n//     })\n//   }\n// }\n","import io from \"socket.io-client\";\n\nexport default  class SocketConnect {\n  constructor(token) {\n    if (SocketConnect.exists) {\n      return SocketConnect.instance\n    }\n    SocketConnect.instance = this\n    SocketConnect.exists = true\n    this.socket = io(`http://localhost:3000?token=${token}`, { forceNew: true });\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n}\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport moment from 'moment';\nimport jwt from \"jwt-decode\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass InputMessageForm extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n    }\n  }\n\n\n  reset() {\n    this.setState((state) => ({\n      message: '',\n    }))\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value\n    const field = event.target.name\n    this.setState({ [field]: value })\n  }\n\n  handleSubmit = () => {\n    let token = localStorage.getItem('userToken');\n    const decodedUser = jwt(token);\n    this.props.handleSubmit({id: null, textMessage: this.state.message, authorMessage: decodedUser.nickName});\n    this.reset();\n  }\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: 'flex'\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={['required']}\n          errorMessages={['this field is required']}\n          margin=\"normal\"\n          style={{\n            width: '50%',\n\n          }}\n        />\n      <IconButton aria-label=\"send\" type=\"submit\">\n        <SendIcon />\n      </IconButton>\n\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default InputMessageForm;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 0,\n    \n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: \"auto\",\n    maxWidth: 200,\n    borderRadius: 20\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n}));\n\nexport default function Message(props) {\n  const classes = useStyles();\n  const {timeMessage, authorMessage, textMessage} = props;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle2\">\n                  {authorMessage}\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                    {textMessage}\n                </Typography>\n\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {timeMessage}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator'\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport Message from './message';\nimport Grid from \"@material-ui/core/Grid\";\nimport jwt from \"jwt-decode\";\nimport moment from 'moment';\n\nconst ChatContainer = styled(Container)({\n    background: '#fff',\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'scroll',\n    maxHeight: window.innerHeight-150\n});\n\nconst isMyMsg = (a, b)=> {\n    return a===b ? 'flex-end' : 'flex-start'\n}\n\n\nconst MessageContainer = (props) => {\n    const { messages, username } = props; \n    return (\n        <ChatContainer>\n              {messages.map((item)=> (\n                        <Grid container justify = {isMyMsg(item.authorMessage, username)} spacing={3}>                        \n                            <Grid  item>\n                              <Message timeMessage= {moment(item.timeMessage).calendar()} authorMessage= {item.authorMessage} textMessage= {item.textMessage}/>\n                            </Grid>                          \n                        </Grid>\n              ) )}\n        </ChatContainer>\n    )\n}\n\nexport default MessageContainer;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    maxHeight: 300,\n    borderColor: \"#000\",\n    borderWidth: 2,\n    overflowY: \"scroll\",\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n}));\n\nexport default function UsersList(props) {\n  const { isAdmin, users, userName, setMuteStatus, setBan } = props;\n  const handleMute = (user) => {\n    setMuteStatus(user)\n  }\n\n  const handleBan = (user) => {\n\n    setBan(user)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  return (\n    <List className={classes.root} subheader={<li />}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} />\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n","import SocketConnect from \"../../../services/chat.service\";\nimport io from \"socket.io-client\";\n\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n    \n    if(socket) {\n\n      dispatch(setSocket(socket));\n    } \n  };\n}\n  \n// export function getOneDay(dayNumber) {\n//     return async (dispatch) => {\n//       await SheduleService.getOneDay(dayNumber)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(response => {\n//           dispatch(selectedDay(response));\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \n//   export function addExerciseOfSelectedDay(dayNumber, exerciseList) {\n//     return async (dispatch) => {\n//       await SheduleService.updateExercisesOfSelectedDay(dayNumber, exerciseList)\n//         .then(response => {\n//           dispatch(getAllDays());\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     };\n//   }\n  \nexport function setSocket(socket) {\n  return {\n    type: 'SET_SOCKET',\n    socket,\n  };\n}\n\n  export function allOnlineUsers(onlineUsers) {\n    return {\n      type: 'ONLINE_USERS',\n      onlineUsers,\n    };\n  }\n  \n  export function AllUsers(allUsers) {\n    return {\n      type: 'ALL_USERS',\n      allUsers,\n    };\n  }\n\n  export function isConnected(isConnected) {\n    return {\n      type: 'IS_CONNECTED',\n      isConnected,\n    };\n  }\n\n  export function allMessages(messages) {\n    return {\n      type: 'ALL_MESSAGES',\n      messages,\n    };\n  }\n\n  export function setIsMuteStatus(isMuted) {\n    return {\n      type: 'IS_MUTED',\n      isMuted,\n    };\n  }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} style={{color: props.colorNickName}}>\n            {props.username}\n          </Typography>\n          <Button onClick={props.logout} color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport ChatService from \"../../services/chat.service\";\nimport InputMessageForm from \"./inputMessage\";\nimport MessageContainer from \"./messageContainer\";\nimport UsersList from \"./usersContainer\";\nimport io from \"socket.io-client\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport jwt from \"jwt-decode\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chatHeader\";\nimport Box from '@material-ui/core/Box';\n\nconst ChatContainer = styled(Container)({\n  background: \"#fff\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n});\n\nclass ChatPage extends Component {\n  colorNickName = 'white';\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      currentUser: \"\",\n      isMuted: false\n    };\n  }\n\n  async componentDidMount() {\n    let token = await  localStorage.getItem('userToken');\n    if(!token) {\n      this.props.history.push('/login');\n      return;\n    }\n\n\n\n    await this.props.initConnection();\n    // this.props.socket.on(\"users\", (res) => dispatch(AllUsers(res)));\n    this.props.socket.on(\"onlineUsers\", (res) =>\n      this.props.setOnlineUsers(res)\n    );\n    this.props.socket.on(\"users\", (res) => {\n      this.props.setOnlineUsers(res);\n    });\n    this.props.socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n    this.props.socket.on(\"initialMuteStatus\", (IsMute) => this.props.setIsMuteStatus(IsMute))\n    this.props.socket.on(\"mute\", (IsMute) => {\n      debugger\n      console.log(IsMute);\n      this.props.setIsMuteStatus(IsMute)\n      this.setState({isMuted: IsMute})\n    })\n    this.props.socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    this.props.socket.on('connection', (socket) => {\n      this.props.socket.on('disconnect', (reason) => {\n        localStorage.removeItem('userToken')\n        this.props.history.push('/login')\n      });\n    });\n\n    this.props.socket.on('disconnect', (socket) => {\n\n        localStorage.removeItem('userToken')\n        this.props.history.push('/login')\n\n    });\n    this.props.socket.on('disconnected', (reason) => {\n\n    });\n    const decodedUser = jwt(token);\n    this.colorNickName = decodedUser.nickNameColor;\n    this.setState({\n      isAdmin: decodedUser.isAdmin,\n      currentUser: decodedUser.nickName,\n    });\n    // this.props.socket.emit(\"onlineUsers\", token);\n\n    this.props.isConnected(true);\n  }\n\n  async setMuteStatus (user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n\n  async setBan (user) {\n    this.props.socket.emit(\"ban\", user.id);\n  }\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  async sendMsg(message) {\n\n    this.setState({\n      messages: [...this.state.messages, message],\n    });\n    this.props.socket.emit(\"chat\", JSON.stringify(message));\n  }\n\n  async logout() {\n    await localStorage.removeItem('userToken')\n    this.props.socket.disconnect(true);\n    this.props.history.push('/login')\n  }\n\n  render() {\n    const { isConnected, onlineUsers,  } = this.props;\n\n    const { isAdmin, currentUser } = this.state;\n    return isConnected && onlineUsers.length > 0 ? (\n\n      <Container style={{display: 'flex', flexDirection: 'column'}}>\n        <Header username={currentUser} colorNickName={this.colorNickName} logout={()=>this.logout()}/>\n        <ChatContainer>\n          <UsersList\n            users={onlineUsers}\n            isAdmin={isAdmin}\n            userName={currentUser}\n            setMuteStatus={(user)=> this.setMuteStatus(user)}\n            setBan = {(user)=> this.setBan(user) }\n          />\n          <MessageContainer messages={this.state.messages} />\n        </ChatContainer>\n        {!this.state.isMuted ? <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} /> : null}\n      </Container>\n\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    onlineUsers: state.chatReducer.onlineUsers,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n    isMuted: state.chatReducer.isMuted,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setOnlineUsers: (onlineUsers) => dispatch(actions.allOnlineUsers(onlineUsers)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n    setIsMuteStatus: (status) => dispatch(actions.setIsMuteStatus(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n","import React, { Component } from 'react';\n// The CSS can be viewed at https://github.com/sohamkamani/react-chat-example/blob/master/src/TextBar.css\n\nimport {AccountCircle, VpnKey} from '@material-ui/icons/AccountCircle';\nimport {Redirect} from 'react-router-dom';\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n        userToken: null,\n    }\n  }\n\n  async componentDidMount() {\n    const userToken = await localStorage.getItem('userToken');\n    if(userToken) {\n        this.setState({userToken: userToken})\n    } else {\n        this.setState({userToken: 'none'})\n    }\n\n  }\n\n condRender() {\n     \n      if(this.state.userToken!=='none'){\n          return <Redirect to={`/login`} />;\n      } else { \n        return <Redirect to={`/login`} />;\n      }\n  }\n\n  sendMessage () {\n\n  }\n\n  sendMessageIfEnter (e) {\n    if (e.keyCode === 13) {\n      this.sendMessage()\n    }\n  }\n  render () {\n\n    const sendMessage = this.sendMessage.bind(this)\n    const sendMessageIfEnter = this.sendMessageIfEnter.bind(this)\n\n\n    return this.state.userToken ? this.condRender() : null;\n    \n  }\n}\n\nexport default Home;","\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SignIn from './components/auth/SignIn'\nimport ChatPage from './components/chatPage/chat'\nimport Home from './components/home'\n\n const AppRouter = () => \n(\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route  path=\"/login\" component={SignIn}/>\n          <Route path=\"/chat\" component={ChatPage}/>\n        </Switch>\n);\n\nexport default AppRouter;\n\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from './configure-store';\nimport { Router } from \"react-router-dom\";\nimport AppRouter from \"./router\";\nimport history from \"./services/history\";\n\nconst mainStore = store;\nconst App = () => {\n  return (\n  <Provider store={mainStore}>\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n   </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}