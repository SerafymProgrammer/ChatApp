{"version":3,"sources":["redux/reducers/chatReducers/chatReducer.js","redux/reducers/authReducers/authReducer.js","redux/reducers/index.js","configure-store.js","components/authPage/form/SignInForm.jsx","services/auth.service.js","redux/actions/authActions/auth.actions.js","components/authPage/UI/box/Center.jsx","constants.js","components/authPage/SignIn.jsx","services/helpers.js","components/chatPage/chat-components/inputMessage.jsx","components/chatPage/chat-components/message.jsx","components/chatPage/chat-components/messageContainer.jsx","components/chatPage/chat-components/usersContainer.jsx","services/chat.service.js","redux/actions/chatActions/chat.actions.js","components/chatPage/chat-components/chatHeader.jsx","components/chatPage/chat.jsx","components/home.jsx","router.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["initialState","allUsers","isConnected","socket","messages","isLoggedIn","isFetching","rootReducer","combineReducers","chatReducer","state","action","type","authReducer","store","createStore","applyMiddleware","thunk","SignInForm","props","handleChange","event","value","target","field","name","setState","handleSubmit","data","Object","assign","id","reset","username","password","ValidatorForm","addValidationRule","length","test","removeValidationRule","this","ref","onSubmit","fullWidth","label","onChange","validators","errorMessages","margin","Button","variant","color","disabled","CircularProgress","size","Component","AuthService","loginUser","user","a","fetch","method","headers","Accept","body","JSON","stringify","isSignedInUser","setIsFetching","withStyles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","text","textAlign","classes","children","className","Paper","colorsHues","SignIn","localStorage","getItem","window","location","href","min","max","signIn","nickName","nickNameColor","randomColor","luminosity","hue","Math","floor","random","catch","ex","alert","message","prevProps","Avatar","Typography","component","login","connect","dispatch","then","response","json","status","msg","userToken","Error","setItem","error","actions","InputMessageForm","token","decodedUser","jwt","newMsg","textMessage","authorMessage","isMobileWindow","matchMedia","addListener","e","matches","style","IconButton","aria-label","useStyles","makeStyles","root","justifyContent","myMsg","rootPaper","maxWidth","borderRadius","backgroundColor","myMsgPaper","msgText","maxHeight","Message","timeMessage","colorNickName","Grid","item","xs","container","direction","wordWrap","MessagesContainer","styled","Container","background","overflowY","height","paddingBottom","MessageContainer","myRef","useRef","useEffect","current","scrollTop","scrollHeight","map","index","key","moment","calendar","colorAuthorName","position","borderColor","borderWidth","top","left","ul","UsersList","isAdmin","users","userName","setMuteStatus","setBan","showUsersContainer","usersListMobile","usersCategories","Online","filter","onlineStatus","Offline","arr","List","subheader","listSection","ListSubheader","ListItem","ListItemText","primary","ButtonGroup","onClick","handleMute","isMuted","handleBan","isBaned","SocketConnect","exists","instance","io","forceNew","setSocket","flexGrow","menuButton","title","Header","AppBar","Toolbar","edge","showHideUsersList","logout","ChatContainer","ChatPage","currentUser","initConnection","on","res","setUsers","IsMute","setIsMuteStatus","removeItem","emit","disconnect","sendMsg","getSocket","setIsLoggedIn","authActions","Home","to","AppRouter","exact","path","history","createBrowserHistory","mainStore","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.09418ad3.chunk.js","sourcesContent":["const initialState = {\n  allUsers: [],\n  isConnected: false,\n  socket: null,\n  messages: [],\n};\n\nexport default function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ALL_USERS\":\n      return {\n        ...state,\n        allUsers: action.allUsers,\n      };\n\n    case \"IS_CONNECTED\":\n      return {\n        ...state,\n        isConnected: action.isConnected,\n      };\n    case \"SET_SOCKET\":\n      return {\n        ...state,\n        socket: action.socket,\n      };\n    case \"ALL_MESSAGES\":\n      return {\n        ...state,\n        messages: action.messages,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  isLoggedIn: false,\n  allUsers: [],\n  isConnected: false,\n  isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"IS_LOGGED_IN\":\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n      };\n    case \"IS_FETCHING\":\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport chatReducer from \"./chatReducers/chatReducer\";\nimport authReducer from \"./authReducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  chatReducer,\n  authReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"moreThanThreeChar\", (value) => {\n      if (value.length < 3) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule(\"notAllowedSpecialSymbols\", (value) => {\n      if (/[^A-zА-яЁё0-9]/.test(value)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"moreThanThreeChar\");\n    ValidatorForm.removeValidationRule(\"notAllowedSpecialSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      username: \"\",\n      password: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    let data = Object.assign({ id: null }, this.state);\n    this.reset();\n    this.props.handleSubmit(data);\n  };\n\n  render() {\n    const { username, password } = this.state;\n    const { isFetching } = this.props;\n\n    return (\n      <ValidatorForm ref=\"form\" onSubmit={this.handleSubmit}>\n        <TextValidator\n          fullWidth\n          label=\"Username\"\n          onChange={this.handleChange}\n          name=\"username\"\n          value={username}\n          validators={[\n            \"required\",\n            \"moreThanThreeChar\",\n            \"notAllowedSpecialSymbols\",\n          ]}\n          errorMessages={[\n            \"this field is required\",\n            \"3 characters minimum\",\n            \"Not allowed special symbols\",\n          ]}\n          margin=\"normal\"\n        />\n        <TextValidator\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          onChange={this.handleChange}\n          name=\"password\"\n          value={password}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isFetching}\n          margin=\"normal\"\n        >\n          {isFetching && <CircularProgress size={20} />} Sign In\n        </Button>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default SignInForm;\n","\nexport default class AuthService {\n    static loginUser = async (user) => {\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n        body: JSON.stringify(user)\n      })\n    };\n  }","import AuthService from \"../../../services/auth.service\";\n\nexport const isSignedInUser = (isLoggedIn) => {\n  return {\n    type: \"IS_LOGGED_IN\",\n    isLoggedIn,\n  };\n};\n\nexport const setIsFetching = (isFetching) => {\n  return {\n    type: \"IS_FETCHING\",\n    isFetching,\n  };\n};\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    await dispatch(setIsFetching(true));\n    await AuthService.loginUser(user)\n      .then(async (response) => {\n        let a = await response.json();\n        return a;\n      })\n      .then((response) => {\n        if (response.status === 500) {\n          dispatch(setIsFetching(false));\n          alert(response.msg);\n        } else if (response.userToken && response.status === 200) {\n          localStorage.setItem(\"userToken\", response.userToken);\n          dispatch(isSignedInUser(true));\n        } else {\n          throw new Error(\"Unknown error\");\n        }\n      })\n      .catch((error) => {\n        alert(error.message);\n        dispatch(setIsFetching(false));\n      });\n  };\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n  },\n  text: {\n    textAlign: 'center'\n  },\n})\n\nconst BoxCenter = ({classes, children}) => {\n  return (\n    <div>\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          {children}\n        </Paper>\n      </main>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(BoxCenter)\n","\nexport const colorsHues = [\"red\", \"orange\", \"yellow\", \"purple\", \"green\"];","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SignInForm from \"./form/SignInForm\";\nimport * as actions from \"../../redux/actions/authActions/auth.actions\";\nimport BoxCenter from \"./UI/box/Center\";\nimport randomColor from \"randomcolor\";\nimport { getRandomInt } from \"../../services/helpers\";\nimport {colorsHues} from '../../constants'; \n\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (token) {\n      window.location.href = \"/chat\";\n      return;\n    }\n  }\n\n  login({ id, username, password }) {\n\n    this.props\n      .signIn({\n        id: null,\n        nickName: username,\n        password: password,\n        nickNameColor: randomColor({\n          luminosity: \"dark\",\n          hue: colorsHues[getRandomInt(0, 5)],\n        }),\n      })\n      .catch((ex) => {\n        alert(ex.message);\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isLoggedIn !== this.props.isLoggedIn &&\n      this.props.isLoggedIn\n    ) {\n      window.location.href = \"/chat\";\n    }\n  }\n\n  render() {\n    const { isFetching } = this.props;\n\n    return (\n      <BoxCenter>\n        <Avatar>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <SignInForm\n          handleSubmit={(data) => this.login(data)}\n          isFetching={isFetching}\n        />\n      </BoxCenter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggedIn: state.authReducer.isLoggedIn,\n    isFetching: state.authReducer.isFetching,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signIn: (user) => dispatch(actions.signIn(user)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","export function getRandomInt(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}","import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport jwt from \"jwt-decode\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nclass InputMessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      isMobileWindow: false,\n    };\n  }\n\n  componentDidMount() {\n    window.matchMedia(\"(max-width: 400px)\").addListener((e) => {\n      this.setState({ isMobileWindow: e.matches });\n    });\n    ValidatorForm.addValidationRule(\"maxSymbols\", (value) => {\n      if (value.length > 200) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule(\"maxSymbols\");\n  }\n\n  reset() {\n    this.setState((state) => ({\n      message: \"\",\n    }));\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const field = event.target.name;\n    this.setState({ [field]: value });\n  };\n\n  handleSubmit = () => {\n    let token = localStorage.getItem(\"userToken\");\n    const decodedUser = jwt(token);\n    let newMsg = {\n      id: null,\n      textMessage: this.state.message,\n      authorMessage: decodedUser.nickName,\n    };\n    this.reset();\n    this.props.handleSubmit(newMsg);\n  };\n\n  render() {\n    const { message, isMobileWindow } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <TextValidator\n          fullWidth\n          label=\"Message\"\n          onChange={this.handleChange}\n          name=\"message\"\n          value={message}\n          validators={[\"required\", \"maxSymbols\"]}\n          errorMessages={[\"this field is required\", \"maximum 200 symbols\"]}\n          margin=\"normal\"\n          style={\n            isMobileWindow\n              ? {\n                  width: \"100%\",\n                }\n              : {\n                  width: \"50%\",\n                }\n          }\n        />\n        <IconButton aria-label=\"send\" type=\"submit\">\n          <SendIcon />\n        </IconButton>\n      </ValidatorForm>\n    );\n  }\n}\n\nexport default InputMessageForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-start\",\n  },\n  myMsg: {\n    display: \"flex\",\n    marginTop: 5,\n    justifyContent: \"flex-end\",\n    \n  },\n  rootPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#eaeaea'\n  },\n  myMsgPaper: {\n    padding: theme.spacing(1),\n    maxWidth: 200,\n    borderRadius: 20,\n    backgroundColor: '#c1e2ce'\n  },\n  msgText: {\n    margin: \"auto\",\n    display: \"block\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Message(props) {\n  const { timeMessage, authorMessage, textMessage, username, colorNickName} = props;\n  const classes = useStyles(\n    username === authorMessage ? \"flex-end\" : \"flex-start\"\n  );\n\n  return (\n    <div className={username === authorMessage ? classes.myMsg : classes.root}>\n      <Paper className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}>\n        <Grid item xs container direction=\"column\" className={username === authorMessage ? classes.myMsgPaper : classes.rootPaper}> \n          <Grid item xs>\n            <Typography  variant=\"subtitle2\" style={{color: colorNickName}} >\n              {authorMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body1\" style={{wordWrap: 'break-word'}}>\n              {textMessage}\n            </Typography>\n          </Grid>\n          <Grid item xs >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {timeMessage}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Message from \"./message\";\nimport moment from \"moment\";\n\nconst MessagesContainer = styled(Container)({\n  background: \"inherit\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflowY: \"scroll\",\n  height: \"inherit\",\n  maxHeight: \"inherit\",\n  paddingBottom: 10,\n});\n\nconst MessageContainer = (props) => {\n  const { messages, username } = props;\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    myRef.current.scrollTop = myRef.current.scrollHeight;\n  }, [messages, myRef]);\n\n  return (\n    <MessagesContainer ref={myRef}>\n      {messages.map((item, index) => (\n        <Message\n          key={`key-msg-${index}`}\n          timeMessage={moment(item.timeMessage).calendar()}\n          authorMessage={item.authorMessage}\n          textMessage={item.textMessage}\n          username={username}\n          colorNickName={item.colorAuthorName}\n        />\n      ))}\n    </MessagesContainer>\n  );\n};\n\nexport default MessageContainer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    position: \"relative\",\n    height: 'avalaible',\n    maxHeight: 'inherit',\n    borderColor: \"#000\",\n    borderWidth: 2,\n    backgroundColor: \"#eabf7d8c\",\n    top: 0,\n    left: 0,\n  },\n  ul: {\n    backgroundColor: \"#eabf7d8c\",\n    padding: 0,\n  },\n}));\n\nexport default function UsersList(props) {\n  const { isAdmin, users, userName, setMuteStatus, setBan, showUsersContainer, usersListMobile} = props;\n  const handleMute = (user) => {\n    setMuteStatus(user)\n  }\n\n  const handleBan = (user) => {\n    setBan(user)\n  }\n  \n  const classes = useStyles();\n  \n  const usersCategories = {\n    Online: users.filter((user)=>user.onlineStatus),\n    Offline: users.filter((user)=>!user.onlineStatus),\n  }\n\n  let arr = isAdmin ? [\"Online\", \"Offline\"] : [\"Online\"];\n\n  return (\n    <List className={classes.root} subheader={<li />} \n      style={showUsersContainer ? \n      Object.assign({display: 'block'}, \n      usersListMobile ? \n      {position: 'absolute', backgroundColor: \"#8cd2b5\", height: 300} : \n      {position: 'initial'}) : \n      {display: 'none'}}>\n      {arr.map((status, index) => (\n        <li key={`section-${index}`} className={classes.listSection}>\n          <ul className={classes.ul}>\n            <ListSubheader>{`${status}`}</ListSubheader>\n            {usersCategories[status].map((user) => (\n              <ListItem key={`${user.nickName}`}>\n                <ListItemText primary={`${user.nickName}`} style={{color: user.nickNameColor}}/>\n                {isAdmin && (user.nickName!==userName) ? (\n                  <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                  >\n                    <Button onClick={()=>handleMute(user)}> {user.isMuted ? 'unmute' : 'mute'}</Button>\n                    <Button onClick={()=>handleBan(user)}>{user.isBaned ? 'unban' : 'ban'}</Button>\n                  </ButtonGroup>\n                ) : null}\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </List>\n  );\n}\n","import io from \"socket.io-client\";\n\nexport default  class SocketConnect {\n  constructor(token) {\n    if (SocketConnect.exists) {\n      return SocketConnect.instance\n    }\n    SocketConnect.instance = this\n    SocketConnect.exists = true\n    this.socket = io(`http://localhost:3000?token=${token}`, { forceNew: true });\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n}\n","import SocketConnect from \"../../../services/chat.service\";\n\nexport function initWebSocketConnection(dispatch) {\n  return async () => {\n    let token = await localStorage.getItem(\"userToken\");\n    let socket = new SocketConnect(token).getSocket();\n\n    if (socket) {\n      dispatch(setSocket(socket));\n    }\n  };\n}\n\nexport function setSocket(socket) {\n  return {\n    type: \"SET_SOCKET\",\n    socket,\n  };\n}\n\nexport function AllUsers(allUsers) {\n  return {\n    type: \"ALL_USERS\",\n    allUsers,\n  };\n}\n\nexport function isConnected(isConnected) {\n  return {\n    type: \"IS_CONNECTED\",\n    isConnected,\n  };\n}\n\nexport function allMessages(messages) {\n  return {\n    type: \"ALL_MESSAGES\",\n    messages,\n  };\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={props.showHideUsersList}/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} style={{color: props.colorNickName}}>\n            {props.username}\n          </Typography>\n          <Button onClick={props.logout} color=\"inherit\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport InputMessageForm from \"./chat-components/inputMessage\";\nimport MessageContainer from \"./chat-components/messageContainer\";\nimport UsersList from \"./chat-components/usersContainer\";\nimport * as actions from \"../../redux/actions/chatActions/chat.actions\";\nimport * as authActions from \"../../redux/actions/authActions/auth.actions\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Header from \"./chat-components/chatHeader\";\nimport jwt from 'jwt-decode';\n\nconst ChatContainer = styled(Container)({\n  background: \"#6d81af\",\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  margin: 0,\n  padding: 0,\n  height: 800,\n  position: 'relative',\n  maxHeight: 1000,\n  \"@media (max-height:900px)\": {\n    height: 700,\n    maxHeight: 900,\n  },\n  \"@media (max-height:800px)\": {\n    height: 600,\n    maxHeight: 800,\n  },\n  \"@media (max-height:700px)\": {\n    height: 500,\n    maxHeight: 700,\n  },\n  \"@media (max-height:600px)\": {\n    height: 400,\n    maxHeight: 600,\n  },\n  \"@media (max-height:500px)\": {\n    height: 300,\n    maxHeight: 500,\n  },\n  \"@media (max-height:400px)\": {\n    height: 200,\n    maxHeight: 400,\n  },\n});\n\nclass ChatPage extends Component {\n  colorNickName = \"white\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isAdmin: false,\n      currentUser: \"\",\n      isMuted: false,\n      showUsersContainer: true,\n      usersListMobile: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.isConnected(false);\n  }\n\n  async componentDidMount() {\n    let token = await localStorage.getItem(\"userToken\");\n    if (!token) {\n      window.location.href = '/login';\n      return;\n    }\n    const decodedUser = jwt(token);\n    window.matchMedia(\"(max-width: 400px)\").addListener((e)=>{ this.setState({usersListMobile: e.matches}); });\n    await this.props.initConnection();\n\n    const {socket} = this.props;\n\n    socket.on(\"users\", (res) => {\n      this.props.setUsers(res);\n    });\n\n    socket.on(\"previousMessages\", (res) =>\n      this.setState({\n        messages: res,\n      })\n    );\n\n    socket.on(\"error\", (res) =>{\n      alert(res.msg);\n      window.location.href = '/login';\n    });\n\n    socket.on(\"initialMuteStatus\", (IsMute) =>{\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"mute\", (IsMute) => {\n      this.props.setIsMuteStatus(IsMute);\n      this.setState({ isMuted: IsMute });\n    });\n\n    socket.on(\"chat\", (res) =>\n      this.setState({\n        messages: [...this.state.messages, res],\n      })\n    );\n\n    socket.on(\"disconnect\", (socket) => {\n      localStorage.removeItem(\"userToken\");\n      window.location.href = '/login';\n    });\n    \n    this.colorNickName = decodedUser.nickNameColor;\n    this.setState({\n      isAdmin: decodedUser.isAdmin,\n      currentUser: decodedUser.nickName,\n    });\n\n    this.props.isConnected(true);\n  }\n\n  setMuteStatus(user) {\n    this.props.socket.emit(\"mute\", user.id);\n  }\n\n  setBan(user) {\n    this.props.socket.emit(\"ban\", user.id);\n  }\n\n  sendMsg(message) {\n    this.props.socket.emit(\"chat\", JSON.stringify(message));\n  }\n\n  async logout() {\n    await localStorage.removeItem(\"userToken\");\n    this.props.socket.disconnect(true);\n    window.location.href = '/login';\n  }\n\n  render() {\n\n    const { isConnected, allUsers } = this.props;\n    const { isAdmin, currentUser, showUsersContainer, usersListMobile} = this.state;\n\n    return isConnected && allUsers.length>0 ? (\n      <Container style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header\n          username={currentUser}\n          colorNickName={this.colorNickName}\n          showHideUsersList={() =>\n            this.setState({\n              showUsersContainer: !this.state.showUsersContainer,\n            })\n          }\n          logout={() => this.logout()}\n        />\n        <ChatContainer>\n          <UsersList\n            users={allUsers}\n            isAdmin={isAdmin}\n            userName={currentUser}\n            setMuteStatus={(user) => this.setMuteStatus(user)}\n            setBan={(user) => this.setBan(user)}\n            showUsersContainer={showUsersContainer}\n            usersListMobile = {usersListMobile}\n          />\n          <MessageContainer\n            messages={this.state.messages}\n            username={this.state.currentUser}\n          />\n        </ChatContainer>\n        {!this.state.isMuted ? (\n          <InputMessageForm handleSubmit={(message) => this.sendMsg(message)} />\n        ) : null}\n      </Container>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isConnected: state.chatReducer.isConnected,\n    allUsers: state.chatReducer.allUsers,\n    messages: state.chatReducer.messages,\n    socket: state.chatReducer.socket,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initConnection: () => dispatch(actions.initWebSocketConnection(dispatch)),\n    setUsers: (users) => dispatch(actions.AllUsers(users)),\n    isConnected: (status) => dispatch(actions.isConnected(status)),\n    setIsLoggedIn: (status) => dispatch(authActions.isSignedInUser(status)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatPage);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  render () {\n    return <Redirect to={`/login`} />; \n  }\n}\n\nexport default Home;","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SignIn from './components/authPage/SignIn'\nimport ChatPage from './components/chatPage/chat'\nimport Home from './components/home'\n\n const AppRouter = () => \n(\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route  path=\"/login\" component={SignIn}/>\n          <Route path=\"/chat\" component={ChatPage}/>\n        </Switch>\n);\n\nexport default AppRouter;\n\n\n\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from './configure-store';\nimport { Router } from \"react-router-dom\";\nimport AppRouter from \"./router\";\nimport history from \"./services/history\";\n\nconst mainStore = store;\nconst App = () => {\n  return (\n  <Provider store={mainStore}>\n    <Router history={history}>\n      <AppRouter />\n    </Router>\n   </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}